{
    "language": "fr",
    "type": "commands",
    "commands": [
        {
            "name": "about",
            "description": "Affiche les informations concernant le projet Drupal Console",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "about",
            "dashed": "about",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "chain",
            "description": "S\u00e9quence d'ex\u00e9cution de commandes",
            "options": [
                {
                    "name": "file",
                    "description": "Fichier utilisateur contenant les commandes \u00e0 \u00eatre ex\u00e9cut\u00e9es."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal chain \\\n  --file=\"\/path\/to\/file\/chain-file.yml\"\n"
                }
            ],
            "aliases": [],
            "key": "chain",
            "dashed": "chain",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "check",
            "description": "V\u00e9rificateur de configuration minimale syst\u00e8me",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "check",
            "dashed": "check",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "composerize",
            "description": "Converts Drupal codebase to composer.",
            "options": [
                {
                    "name": "show-packages",
                    "description": "Show list of packages."
                },
                {
                    "name": "include-version",
                    "description": "Include version on suggested result command."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "composerize",
            "dashed": "composerize",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "exec",
            "description": "Ex\u00e9cute une commande externe.",
            "options": [
                {
                    "name": "working-directory",
                    "description": "The current working directory."
                }
            ],
            "arguments": [
                {
                    "name": "bin",
                    "description": "Nom de l'ex\u00e9cutable."
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "exec",
            "dashed": "exec",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "help",
            "description": "Affiche de l'aide pour une commande",
            "options": [
                {
                    "name": "xml",
                    "description": "Pour obtenir la liste en XML"
                },
                {
                    "name": "raw",
                    "description": "Pour obtenir une liste de commandes brute"
                },
                {
                    "name": "format",
                    "description": "Le format de sortie (txt, xml, json, or md)"
                }
            ],
            "arguments": [
                {
                    "name": "command_name",
                    "description": "The command name"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "help",
            "dashed": "help",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "init",
            "description": "Copie les fichiers de configuration dans le r\u00e9pertoire d\u00e9di\u00e9 de l'utilisateur.",
            "options": [
                {
                    "name": "destination",
                    "description": "Destination directory to copy files"
                },
                {
                    "name": "site",
                    "description": "Use local site as destination."
                },
                {
                    "name": "override",
                    "description": "Surcharger les fichiers de configuration"
                },
                {
                    "name": "autocomplete",
                    "description": "Autocomplete tool files flag."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "init",
            "dashed": "init",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "list",
            "description": "Liste les commandes",
            "options": [
                {
                    "name": "xml",
                    "description": "Afficher la liste sous le format XML"
                },
                {
                    "name": "raw",
                    "description": "Afficher la liste sous un format brut"
                },
                {
                    "name": "format",
                    "description": "Le format de sortie (txt, xml, json, or md)"
                }
            ],
            "arguments": [
                {
                    "name": "namespace",
                    "description": "Le nom du namespace "
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "list",
            "dashed": "list",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "shell",
            "description": "Open a shell providing an interactive REPL (Read\u2013Eval\u2013Print-Loop).",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "shell",
            "dashed": "shell",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "server",
            "description": "Lance le serveur web PHP interne",
            "options": [],
            "arguments": [
                {
                    "name": "address",
                    "description": "Les valeurs adresse:port"
                }
            ],
            "examples": [
                {
                    "description": "Lancer en utilisant en argument la valeur d'adresse par d\u00e9faut 127.0.0.1:8088",
                    "execution": "serveur drupal"
                },
                {
                    "description": "Passer en argument une adresse pour utiliser un num\u00e9ro de port diff\u00e9rent",
                    "execution": "serveur drupal 127.0.0.1:8089"
                },
                {
                    "description": "Lancement avec en argument les valeurs d'adresse par d\u00e9faut, en utilisant l'option --root pour d\u00e9finir la racine Drupal",
                    "execution": "drupal --root=\/var\/www\/drupal8.dev server"
                }
            ],
            "aliases": [
                "serve",
                "rs"
            ],
            "key": "server",
            "dashed": "server",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "snippet",
            "description": "Runs PHP code",
            "options": [
                {
                    "name": "file",
                    "description": "Path to the file"
                },
                {
                    "name": "code",
                    "description": "Code to execute"
                },
                {
                    "name": "show-code",
                    "description": "Show code after execute"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Run using a file.",
                    "execution": "drupal snippet --file=\/path\/to\/file"
                },
                {
                    "description": "Passing code as option.",
                    "execution": "drupal snippet --code=codeToExecute"
                },
                {
                    "description": "Show code executed",
                    "execution": "drupal snippet --show-code --file=\/path\/to\/file"
                }
            ],
            "aliases": [],
            "key": "snippet",
            "dashed": "snippet",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "cache:rebuild",
            "description": "Reconstruit l'ensemble des caches du site.",
            "options": [],
            "arguments": [
                {
                    "name": "cache",
                    "description": "Reconstruire un cache sp\u00e9cifique."
                }
            ],
            "examples": [
                {
                    "description": "Reconstruire l'ensemble des caches",
                    "execution": "drupal cr all"
                },
                {
                    "description": "Reconstruire le cache \"discovery\"",
                    "execution": "drupal cr discovery"
                }
            ],
            "aliases": [
                "cr",
                "cc"
            ],
            "key": "cache.rebuild",
            "dashed": "cache-rebuild",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "cache:tag:invalidate",
            "description": "Invalidate cache tags.",
            "options": [],
            "arguments": [
                {
                    "name": "tag",
                    "description": "One or more tags to invalidate."
                }
            ],
            "examples": [
                {
                    "description": "Invalidate routes",
                    "execution": "drupal cti routes"
                },
                {
                    "description": "Invalidate a specific node",
                    "execution": "drupal cti node:1 node_list"
                }
            ],
            "aliases": [
                "cti"
            ],
            "key": "cache.tag.invalidate",
            "dashed": "cache-tag-invalidate",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:delete",
            "description": "Supprimer la configuration",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Type de configuration."
                },
                {
                    "name": "name",
                    "description": "Nom de la configuration"
                }
            ],
            "examples": [
                {
                    "description": "Provide a config type and a config name",
                    "execution": "drupal config:delete active all"
                }
            ],
            "aliases": [
                "cd"
            ],
            "key": "config.delete",
            "dashed": "config-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:diff",
            "description": "Affiche les items de configuration qui sont diff\u00e9rents dans la configuration active par rapport \u00e0 un dossier.",
            "options": [
                {
                    "name": "reverse",
                    "description": "Voir les changements \u00e0 l'envers (par exemple les diff\u00e9rences d'un dossier par rapport \u00e0 la configuration active)."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "Le dossier \u00e0 partir duquel comparer. S'il n'est pas renseign\u00e9, choisir dans les r\u00e9pertoires de configuration de Drupal."
                }
            ],
            "examples": [
                {
                    "description": "Provide a config directory",
                    "execution": "drupal config:diff ..\/config\/path"
                }
            ],
            "aliases": [
                "cdi"
            ],
            "key": "config.diff",
            "dashed": "config-diff",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:edit",
            "description": "\u00c9diter la configuration s\u00e9lectionn\u00e9e.",
            "options": [],
            "arguments": [
                {
                    "name": "config-name",
                    "description": "Nom de la configuration."
                },
                {
                    "name": "editor",
                    "description": "Editeur."
                }
            ],
            "examples": [
                {
                    "description": "Edit system cron configurations with \"vim\" (default editor).",
                    "execution": "drupal config:edit system.cron"
                },
                {
                    "description": "Edit system cron configurations with \"gedit\".",
                    "execution": "drupal config:edit system.cron gedit"
                }
            ],
            "aliases": [
                "ced",
                "cdit"
            ],
            "key": "config.edit",
            "dashed": "config-edit",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:export",
            "description": "Exporte la configuration actuelle de l'application.",
            "options": [
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                },
                {
                    "name": "tar",
                    "description": "If set, the configuration will be exported to an archive file."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Optional you can add the path to export",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\""
                },
                {
                    "description": "If export will be in a compressed file and\/or if uuid and config hashes will be removed.",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\" \\\n  --tar \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ce"
            ],
            "key": "config.export",
            "dashed": "config-export",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:export:content:type",
            "description": "Exporte un type de contenu avec les champs qui le composent.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "optional-config",
                    "description": "Export du type de contenu dans votre module sous la forme d'un fichier YAML de configuration optionnelle"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                },
                {
                    "name": "include-module-dependencies",
                    "description": "Include content type module dependencies in module info YAML file"
                }
            ],
            "arguments": [
                {
                    "name": "content-type",
                    "description": "Le type de contenu \u00e0 exporter"
                }
            ],
            "examples": [
                {
                    "description": "Provide a content type  and module name",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\""
                },
                {
                    "description": "If you want export content type provide the optional config",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\" \\\n  --optional-config \n"
                }
            ],
            "aliases": [
                "cect"
            ],
            "key": "config.export.content.type",
            "dashed": "config-export-content-type",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:export:entity",
            "description": "Export a specific config entity and their fields.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "optional-config",
                    "description": "Export bundle as an optional YAML configuration in your module"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                },
                {
                    "name": "include-module-dependencies",
                    "description": "Include bundle module dependencies in module info YAML file"
                }
            ],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "An entity type (node_type, taxonomy_vocabulary, paragraphs_type) to be exported"
                },
                {
                    "name": "bundle",
                    "description": "A bundle to be exported"
                }
            ],
            "examples": [
                {
                    "description": "Provide an entity type, a bundle and a module name",
                    "execution": "drupal config:export:entity node_type page \\\n  --module=\"demo\""
                },
                {
                    "description": "If you want export a bundle as an optional config",
                    "execution": "drupal config:export:entity node_type page \\\n  --module=\"demo\" \\\n  --optional-config \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "cee"
            ],
            "key": "config.export.entity",
            "dashed": "config-export-entity",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:export:single",
            "description": "Exporte une unique configuration sous la forme d'un fichier YAML.",
            "options": [
                {
                    "name": "name",
                    "description": "Configuration name."
                },
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "include-dependencies",
                    "description": "Exportez \u00e9galement les d\u00e9pendances d'une configuration."
                },
                {
                    "name": "optional",
                    "description": "Export config as an optional YAML configuration in your module"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide config settings name to be exported",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name"
                },
                {
                    "description": "if uuid and\/or config hashes will be removed.",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ces"
            ],
            "key": "config.export.single",
            "dashed": "config-export-single",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:export:view",
            "description": "Exporte une vue vue dans le format YAML au sein d'un module pour la r\u00e9utiliser sur un autre site.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "optional-config",
                    "description": "Exporter la vue dans un module comme une configuration optionnelle dans votre module"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "Inclure les d\u00e9pendances de module dans le fichier info YAML du module"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "Identifiant de la vue"
                }
            ],
            "examples": [
                {
                    "description": "Provide a view id",
                    "execution": "drupal config:export:view viewid"
                },
                {
                    "description": "You can provide the interactive values like parameter.",
                    "execution": "drupal config:export:view viewid \\\n  --module=\"modulename\" \\\n  --optional-config \\\n  --include-module-dependencies\n"
                },
                {
                    "description": "Export as config for the provided module, updating the module's info.yml with any module dependencies from the view.",
                    "execution": "drupal config:export:view viewid \\\n  --module=\"modulename\" \\\n  --optional-config \\\n  --include-module-dependencies"
                }
            ],
            "aliases": [
                "cev"
            ],
            "key": "config.export.view",
            "dashed": "config-export-view",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:import",
            "description": "Importe une configuration dans le site courant.",
            "options": [
                {
                    "name": "file",
                    "description": "Path to an archive file of configuration to import."
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                },
                {
                    "name": "remove-files",
                    "description": "Remove files after synchronization."
                },
                {
                    "name": "skip-uuid",
                    "description": "Skip uuid from files"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide a configuration file",
                    "execution": "drupal config:import \\\n  --file=\/path\/to\/config\/file"
                },
                {
                    "description": "Provide a configuration directory",
                    "execution": "drupal config:import  \\\n  --directory=\/path\/to\/config\/dir\n"
                }
            ],
            "aliases": [
                "ci"
            ],
            "key": "config.import",
            "dashed": "config-import",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:import:single",
            "description": "Importer la configuration s\u00e9lectionn\u00e9e.",
            "options": [
                {
                    "name": "file",
                    "description": "The file(s) name or file(s) absolute path to import"
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal config:import:single \\\n  --file=\"\/path\/to\/file\/block.block.default_block.yml\""
                },
                {
                    "description": "Providing file and directory options",
                    "execution": "drupal config:import:single  \\\n  --file=\"block.block.default_block.yml\" \\\n  --directory=\"\/path\/to\/directory\"\n"
                }
            ],
            "aliases": [
                "cis"
            ],
            "key": "config.import.single",
            "dashed": "config-import-single",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:override",
            "description": "Surcharge la valeur d'une configuration dans la configuration active.",
            "options": [
                {
                    "name": "key",
                    "description": "Key"
                },
                {
                    "name": "value",
                    "description": "Value"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Nom de la configuration"
                }
            ],
            "examples": [
                {
                    "description": "D\u00e9finir la valeur de \"flood\" du module Contact \u00e0 10.",
                    "execution": "drupal config:override contact.settings flood.limit 10"
                }
            ],
            "aliases": [
                "co"
            ],
            "key": "config.override",
            "dashed": "config-override",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "config:validate",
            "description": "Validate a drupal config against its schema",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Provide the configuration name.",
                    "execution": "drupal config:validate configuration.name"
                }
            ],
            "aliases": [
                "cv"
            ],
            "key": "config.validate",
            "dashed": "config-validate",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "create:comments",
            "description": "Cr\u00e9\u00e9 des commentaires factices pour votre application Drupal 8.",
            "options": [
                {
                    "name": "limit",
                    "description": "Nombre de commentaires \u00e0 cr\u00e9er"
                },
                {
                    "name": "title-words",
                    "description": "Le nombre maximum de mots dans les titres des commentaire."
                },
                {
                    "name": "time-range",
                    "description": "A partir de quelle date les commentaires doivent \u00eatre g\u00e9n\u00e9r\u00e9s ?"
                }
            ],
            "arguments": [
                {
                    "name": "node-id",
                    "description": "L'ID du noeud o\u00f9 les commentaires vont \u00eatre cr\u00e9\u00e9s."
                }
            ],
            "examples": [
                {
                    "description": "Provide the node id where the comments will be generated.",
                    "execution": "drupal create:comments  node-id"
                },
                {
                    "description": "Provide number of comments to generate, max title words and time range.",
                    "execution": "drupal create:comments  node-id \\\n  --limit=\"2\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "crc"
            ],
            "key": "create.comments",
            "dashed": "create-comments",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "create:nodes",
            "description": "Cr\u00e9er des n\u0153uds factices pour votre application Drupal 8.",
            "options": [
                {
                    "name": "limit",
                    "description": "Combien de n\u0153uds voulez-vous g\u00e9n\u00e9rer"
                },
                {
                    "name": "title-words",
                    "description": "Nombre de mots maximum des titres"
                },
                {
                    "name": "time-range",
                    "description": "De combien de temps au maximum doivent dater les n\u0153uds g\u00e9n\u00e9r\u00e9s"
                },
                {
                    "name": "revision",
                    "description": "Create revisions"
                },
                {
                    "name": "language",
                    "description": "commands.create.nodes.options.language"
                }
            ],
            "arguments": [
                {
                    "name": "content-types",
                    "description": "Le(s) type(s) de contentu \u00e0 utiliser pour la cr\u00e9ation de n\u0153uds"
                }
            ],
            "examples": [
                {
                    "description": "Provide the content type name.",
                    "execution": "drupal create:nodes content-name"
                },
                {
                    "description": "Provide the limit of publications, limit of title words, time range and language.",
                    "execution": "drupal create:nodes content-name \\\n  --limit=\"5\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\" \\\n  --language=\"und\"\n"
                }
            ],
            "aliases": [
                "crn"
            ],
            "key": "create.nodes",
            "dashed": "create-nodes",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "create:roles",
            "description": "Create dummy roles for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many roles would you like to create"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide roles.",
                    "execution": "drupal create:roles"
                },
                {
                    "description": "Provide the number of roles to create",
                    "execution": "drupal create:roles\n"
                }
            ],
            "aliases": [
                "crr"
            ],
            "key": "create.roles",
            "dashed": "create-roles",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "create:terms",
            "description": "G\u00e9n\u00e8re des termes de taxonomie factices pour votre application Drupal 8.",
            "options": [
                {
                    "name": "limit",
                    "description": "Combien de termes voulez-vous g\u00e9n\u00e9rer"
                },
                {
                    "name": "name-words",
                    "description": "Nombre maximums de mots des noms des termes"
                }
            ],
            "arguments": [
                {
                    "name": "vocabularies",
                    "description": "Vocabulaire(s) \u00e0 utiliser lors de la g\u00e9n\u00e9ration des termes"
                }
            ],
            "examples": [
                {
                    "description": "Provide the vocabulary term name.",
                    "execution": "drupal create:terms vocabulary"
                },
                {
                    "description": "Provide the limit of terms to add and limit of title words.",
                    "execution": "drupal create:terms tags \\\n  --limit=\"10\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crt"
            ],
            "key": "create.terms",
            "dashed": "create-terms",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "create:users",
            "description": "G\u00e9n\u00e8re des utilisateurs factices pour votre application Drupal 8.",
            "options": [
                {
                    "name": "limit",
                    "description": "Nombre d'utilisateurs \u00e0 cr\u00e9er"
                },
                {
                    "name": "password",
                    "description": "Mot de passe associ\u00e9 aux utilisateurs cr\u00e9\u00e9s"
                },
                {
                    "name": "time-range",
                    "description": "De combien de temps au maximum doivent dater les comptes utilisateurs g\u00e9n\u00e9r\u00e9es ?"
                }
            ],
            "arguments": [
                {
                    "name": "roles",
                    "description": "Les r\u00f4le(s) \u00e0 utiliser pour la cr\u00e9ation d'utilisateurs"
                }
            ],
            "examples": [
                {
                    "description": "Provide the user role.",
                    "execution": "drupal create:users role"
                },
                {
                    "description": "Provide the number of users to create, password and time range to create.",
                    "execution": "drupal create:users role \\\n  --limit=\"5\" \\\n  --password=\"usersnewpassword\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "cru"
            ],
            "key": "create.users",
            "dashed": "create-users",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "create:vocabularies",
            "description": "G\u00e9n\u00e8re des vocabulaires factices pour votre application Drupal",
            "options": [
                {
                    "name": "limit",
                    "description": "Nombre de vocabulaires \u00e0 cr\u00e9er"
                },
                {
                    "name": "name-words",
                    "description": "Nombre maximum de mots des vocabulaires"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide the number of vocabularies to create and maximum number of words in vocabulary names",
                    "execution": "drupal create:vocabularies \\\n  --limit=\"5\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crv"
            ],
            "key": "create.vocabularies",
            "dashed": "create-vocabularies",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "cron:execute",
            "description": "Lancer une t\u00e2che cron d'un module particulier ou l'ensembles des t\u00e2ches",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                }
            ],
            "examples": [
                {
                    "description": "Lance le cron global",
                    "execution": "drupal cron:execute\n"
                },
                {
                    "description": "Lance les taches cron du module sp\u00e9cifi\u00e9",
                    "execution": "drupal cron:execute \\\n  <module>\n"
                }
            ],
            "aliases": [
                "croe",
                "cre"
            ],
            "key": "cron.execute",
            "dashed": "cron-execute",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "cron:release",
            "description": "Rel\u00e2che le verrou li\u00e9 au cron afin de pouvoir le relancer",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                }
            ],
            "aliases": [
                "cror"
            ],
            "key": "cron.release",
            "dashed": "cron-release",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:add",
            "description": "Add a database to settings.php",
            "options": [
                {
                    "name": "database",
                    "description": "The database name"
                },
                {
                    "name": "username",
                    "description": "The database username"
                },
                {
                    "name": "password",
                    "description": "The database password"
                },
                {
                    "name": "prefix",
                    "description": "The database prefix"
                },
                {
                    "name": "host",
                    "description": "The database host address"
                },
                {
                    "name": "port",
                    "description": "The database host port"
                },
                {
                    "name": "driver",
                    "description": "The database driver"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Add a database to the settings.php",
                    "execution": "drupal database:add \\\n  --database=DATABASE \\\n  --username=USERNAME \\\n  --password=PASSWORD\n"
                }
            ],
            "aliases": [
                "dba"
            ],
            "key": "database.add",
            "dashed": "database-add",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:client",
            "description": "Lancer une base de donn\u00e9es client si disponible",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cl\u00e9 de la base de donn\u00e9es depuis settings.php"
                },
                {
                    "name": "target",
                    "description": "Database target from settings.php"
                }
            ],
            "examples": [
                {
                    "description": "Launch the default client or could launch another regarding the specification on the argument",
                    "execution": "drupal database:client <database>\n"
                }
            ],
            "aliases": [
                "dbc"
            ],
            "key": "database.client",
            "dashed": "database-client",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:connect",
            "description": "Lancer une base de donn\u00e9e client si disponible",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "Database key from settings.php"
                },
                {
                    "name": "target",
                    "description": "Database target from settings.php"
                }
            ],
            "examples": [
                {
                    "description": "Connects to an specified database, or the default if not arguments passed",
                    "execution": "drupal database:connect \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbco",
                "sqlc"
            ],
            "key": "database.connect",
            "dashed": "database-connect",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:drop",
            "description": "Supprime toutes les tables d'une base de donn\u00e9es.",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cl\u00e9 de la base de donn\u00e9es du fichier settings.php"
                },
                {
                    "name": "target",
                    "description": "Database target from settings.php"
                }
            ],
            "examples": [
                {
                    "description": "Drop the tables on the database specified on the argument",
                    "execution": "drupal database:drop \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbd"
            ],
            "key": "database.drop",
            "dashed": "database-drop",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:dump",
            "description": "Exporte la structure et le contenu de votre base de donn\u00e9es MySQL",
            "options": [
                {
                    "name": "file",
                    "description": "Le nom du fichier pour votre sauvegarde de base de donn\u00e9es"
                },
                {
                    "name": "gz",
                    "description": "Pass this option if you want the sql result file gzipped"
                },
                {
                    "name": "exclude-cache",
                    "description": "commands.database.dump.options.exclude.cache"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cl\u00e9 de la base de donn\u00e9es du fichier settings.php"
                },
                {
                    "name": "target",
                    "description": "Database target from settings.php"
                }
            ],
            "examples": [
                {
                    "description": "Dump default database or the one specified on the argument",
                    "execution": "drupal database:dump \\\n  <database>"
                },
                {
                    "description": "Dump in gz compressed format",
                    "execution": "drupal database:dump \\\n  --gz"
                }
            ],
            "aliases": [
                "dbdu"
            ],
            "key": "database.dump",
            "dashed": "database-dump",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:log:clear",
            "description": "Vide la table DBLog contenant les \u00e9v\u00e9nements, avec possibilit\u00e9 de fitrer",
            "options": [
                {
                    "name": "type",
                    "description": "Filtrer les \u00e9v\u00e9nements selon un type sp\u00e9cifique"
                },
                {
                    "name": "severity",
                    "description": "Filtrer les \u00e9v\u00e9nements selon un niveau sp\u00e9cifique de s\u00e9v\u00e9rit\u00e9"
                },
                {
                    "name": "user-id",
                    "description": "Filtrer les \u00e9v\u00e9nements selon un user id sp\u00e9cifique"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "ID de l'\u00e9v\u00e9nement DBLog"
                }
            ],
            "examples": [
                {
                    "description": "Clear the database log from DBLog table",
                    "execution": "drupal database:log:clear \\\n  <database>"
                },
                {
                    "description": "Clear the database log from DBLog table using filters",
                    "execution": "drupal database:log:clear \\\n  <database> \\\n  --type=TYPE \\\n  --severity=SEVERITY"
                }
            ],
            "aliases": [
                "dblc"
            ],
            "key": "database.log.clear",
            "dashed": "database-log-clear",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:log:poll",
            "description": "Poll the watchdog and print new log entries every x seconds",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                }
            ],
            "arguments": [
                {
                    "name": "duration",
                    "description": "Duration in seconds which to sleep between database reads"
                }
            ],
            "examples": [
                {
                    "description": "Print the log entries on screen every x seconds",
                    "execution": "drupal database:log:poll \\\n  100\n"
                }
            ],
            "aliases": [
                "dblp"
            ],
            "key": "database.log.poll",
            "dashed": "database-log-poll",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:query",
            "description": "Executes a SQL statement directly as argument",
            "options": [
                {
                    "name": "quick",
                    "description": "Do not cache each query result, print each row as it is received"
                },
                {
                    "name": "debug",
                    "description": "Prints debugging information and memory and CPU usage statistics when the program exits"
                },
                {
                    "name": "html",
                    "description": "Produce HTML output"
                },
                {
                    "name": "xml",
                    "description": "Produce XML output"
                },
                {
                    "name": "raw",
                    "description": "Special characters are not escaped in the output."
                },
                {
                    "name": "vertical",
                    "description": "Print query output rows vertically"
                },
                {
                    "name": "batch",
                    "description": "Print results using tab as the column separator, with each row on a new line. With this option, mysql does not use the history file"
                }
            ],
            "arguments": [
                {
                    "name": "query",
                    "description": "The SQL statement to execute"
                },
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                },
                {
                    "name": "target",
                    "description": "Database target from settings.php"
                }
            ],
            "examples": [
                {
                    "description": "Send a database query",
                    "execution": "drupal database:query 'select * from node limit 0,1'\n"
                }
            ],
            "aliases": [
                "dbq",
                "sqlq"
            ],
            "key": "database.query",
            "dashed": "database-query",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "database:restore",
            "description": "Restaure la structure et le contenu de votre base de donn\u00e9es MySQL depuis une sauvegarde",
            "options": [
                {
                    "name": "file",
                    "description": "Le nom du fichier de votre sauvegarde de base de donn\u00e9es"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cl\u00e9 de la base de donn\u00e9es du fichier settings.php"
                },
                {
                    "name": "target",
                    "description": "Database target from settings.php"
                }
            ],
            "examples": [
                {
                    "description": "Restore the database file dump to the database default or another one specified",
                    "execution": "drupal database:restore \\\n  --file='\/srv\/dump\/db.sql'\n"
                }
            ],
            "aliases": [
                "dbr"
            ],
            "key": "database.restore",
            "dashed": "database-restore",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:breakpoints",
            "description": "Affiche les breakpoints disponibles dans l'application",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Entrer le nom du groupe de breakpoints"
                }
            ],
            "examples": [
                {
                    "description": "Provide a group name.",
                    "execution": "drupal breakpoints:debug bartik"
                }
            ],
            "aliases": [
                "dbre"
            ],
            "key": "debug.breakpoints",
            "dashed": "debug-breakpoints",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:cache:context",
            "description": "Affiche le contexte de cache courant pour l'application.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays cache context",
                    "execution": "drupal debug:cache:context\n"
                }
            ],
            "aliases": [
                "dcc"
            ],
            "key": "debug.cache.context",
            "dashed": "debug-cache-context",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:chain",
            "description": "Liste des fichiers chain disponibles",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dch"
            ],
            "key": "debug.chain",
            "dashed": "debug-chain",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:config",
            "description": "Affiche la configuration actuelle.",
            "options": [
                {
                    "name": "show-overridden",
                    "description": "Show overridden configurations."
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Nom de la configuration."
                }
            ],
            "examples": [
                {
                    "description": "Liste tous les noms de configuration.",
                    "execution": "drupal config:debug"
                },
                {
                    "description": "Affiche les valeurs de configuration pour system.site.",
                    "execution": "drupal config:debug system.site"
                },
                {
                    "description": "Liste l''ensemble des nom de configuration de l'objet system.",
                    "execution": "drupal config:debug | grep system"
                },
                {
                    "description": "List all configuration including overridden values.",
                    "execution": "drupal debug:config --show-overridden"
                }
            ],
            "aliases": [
                "dc"
            ],
            "key": "debug.config",
            "dashed": "debug-config",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:config:settings",
            "description": "Affiche la paire key:value du fichier de configuration.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays key:value as per the settings file",
                    "execution": "drupal debug:config:settings\n"
                }
            ],
            "aliases": [
                "dcs"
            ],
            "key": "debug.config.settings",
            "dashed": "debug-config-settings",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:config:validate",
            "description": "Validate a schema implementation before a module is installed.",
            "options": [
                {
                    "name": "schema-name",
                    "description": ""
                }
            ],
            "arguments": [
                {
                    "name": "filepath",
                    "description": ""
                },
                {
                    "name": "schema-filepath",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:config:validate \\\n  \/path\/to\/file \\\n  \/path\/to\/schema-filepath\n"
                }
            ],
            "aliases": [
                "dcv"
            ],
            "key": "debug.config.validate",
            "dashed": "debug-config-validate",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:container",
            "description": "Affiche les services actuels d'une application.",
            "options": [
                {
                    "name": "parameters",
                    "description": "Nom du service."
                },
                {
                    "name": "tag",
                    "description": "Service tag "
                }
            ],
            "arguments": [
                {
                    "name": "service",
                    "description": "Nom du service."
                },
                {
                    "name": "method",
                    "description": "Method name."
                },
                {
                    "name": "arguments",
                    "description": "Array of Arguments in CSV or JSON format."
                }
            ],
            "examples": [
                {
                    "description": "Displays the views.views_data_helper services",
                    "execution": "drupal debug:container views.views_data_helper\n"
                }
            ],
            "aliases": [
                "dco",
                "cod"
            ],
            "key": "debug.container",
            "dashed": "debug-container",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:cron",
            "description": "Liste des modules impl\u00e9mentant une t\u00e2che cron",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "This will show a list with modules implementing the cron hook",
                    "execution": "drupal debug:cron\n"
                }
            ],
            "aliases": [
                "dcr"
            ],
            "key": "debug.cron",
            "dashed": "debug-cron",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:database:log",
            "description": "Affiche les entr\u00e9es courantes du journal pour l'application",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                },
                {
                    "name": "asc",
                    "description": "Lister les \u00e9v\u00e9nements par ordre ascendant"
                },
                {
                    "name": "limit",
                    "description": "Limiter les r\u00e9sultats \u00e0 un nombre sp\u00e9cifique"
                },
                {
                    "name": "offset",
                    "description": "Point de d\u00e9part d'une limite"
                },
                {
                    "name": "yml",
                    "description": "Print in a yml style"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "ID de l'\u00e9v\u00e9nement du DBLog"
                }
            ],
            "examples": [
                {
                    "description": "List all the entries on the log",
                    "execution": "drupal debug:database:log"
                },
                {
                    "description": "List specific log entry by Event ID",
                    "execution": "drupal debug:database:log 21228\n"
                }
            ],
            "aliases": [
                "dbb",
                "ws"
            ],
            "key": "debug.database.log",
            "dashed": "debug-database-log",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:database:table",
            "description": "Montre toutes les tables d'une base de donn\u00e9es sp\u00e9cifique.",
            "options": [
                {
                    "name": "database",
                    "description": "Cl\u00e9 de la base de donn\u00e9es du fichier settings.php"
                }
            ],
            "arguments": [
                {
                    "name": "table",
                    "description": "Table \u00e0 d\u00e9bugger"
                }
            ],
            "examples": [
                {
                    "description": "Show all tables on a database",
                    "execution": "drupal debug:database:table"
                },
                {
                    "description": "Show fields on the node table or another specified on the argument",
                    "execution": "drupal debug:database:table node\n"
                }
            ],
            "aliases": [
                "ddt"
            ],
            "key": "debug.database.table",
            "dashed": "debug-database-table",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:dotenv",
            "description": "Debug Dotenv debug values.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "debug.dotenv",
            "dashed": "debug-dotenv",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:entity",
            "description": "Debug entities available in the system",
            "options": [],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.debug.entity.arguments.entity-type"
                }
            ],
            "examples": [
                {
                    "description": "Displays the available entities",
                    "execution": "drupal debug:entity\n"
                }
            ],
            "aliases": [
                "de"
            ],
            "key": "debug.entity",
            "dashed": "debug-entity",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:event",
            "description": "Affiche les \u00e9v\u00e9nements disponibles",
            "options": [],
            "arguments": [
                {
                    "name": "event",
                    "description": "Ev\u00e9nement \u00e0 d\u00e9bugger"
                }
            ],
            "examples": [
                {
                    "description": "List all the events that could be debugged",
                    "execution": "drupal debug:evet"
                },
                {
                    "description": "Show the information for the kernel.request event",
                    "execution": "drupal debug:event kernel.request"
                }
            ],
            "aliases": [
                "dev"
            ],
            "key": "debug.event",
            "dashed": "debug-event",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:features",
            "description": "List registered features.",
            "options": [],
            "arguments": [
                {
                    "name": "bundle",
                    "description": "Bundle name"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "debug.features",
            "dashed": "debug-features",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:hook",
            "description": "commands.debug.hook.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dbh"
            ],
            "key": "debug.hook",
            "dashed": "debug-hook",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:image:styles",
            "description": "Liste des styles d'images sur le site",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List all images styles on the site",
                    "execution": "drupal debug:image:styles\n"
                }
            ],
            "aliases": [
                "dis"
            ],
            "key": "debug.image.styles",
            "dashed": "debug-image-styles",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:libraries",
            "description": "Affiche les librairies disponibles dans l'application",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Entrez le nom de la librairie"
                }
            ],
            "examples": [
                {
                    "description": "List all available libraries",
                    "execution": "drupal debug:libraries\n"
                },
                {
                    "description": "List block library information",
                    "execution": "drupal debug:libraries block\n"
                },
                {
                    "description": "List block\/drupal.block library",
                    "execution": "drupal debug:libraries block\/drupal.block\n"
                }
            ],
            "aliases": [
                "dl"
            ],
            "key": "debug.libraries",
            "dashed": "debug-libraries",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:migrate",
            "description": "Affiche la migration actuellement disponible dans l'application",
            "options": [],
            "arguments": [
                {
                    "name": "tag",
                    "description": "Tag de migration"
                }
            ],
            "examples": [
                {
                    "description": "Displays current migration",
                    "execution": "drupal debug:migrate\n"
                }
            ],
            "aliases": [
                "mid"
            ],
            "key": "debug.migrate",
            "dashed": "debug-migrate",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:module",
            "description": "Affiche les modules actuellement disponibles dans l'application",
            "options": [
                {
                    "name": "status",
                    "description": "Statut du module [installed|uninstalled]"
                },
                {
                    "name": "type",
                    "description": "Type de module [core|no-core]"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module name"
                }
            ],
            "examples": [
                {
                    "description": "Affiche tous les modules actifs (ou install\u00e9s)",
                    "execution": "drupal mod --status=installed"
                },
                {
                    "description": "Affiche tous les modules actifs qui ne sont pas du core (contrib + custom)",
                    "execution": "drupal mod --status=installed --type=no-core"
                }
            ],
            "aliases": [
                "dm"
            ],
            "key": "debug.module",
            "dashed": "debug-module",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:multisite",
            "description": "Liste toutes les installations multi-sites disponibles dans le syst\u00e8me",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays multisite information",
                    "execution": "drupal debug:multisite\n"
                }
            ],
            "aliases": [
                "dmu",
                "msd"
            ],
            "key": "debug.multisite",
            "dashed": "debug-multisite",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:permission",
            "description": "Displays all user permissions.",
            "options": [],
            "arguments": [
                {
                    "name": "role",
                    "description": "User role"
                }
            ],
            "examples": [
                {
                    "description": "Displays all the permissions availables on the site",
                    "execution": "drupal debug:permission\n"
                }
            ],
            "aliases": [
                "dp"
            ],
            "key": "debug.permission",
            "dashed": "debug-permission",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:plugin",
            "description": "Affiche tous les types de plugins, les instances de plugin d'un certain type, ou la d\u00e9finition d'un plugin sp\u00e9cifique.",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Type de plugin"
                },
                {
                    "name": "id",
                    "description": "ID du plugin"
                }
            ],
            "examples": [
                {
                    "description": "Displays a list with all the plugins on the current site",
                    "execution": "drupal debug:plugin"
                },
                {
                    "description": "Displays block plugin information",
                    "execution": "drupal debug:plugin block"
                },
                {
                    "description": "Displays block broken information",
                    "execution": "drupal debug:plugin block broken\n"
                }
            ],
            "aliases": [
                "dpl"
            ],
            "key": "debug.plugin",
            "dashed": "debug-plugin",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:queue",
            "description": "Affiche la queue de votre application",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays the queues of the application",
                    "execution": "drupal debug:queue\n"
                }
            ],
            "aliases": [
                "dq"
            ],
            "key": "debug.queue",
            "dashed": "debug-queue",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:rest",
            "description": "Affiche la resource Rest disponible dans l'application",
            "options": [
                {
                    "name": "authorization",
                    "description": "Statut de la ressource rest activ\u00e9 | d\u00e9sactiv\u00e9"
                }
            ],
            "arguments": [
                {
                    "name": "resource-id",
                    "description": "ID Rest"
                }
            ],
            "examples": [
                {
                    "description": "Displays rest hooks",
                    "execution": "drupal debug:rest\n"
                }
            ],
            "aliases": [
                "rede"
            ],
            "key": "debug.rest",
            "dashed": "debug-rest",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:roles",
            "description": "Displays current roles for the application",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Roles list on the site",
                    "execution": "drupal debug:roles\n"
                }
            ],
            "aliases": [
                "dusr"
            ],
            "key": "debug.roles",
            "dashed": "debug-roles",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:router",
            "description": "Affiche les routes de l'application",
            "options": [
                {
                    "name": "pattern",
                    "description": "Route pattern"
                }
            ],
            "arguments": [
                {
                    "name": "route-name",
                    "description": "Noms des routes"
                }
            ],
            "examples": [
                {
                    "description": "Displays current routes for the application",
                    "execution": "drupal rod"
                },
                {
                    "description": "Displays details for the route user.page (\/user)",
                    "execution": "drupal rod user.page"
                },
                {
                    "description": "Shows the routes list on the site",
                    "execution": "drupal debug:router"
                },
                {
                    "description": "Display information on the user.login",
                    "execution": "drupal debug:router user.login"
                },
                {
                    "description": "Display information for the routes by pattern (\/user\/login)",
                    "execution": "drupal debug:router --pattern=\/user\/login"
                }
            ],
            "aliases": [
                "dr",
                "rod"
            ],
            "key": "debug.router",
            "dashed": "debug-router",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:settings",
            "description": "Affiche la configuration personnalis\u00e9e de Drupal Console.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:settings\n"
                }
            ],
            "aliases": [
                "dse"
            ],
            "key": "debug.settings",
            "dashed": "debug-settings",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:site",
            "description": "Liste tous les sites connus en local et distants.",
            "options": [],
            "arguments": [
                {
                    "name": "target",
                    "description": "Target"
                },
                {
                    "name": "property",
                    "description": "Property"
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:site\n"
                }
            ],
            "aliases": [
                "dsi"
            ],
            "key": "debug.site",
            "dashed": "debug-site",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:state",
            "description": "Affiche les cl\u00e9s de l'Etat actuel.",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "La cl\u00e9 de l'Etat \u00e0 d\u00e9bugger."
                }
            ],
            "examples": [
                {
                    "description": "List of the states on the site",
                    "execution": "drupal debug:state\n"
                },
                {
                    "description": "Displays a detail of the state install_task tok from the list of states",
                    "execution": "drupal debug:state install_task\n"
                }
            ],
            "aliases": [
                "dst"
            ],
            "key": "debug.state",
            "dashed": "debug-state",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:theme",
            "description": "Affiche les th\u00e8mes actuels de l'application",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Th\u00e8me sp\u00e9cifique \u00e0 d\u00e9bugger"
                }
            ],
            "examples": [
                {
                    "description": "List of themes on the site",
                    "execution": "drupal debug:theme"
                },
                {
                    "description": "Bartik theme information",
                    "execution": "drupal debug:theme bartik"
                }
            ],
            "aliases": [
                "dt",
                "tde"
            ],
            "key": "debug.theme",
            "dashed": "debug-theme",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:theme:keys",
            "description": "Affiche toutes les clefs de th\u00e8me d\u00e9finies par les fonctions hook_theme",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "Clef"
                }
            ],
            "examples": [],
            "aliases": [
                "dtk"
            ],
            "key": "debug.theme.keys",
            "dashed": "debug-theme-keys",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:update",
            "description": "Affiche les mises \u00e0 jour actuellement disponibles pour l'application",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List of pending updates",
                    "execution": "drupal debug:update\n"
                }
            ],
            "aliases": [
                "du",
                "upd"
            ],
            "key": "debug.update",
            "dashed": "debug-update",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:update:composer",
            "description": "Displays current updates available from the composer file",
            "options": [
                {
                    "name": "only-drupal",
                    "description": "Show only drupal (modules\/themes) updates"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "List of pending updates from composer",
                    "execution": "drupal debug:update:composer\n"
                }
            ],
            "aliases": [
                "duc"
            ],
            "key": "debug.update.composer",
            "dashed": "debug-update-composer",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:user",
            "description": "Liste les utilisateurs de l'application",
            "options": [
                {
                    "name": "uid",
                    "description": "Filtre les utilisateurs par uids [entre guillemets s\u00e9par\u00e9s par des espaces]"
                },
                {
                    "name": "username",
                    "description": "Filtre la liste des r\u00e9sultats par noms d'utilisateur [entre guillemets s\u00e9par\u00e9s par des espaces]"
                },
                {
                    "name": "mail",
                    "description": "Filtre la liste des r\u00e9sultats par courriels d'utilisateur [entre guillemets s\u00e9par\u00e9s par des espaces]"
                },
                {
                    "name": "roles",
                    "description": "Fitrer par r\u00f4le(s)"
                },
                {
                    "name": "limit",
                    "description": "Combien d'utilisateurs voulez-vous afficher"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Users list on the site",
                    "execution": "drupal debug:user\n"
                }
            ],
            "aliases": [
                "dus"
            ],
            "key": "debug.user",
            "dashed": "debug-user",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:views",
            "description": "Affiche des informations \u00e0 propos des vues de l'application",
            "options": [
                {
                    "name": "tag",
                    "description": "Tags de la vue"
                },
                {
                    "name": "status",
                    "description": "Statut de la vue (Activ\u00e9|D\u00e9sactiv\u00e9)"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "Identifiant de la vue"
                }
            ],
            "examples": [
                {
                    "description": "List of views on the site",
                    "execution": "drupal debug:views\n"
                }
            ],
            "aliases": [
                "vde"
            ],
            "key": "debug.views",
            "dashed": "debug-views",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "debug:views:plugins",
            "description": "Affiche les plugins de vues de l'application",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Filtrer les plugins de vues par type"
                }
            ],
            "examples": [
                {
                    "description": "List of views plugins",
                    "execution": "drupal debug:views:plugins\n"
                }
            ],
            "aliases": [
                "dvp"
            ],
            "key": "debug.views.plugins",
            "dashed": "debug-views-plugins",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "devel:dumper",
            "description": "commands.devel.dumper.messages.change-devel-dumper-plugin",
            "options": [],
            "arguments": [
                {
                    "name": "dumper",
                    "description": "Name of the devel dumper plugin"
                }
            ],
            "examples": [],
            "aliases": [
                "dd"
            ],
            "key": "devel.dumper",
            "dashed": "devel-dumper",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "docker:init",
            "description": "Create a docker-compose.yml file",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "docker.init",
            "dashed": "docker-init",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "dotenv:init",
            "description": "Add support and required config to work with an .env file",
            "options": [
                {
                    "name": "load-from-env",
                    "description": "commands.dotenv.init.options.load-from-env"
                },
                {
                    "name": "load-settings",
                    "description": "commands.dotenv.init.options.load-settings"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "dotenv.init",
            "dashed": "dotenv-init",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "entity:delete",
            "description": "Supprime une entit\u00e9 sp\u00e9cifique",
            "options": [
                {
                    "name": "all",
                    "description": "Delete all entities of the given type."
                }
            ],
            "arguments": [
                {
                    "name": "entity-definition-id",
                    "description": "Id de la d\u00e9finition de l'entit\u00e9"
                },
                {
                    "name": "entity-id",
                    "description": "ID de l'entit\u00e9 \u00e0 supprimer"
                }
            ],
            "examples": [
                {
                    "description": "Delete entity type content using node id",
                    "execution": "drupal entity:delete node 1"
                }
            ],
            "aliases": [
                "ed"
            ],
            "key": "entity.delete",
            "dashed": "entity-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "features:import",
            "description": "Import module config.",
            "options": [
                {
                    "name": "bundle",
                    "description": "Bundle name"
                }
            ],
            "arguments": [
                {
                    "name": "packages",
                    "description": "Package name"
                }
            ],
            "examples": [],
            "aliases": [
                "fei"
            ],
            "key": "features.import",
            "dashed": "features-import",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "field:info",
            "description": "Affiche des informations concernant des champs.",
            "options": [
                {
                    "name": "detailed",
                    "description": "Sortie \u00e9tendue avec les noms machine et les descriptions"
                },
                {
                    "name": "entity",
                    "description": "Restreindre \u00e0 \u00e0 un type d'entit\u00e9 fieldable sp\u00e9cifique, par exemple: node, comment, taxonomy_term, shortcut, block_content, contact_message"
                },
                {
                    "name": "bundle",
                    "description": "Restreindre \u00e0 un type de bundle sp\u00e9cifique, par exemple: article"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "fii"
            ],
            "key": "field.info",
            "dashed": "field-info",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:ajax:command",
            "description": "Generate & Register a custom ajax command",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Ajax Class name"
                },
                {
                    "name": "method",
                    "description": "Custom ajax method"
                },
                {
                    "name": "js-name",
                    "description": "Custom javascript name"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gac"
            ],
            "key": "generate.ajax.command",
            "dashed": "generate-ajax-command",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:authentication:provider",
            "description": "G\u00e9n\u00e9rer un syst\u00e8me d'authentification",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "commands.generate.authentication.provider.options.class"
                },
                {
                    "name": "provider-id",
                    "description": "commands.generate.authentication.provider.options.provider-id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an authentication provider specifying the module, the class and the provider id",
                    "execution": "drupal generate:authentication:provider  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAuthenticationProvider\"  \\\n  --provider-id=\"default_authentication_provider\"\n"
                }
            ],
            "aliases": [
                "gap"
            ],
            "key": "generate.authentication.provider",
            "dashed": "generate-authentication-provider",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:breakpoint",
            "description": "G\u00e9n\u00e9rer un breakpoint",
            "options": [
                {
                    "name": "theme",
                    "description": "Nom du th\u00e8me"
                },
                {
                    "name": "breakpoints",
                    "description": "Breakpoints"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a breakpoint specifying the theme, a breakpoint name, its label, the media query, its weight and multipliers",
                    "execution": "drupal generate:breakpoint  \\\n  --theme=\"classy\"  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'"
                }
            ],
            "aliases": [
                "gb"
            ],
            "key": "generate.breakpoint",
            "dashed": "generate-breakpoint",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:cache:context",
            "description": "Generate a cache context",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "cache-context",
                    "description": "The cache context name"
                },
                {
                    "name": "class",
                    "description": "Cache context class name"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate cache for a context specifying the module, the context name and its class",
                    "execution": "drupal generate:cache:context  \\\n  --module=\"modulename\"  \\\n  --cache-context=\"ContextName\"  \\\n  --class=\"DefaultCacheContext\""
                }
            ],
            "aliases": [
                "gcc"
            ],
            "key": "generate.cache.context",
            "dashed": "generate-cache-context",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:command",
            "description": "G\u00e9n\u00e8re une commande utilisable via la console",
            "options": [
                {
                    "name": "extension",
                    "description": "The extension name."
                },
                {
                    "name": "extension-type",
                    "description": "The extension type."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe de la commande"
                },
                {
                    "name": "name",
                    "description": "Le nom de la commande."
                },
                {
                    "name": "initialize",
                    "description": "Add initialize method."
                },
                {
                    "name": "interact",
                    "description": "Add interact method."
                },
                {
                    "name": "container-aware",
                    "description": "Est-ce que la commande est \u00e0 l'\u00e9coute de l'installation drupal lorsqu'elle est ex\u00e9cut\u00e9e"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                },
                {
                    "name": "generator",
                    "description": "Add a Generator class for this command."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a command specifying the extension name and type, its class and the name.",
                    "execution": "drupal generate:command  \\\n  --extension=\"ExtensionName\"  \\\n  --extension-type=\"module\"  \\\n  --class=\"DefaultCommand\"  \\\n  --name=\"CommandName\""
                }
            ],
            "aliases": [
                "gco"
            ],
            "key": "generate.command",
            "dashed": "generate-command",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:composer",
            "description": "Generate a composer.json file",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "name",
                    "description": "Package name"
                },
                {
                    "name": "type",
                    "description": "Package type"
                },
                {
                    "name": "description",
                    "description": "Package description"
                },
                {
                    "name": "keywords",
                    "description": "Package keywords"
                },
                {
                    "name": "license",
                    "description": "License"
                },
                {
                    "name": "homepage",
                    "description": "Project homepage"
                },
                {
                    "name": "minimum-stability",
                    "description": "Mininmal stability"
                },
                {
                    "name": "authors",
                    "description": "Authors of the project"
                },
                {
                    "name": "support",
                    "description": "Support channels"
                },
                {
                    "name": "required",
                    "description": "Required packages"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate composer file specifying the module machine name, package name, package type, package description, keywords, lincense, homepage, minimum stability, authors, support channels and required packages",
                    "execution": "drupal generate:composer \\\n  --module=\"module_name\" \\\n  --name=\"drupal\/module_name\" \\\n  --type=\"drupal-module\" \\\n  --description=\"Package description\" \\\n  --keywords='Drupal' --keywords='logging' \\\n  --license=\"GPL-2.0+\" \\\n  --homepage=\"https:\/\/www.drupal.org\/project\/module_name\" \\\n  --minimum-stability=\"stable\" \\\n  --authors='\"name\":\"Author name\", \"email\":\"author@email.com\", \"homepage\":\"http:\/\/website.com\", \"role\":\"Developer\"' \\\n  --support='\"channel\":\"email\", \"url\":\"author@email.com\"' \\\n  --support='\"channel\":\"source\", \"url\":\"http:\/\/github.com\"' \\\n  --required='\"name\":\"drupal\/views\", \"version\":\"^1.0\"' \\\n  --required='\"name\":\"drupal\/token\", \"version\":\"^2.0\"'\n"
                }
            ],
            "aliases": [
                "gcom"
            ],
            "key": "generate.composer",
            "dashed": "generate-composer",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:controller",
            "description": "G\u00e9n\u00e9rer & enregistrer un contr\u00f4leur",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom du contr\u00f4leur"
                },
                {
                    "name": "routes",
                    "description": "Les routes doivent \u00eatre des tableaux contenants [title, method, path]"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                },
                {
                    "name": "test",
                    "description": "G\u00e9n\u00e9rer une classe de test"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate controller specifying the module name, the class name and its routes",
                    "execution": "drupal generate:controller  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultController\"  \\\n  --routes='\"title\":\"ControllerMethod\", \"name\":\"modulename.default_controller_hello\", \"method\":\"hello\", \"path\":\"\/modulename\/hello\/{name}\"'  \\\n  --test"
                }
            ],
            "aliases": [
                "gcon"
            ],
            "key": "generate.controller",
            "dashed": "generate-controller",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:entity:bundle",
            "description": "G\u00e9n\u00e8re un nouveau type de contenu (n\u0153ud \/ bundle d'entit\u00e9)",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "bundle-name",
                    "description": "Le nom machine du type de contenu"
                },
                {
                    "name": "bundle-title",
                    "description": "Le nom lisible par les utilisateurs du type de contenu"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate bundle entity specifying the module, the bundle name and its title",
                    "execution": "drupal generate:entity:bundle  \\\n  --module=\"modulename\"  \\\n  --bundle-name=\"default\"  \\\n  --bundle-title=\"default\""
                }
            ],
            "aliases": [
                "geb"
            ],
            "key": "generate.entity.bundle",
            "dashed": "generate-entity-bundle",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:entity:config",
            "description": "G\u00e9n\u00e8re une nouvelle entit\u00e9 de configuration",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "entity-class",
                    "description": "La classe de l'entit\u00e9 de configuration"
                },
                {
                    "name": "entity-name",
                    "description": "Le nom de l'entit\u00e9 de configuration"
                },
                {
                    "name": "base-path",
                    "description": "Le chemin de base des routes de l'entit\u00e9 de configuration"
                },
                {
                    "name": "label",
                    "description": "Le label"
                },
                {
                    "name": "bundle-of",
                    "description": "Intervient en tant que bundle d'entit\u00e9s de contenu"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate config entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:config  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                }
            ],
            "aliases": [
                "gec"
            ],
            "key": "generate.entity.config",
            "dashed": "generate-entity-config",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:entity:content",
            "description": "G\u00e9n\u00e8re une nouvelle entit\u00e9 de contenu",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "entity-class",
                    "description": "La classe de l'entit\u00e9 de contenu"
                },
                {
                    "name": "entity-name",
                    "description": "Le nom de l'entit\u00e9"
                },
                {
                    "name": "base-path",
                    "description": "Le chemin de base des routes de l'entit\u00e9 de contenu"
                },
                {
                    "name": "label",
                    "description": "Le libell\u00e9"
                },
                {
                    "name": "has-bundles",
                    "description": "Est-ce que l'entit\u00e9 poss\u00e8de des bundles"
                },
                {
                    "name": "is-translatable",
                    "description": "Entit\u00e9 de contenu traduisible"
                },
                {
                    "name": "revisionable",
                    "description": "commands.generate.entity.content.options.revisionable"
                },
                {
                    "name": "has-forms",
                    "description": "Entity has forms"
                },
                {
                    "name": "has-owner",
                    "description": "Entity has owner"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                },
                {
                    "description": "Generate a translatable and revisionable content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\"  \\\n  --is-translatable  \\\n  --revisionable"
                }
            ],
            "aliases": [
                "geco"
            ],
            "key": "generate.entity.content",
            "dashed": "generate-entity-content",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:event:subscriber",
            "description": "G\u00e9n\u00e8re un abonn\u00e9 \u00e0 un \u00e9v\u00e9nement",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "name",
                    "description": "Service name"
                },
                {
                    "name": "class",
                    "description": "Class name"
                },
                {
                    "name": "events",
                    "description": "Charger des \u00e9v\u00e9nements depuis le conteneur."
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an event subscriber specifying the module name, its name, the class and the events to subscribe",
                    "execution": "drupal generate:event:subscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultSubscriber\"  \\\n  --events='kernel_request'\n"
                }
            ],
            "aliases": [
                "ges"
            ],
            "key": "generate.event.subscriber",
            "dashed": "generate-event-subscriber",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:form",
            "description": "G\u00e9n\u00e8re un nouveau \"FormBase\"",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Le nom de classe du formulaire"
                },
                {
                    "name": "form-id",
                    "description": "l'ID du formulaire"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "Cr\u00e9er des entr\u00e9es dans un formulaire."
                },
                {
                    "name": "path",
                    "description": "Entrez le chemin du formulaire"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an empty form with config file specifying the module name, the class, a form id and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --path=\"\/modulename\/form\/default\""
                },
                {
                    "description": "Generate a form with 2 fields and a config file specifying the module name, the class, a form id, the inputs and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --inputs='\"name\":\"inputname\", \"type\":\"text_format\", \"label\":\"InputName\", \"options\":\"\", \"description\":\"Just a text input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --path=\"\/modulename\/form\/default\""
                }
            ],
            "aliases": [
                "gf"
            ],
            "key": "generate.form",
            "dashed": "generate-form",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:form:alter",
            "description": "G\u00e9n\u00e8re une impl\u00e9mentation de hook_form_alter() ou de hook_form_FORM_ID_alter",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "form-id",
                    "description": "ID du formulaire \u00e0 alt\u00e9rer"
                },
                {
                    "name": "inputs",
                    "description": "Cr\u00e9er des entr\u00e9es dans un formulaire."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook form alter for an empty form specifying the module name",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\""
                },
                {
                    "description": "Generate a hook form alter with 2 fields specifying the module name and the inputs",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gfa"
            ],
            "key": "generate.form.alter",
            "dashed": "generate-form-alter",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:form:config",
            "description": "G\u00e9n\u00e8re un nouveau \"ConfigFormBase\"",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Le nom de classe du formulaire"
                },
                {
                    "name": "form-id",
                    "description": "l'ID du formulaire"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "Cr\u00e9er des entr\u00e9es dans un formulaire."
                },
                {
                    "name": "path",
                    "description": "Entrez le chemin du formulaire"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an empty form with config file specifying the module name, the class, a form id and the path",
                    "execution": "drupal generate:form:config  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --path=\"\/modulename\/form\/default\""
                },
                {
                    "description": "Generate a form with 2 fields and a config file specifying the module name, the class, a form id, the inputs and the path",
                    "execution": "drupal generate:form:config  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --inputs='\"name\":\"inputname\", \"type\":\"text_format\", \"label\":\"InputName\", \"options\":\"\", \"description\":\"Just a text input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --path=\"\/modulename\/form\/default\"\n"
                }
            ],
            "aliases": [
                "gfc"
            ],
            "key": "generate.form.config",
            "dashed": "generate-form-config",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:help",
            "description": "G\u00e9n\u00e8re une impl\u00e9mentation de hook_help()",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "description",
                    "description": "commands.generate.help.options.description"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook help specifying the module name and the description",
                    "execution": "drupal generate:help  \\\n  --module=\"modulename\"  \\\n  --description=\"My Awesome Module\""
                }
            ],
            "aliases": [
                "gh"
            ],
            "key": "generate.help",
            "dashed": "generate-help",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:jstest",
            "description": "Generate a JavaScript test.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "JavaScript test Class name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a module specifying the module name, machine name, the path, its description, drupal core and the package name. In this example the composer file, the unit test and twig template are generated too",
                    "execution": "drupal generate:module  \\\n  --module=\"modulename\"  \\\n  --machine-name=\"modulename\"  \\\n  --module-path=\"\/modules\/custom\"  \\\n  --description=\"My Awesome Module\"  \\\n  --core=\"8.x\"  \\\n  --package=\"Custom\"  \\\n  --module-file  \\\n  --composer  \\\n  --test  \\\n  --twigtemplate\n"
                }
            ],
            "aliases": [
                "gjt"
            ],
            "key": "generate.jstest",
            "dashed": "generate-jstest",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:module",
            "description": "G\u00e9n\u00e8re un module.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module"
                },
                {
                    "name": "machine-name",
                    "description": "Le nom machine (minuscules et underscore _ seulement)"
                },
                {
                    "name": "module-path",
                    "description": "Le chemin du module"
                },
                {
                    "name": "description",
                    "description": "Description du module"
                },
                {
                    "name": "core",
                    "description": "Version du c\u0153ur."
                },
                {
                    "name": "package",
                    "description": "Paquet <em>package<\/em> du module"
                },
                {
                    "name": "module-file",
                    "description": "Ajouter un fichier .module"
                },
                {
                    "name": "features-bundle",
                    "description": "D\u00e9finir le module en tant que \"feature\" en pr\u00e9cisant le bundle de Features concern\u00e9"
                },
                {
                    "name": "composer",
                    "description": "Ajouter un fichier composer.json"
                },
                {
                    "name": "dependencies",
                    "description": "D\u00e9pendances du modules (par exemple : context, galleria, panels)"
                },
                {
                    "name": "test",
                    "description": "G\u00e9n\u00e9rer une classe de test"
                },
                {
                    "name": "twigtemplate",
                    "description": "Generate theme template"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a module specifying the module name, machine name, the path, its description, drupal core and the package name. In this example the composer file, the unit test and twig template are generated too",
                    "execution": "drupal generate:module  \\\n  --module=\"modulename\"  \\\n  --machine-name=\"modulename\"  \\\n  --module-path=\"\/modules\/custom\"  \\\n  --description=\"My Awesome Module\"  \\\n  --core=\"8.x\"  \\\n  --package=\"Custom\"  \\\n  --module-file  \\\n  --composer  \\\n  --test  \\\n  --twigtemplate"
                }
            ],
            "aliases": [
                "gm"
            ],
            "key": "generate.module",
            "dashed": "generate-module",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:module:file",
            "description": "G\u00e9n\u00e8re un  fichier .module",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate the .module file specifying the module name",
                    "execution": "drupal generate:module:file  \\\n  --module=\"modulename\""
                }
            ],
            "aliases": [
                "gmf"
            ],
            "key": "generate.module.file",
            "dashed": "generate-module-file",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:permissions",
            "description": "Generate module permissions",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "permissions",
                    "description": "Cr\u00e9er des autorisations."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gp"
            ],
            "key": "generate.permissions",
            "dashed": "generate-permissions",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:block",
            "description": "G\u00e9n\u00e8re un plugin de bloc",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe plugin"
                },
                {
                    "name": "plugin-label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                },
                {
                    "name": "theme-region",
                    "description": "R\u00e9gion du th\u00e8me o\u00f9 placer le plugin de bloc"
                },
                {
                    "name": "inputs",
                    "description": "Cr\u00e9er des entr\u00e9es dans un formulaire."
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                },
                {
                    "name": "twigtemplate",
                    "description": "Generate theme template"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin block in the header region with an input field specifying the module name, the class, the label, its id, the region and the input",
                    "execution": "drupal generate:plugin:block  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultBlock\"  \\\n  --label=\"Default block\"  \\\n  --plugin-id=\"default_block\"  \\\n  --theme-region=\"header\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gpb"
            ],
            "key": "generate.plugin.block",
            "dashed": "generate-plugin-block",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:ckeditorbutton",
            "description": "G\u00e9n\u00e8re un plugin de bouton CKEditor.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "ID du plugin. NOTE: Correspond au nom du plugin CKEditor. Il s'agit du premier argument de la fonction CKEDITOR.plugins.add() dans le fichier plugin.js."
                },
                {
                    "name": "buttons",
                    "description": "CKEditor buttons."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate CKEditor button specifying the module name, the class, the label, its id, the button name and the icon path",
                    "execution": "drupal generate:plugin:ckeditorbutton  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultCKEditorButton\"  \\\n  --label=\"Default ckeditor button\"  \\\n  --plugin-id=\"default ckeditor button\"  \\\n  --button-name=\"Default ckeditor button\"  \\\n  --button-icon-path=\"modules\/custom\/modulename\/js\/plugins\/default ckeditor button\/images\/icon.png\""
                }
            ],
            "aliases": [
                "gpc"
            ],
            "key": "generate.plugin.ckeditorbutton",
            "dashed": "generate-plugin-ckeditorbutton",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:condition",
            "description": "G\u00e9n\u00e8re un plugin de condition.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin de condition"
                },
                {
                    "name": "label",
                    "description": "Label du plugin de condition"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin de condition"
                },
                {
                    "name": "context-definition-id",
                    "description": "Id de la d\u00e9finition du contexte"
                },
                {
                    "name": "context-definition-label",
                    "description": "Label de la d\u00e9finition du contexte"
                },
                {
                    "name": "context-definition-required",
                    "description": "La d\u00e9finition du contexte est-elle requise ? (TRUE\/FALSE)"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin condition for a node entity type specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:node\"  \\\n  --context-definition-label=\"node\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for language specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"language\"  \\\n  --context-definition-label=\"Language\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for role configuration specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:user_role\"  \\\n  --context-definition-label=\"user_role\"  \\\n  --context-definition-required\n"
                }
            ],
            "aliases": [
                "gpco"
            ],
            "key": "generate.plugin.condition",
            "dashed": "generate-plugin-condition",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:field",
            "description": "G\u00e9n\u00e8re des plugins de type, de widget et de formateur de champ.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "type-class",
                    "description": "Nom de la classe du plugin de type de champ"
                },
                {
                    "name": "type-label",
                    "description": "Label du plugin de type de champ"
                },
                {
                    "name": "type-plugin-id",
                    "description": "Id du plugin de type de champ"
                },
                {
                    "name": "type-description",
                    "description": "Descritpion du plugin de type de champ"
                },
                {
                    "name": "formatter-class",
                    "description": "Nom de la classe du plugin de formateur de champ"
                },
                {
                    "name": "formatter-label",
                    "description": "label du plugin de formateur de champ"
                },
                {
                    "name": "formatter-plugin-id",
                    "description": "Id du plugin de formateur de champ"
                },
                {
                    "name": "widget-class",
                    "description": "Nom de la classe du plugin de formateur de champ"
                },
                {
                    "name": "widget-label",
                    "description": "Label du plugin de widget de champ"
                },
                {
                    "name": "widget-plugin-id",
                    "description": "Id du plugin de widget de champ"
                },
                {
                    "name": "field-type",
                    "description": "Type de champ avec lequel les plugins de formateur et de widget peuvent \u00eatre utilis\u00e9s"
                },
                {
                    "name": "default-widget",
                    "description": "Widget de champ par d\u00e9faut du plugin de type de champ"
                },
                {
                    "name": "default-formatter",
                    "description": "Formateur de champ par d\u00e9faut du plugin de type de champ"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate field type, widget and formatter plugins specifying the module name, the type (class, label, plugin id and description), the formatter (class, label, plugin id) and the widget (class, label and plugin id)",
                    "execution": "drupal generate:plugin:field  \\\n  --module=\"modulename\"  \\\n  --type-class=\"ExampleFieldType\"  \\\n  --type-label=\"Example field type\"  \\\n  --type-plugin-id=\"example_field_type\"  \\\n  --type-description=\"My Field Type\"  \\\n  --formatter-class=\"ExampleFormatterType\"  \\\n  --formatter-label=\"Example formatter type\"  \\\n  --formatter-plugin-id=\"example_formatter_type\"  \\\n  --widget-class=\"ExampleWidgetType\"  \\\n  --widget-label=\"Example widget type\"  \\\n  --widget-plugin-id=\"example_widget_type\"  \\\n  --field-type=\"example_field_type\"  \\\n  --default-widget=\"example_widget_type\"  \\\n  --default-formatter=\"example_formatter_type\"\n"
                }
            ],
            "aliases": [
                "gpf"
            ],
            "key": "generate.plugin.field",
            "dashed": "generate-plugin-field",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:fieldformatter",
            "description": "G\u00e9n\u00e9rer un plugin de formateur de champ.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                },
                {
                    "name": "field-type",
                    "description": "Type de champ avec lequel le plugin peut \u00eatre utilis\u00e9"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a a text field formatter plugin specifying the module name, the class, the label its plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldFormatter\"  \\\n  --label=\"Example field formatter\"  \\\n  --plugin-id=\"example_field_formatter\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpff"
            ],
            "key": "generate.plugin.fieldformatter",
            "dashed": "generate-plugin-fieldformatter",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:fieldtype",
            "description": "G\u00e9n\u00e8re un plugin de type de champ.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                },
                {
                    "name": "description",
                    "description": "Description du plugin"
                },
                {
                    "name": "default-widget",
                    "description": "Widget de champ par d\u00e9faut de ce plugin"
                },
                {
                    "name": "default-formatter",
                    "description": "Formateur de champ par d\u00e9faut de ce plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a field type plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\""
                },
                {
                    "description": "Generate a field type plugin with a default widget and formatter specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\"  \\\n  --default-widget=\"DefaultWidget\"  \\\n  --default-formatter=\"DefaultFormatter\"\n"
                }
            ],
            "aliases": [
                "gpft"
            ],
            "key": "generate.plugin.fieldtype",
            "dashed": "generate-plugin-fieldtype",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:fieldwidget",
            "description": "G\u00e9n\u00e8re un plugin de widget de champ.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                },
                {
                    "name": "field-type",
                    "description": "Type de champ avec lequel le plugin peut \u00eatre utilis\u00e9"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a text type field widget plugin specifying the module name, the class, its label, the plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldwidget  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldWidget\"  \\\n  --label=\"Example field widget\"  \\\n  --plugin-id=\"example_field_widget\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpfw"
            ],
            "key": "generate.plugin.fieldwidget",
            "dashed": "generate-plugin-fieldwidget",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:imageeffect",
            "description": "G\u00e9n\u00e8re un plugin d'effet d'image",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                },
                {
                    "name": "description",
                    "description": "Description du plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image effect plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:imageeffect  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultImageEffect\"  \\\n  --label=\"Default image effect\"  \\\n  --plugin-id=\"default_image_effect\"  \\\n  --description=\"My Image Effect\"\n"
                }
            ],
            "aliases": [
                "gpie"
            ],
            "key": "generate.plugin.imageeffect",
            "dashed": "generate-plugin-imageeffect",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:imageformatter",
            "description": "G\u00e9n\u00e8re un plugin de formateur d'image.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image formatter plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:imageformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleImageFormatter\"  \\\n  --label=\"Example image formatter\"  \\\n  --plugin-id=\"example_image_formatter\"\n"
                }
            ],
            "aliases": [
                "gpif"
            ],
            "key": "generate.plugin.imageformatter",
            "dashed": "generate-plugin-imageformatter",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:mail",
            "description": "G\u00e9n\u00e8re un plugin de courriel",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe de plugin"
                },
                {
                    "name": "label",
                    "description": "Label du plugin"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an email plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:mail  \\\n  --module=\"modulename\"  \\\n  --class=\"HtmlFormatterMail\"  \\\n  --label=\"Html formatter mail\"  \\\n  --plugin-id=\"html_formatter_mail\"\n"
                }
            ],
            "aliases": [
                "gpm"
            ],
            "key": "generate.plugin.mail",
            "dashed": "generate-plugin-mail",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:migrate:dataparser",
            "description": "Generate a migrate data parser",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "plugin-title",
                    "description": "Plugin title"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration data parser specifying the module name, the class, the plugin id and the plugin title",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --plugin-title=\"Data parser\"\n"
                }
            ],
            "aliases": [
                "gpmdp"
            ],
            "key": "generate.plugin.migrate.dataparser",
            "dashed": "generate-plugin-migrate-dataparser",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:migrate:process",
            "description": "Generate a migrate process plugin",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration plugin process specifying the module name, the class and its id",
                    "execution": "drupal generate:plugin:migrate:process  \\\n  --module=\"modulename\"  \\\n  --class=\"MigrationProcess\"  \\\n  --plugin-id=\"migrationprocess\"\n"
                }
            ],
            "aliases": [
                "gpmp"
            ],
            "key": "generate.plugin.migrate.process",
            "dashed": "generate-plugin-migrate-process",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:migrate:source",
            "description": "Generate a migrate source plugin",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "table",
                    "description": "Table to query"
                },
                {
                    "name": "alias",
                    "description": "Short alias to refer to the table as"
                },
                {
                    "name": "group-by",
                    "description": "Field to group results by"
                },
                {
                    "name": "fields",
                    "description": "Fields to export"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration source plugin specifying the module name, the class, its plugin id, the table and its alias",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --table=\"DefaultTableName\"  \\\n  --alias=\"D\""
                },
                {
                    "description": "Generate a migration source plugin for specific fields of the users table specifying the module name, the class, its plugin id, the table, its alias and the fields",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultPluginClass\"  \\\n  --plugin-id=\"default_plugin_class\"  \\\n  --table=\"users\"  \\\n  --alias=\"u\"  \\\n  --fields='\"id\":\"id\", \"description\":\"the user id\"'  \\\n  --fields='\"id\":\"username\", \"description\":\"the username\"'  \\\n  --fields='\"id\":\"password\", \"description\":\"the user password\"'  \\\n  --fields='\"id\":\"email\", \"description\":\"the user email\"'\n"
                }
            ],
            "aliases": [
                "gpms"
            ],
            "key": "generate.plugin.migrate.source",
            "dashed": "generate-plugin-migrate-source",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:queue",
            "description": "Drupal Console Queueworker generator.",
            "options": [
                {
                    "name": "module",
                    "description": "The module name"
                },
                {
                    "name": "class",
                    "description": "QueueWorker file name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin QueueWorker id"
                },
                {
                    "name": "cron-time",
                    "description": "Cron time"
                },
                {
                    "name": "label",
                    "description": "Queue description"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a queue worker plugin specifying the module name, the class and its plugin id",
                    "execution": "drupal generate:plugin:queue  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --cron-time=\"30\"  \\\n  --label=\"Example QueueWorker\""
                }
            ],
            "aliases": [
                "gpqueue"
            ],
            "key": "generate.plugin.queue",
            "dashed": "generate-plugin-queue",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:rest:resource",
            "description": "G\u00e9n\u00e8re un plugin de ressource rest",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Classe du plugin de ressource rest"
                },
                {
                    "name": "plugin-id",
                    "description": "Id du plugin de la ressource rest"
                },
                {
                    "name": "plugin-label",
                    "description": "Label du plugin de la ressource rest"
                },
                {
                    "name": "plugin-url",
                    "description": "URL du plugin de la ressource rest"
                },
                {
                    "name": "plugin-states",
                    "description": "Etats (States) du plugin de la ressource rest"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a rest resource plugin using GET specifying the module name, the class, the plugin id, its label, the target url and the request type",
                    "execution": "drupal generate:plugin:rest:resource  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultRestResource\"  \\\n  --plugin-id=\"default_rest_resource\"  \\\n  --plugin-label=\"Default rest resource\"  \\\n  --plugin-url=\"http:\/\/rest.resources.example.com\"  \\\n  --plugin-states='GET'\n"
                }
            ],
            "aliases": [
                "gprr"
            ],
            "key": "generate.plugin.rest.resource",
            "dashed": "generate-plugin-rest-resource",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:rules:action",
            "description": "Generate a plugin rule action",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin class"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "category",
                    "description": "Plugin category"
                },
                {
                    "name": "context",
                    "description": "Plugin context"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a user rule action plugin specifying the module name, the class, its label, the plugin id, the type, the category and its context",
                    "execution": "drupal generate:plugin:rules:action \\\n  --module=\"modulename\" \\\n  --class=\"DefaultAction\" \\\n  --label=\"Default Action\" \\\n  --plugin-id=\"default_action\" \\\n  --category=\"Action category\" \\\n  --context='\"name\":\"user\", \"type\":\"entity:user\", \"label\":\"Context label\", \"description\":\"Context description\"'"
                },
                {
                    "description": "Generate a entity rule action plugin specifying the module name, the class, its label, the plugin id, the type, the category and its context",
                    "execution": "drupal generate:plugin:rules:action \\\n  --module=\"modulename\" \\\n  --class=\"DefaultAction\" \\\n  --label=\"Default Action\" \\\n  --plugin-id=\"default_action\" \\\n  --category=\"Action category\" \\\n  --context='\"entity\":\"node\", \"type\":\"entity\", \"label\":\"Context label\", \"description\":\"Context description\"'\n"
                }
            ],
            "aliases": [
                "gpra"
            ],
            "key": "generate.plugin.rules.action",
            "dashed": "generate-plugin-rules-action",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:rules:dataprocessor",
            "description": "Generate a plugin rule dataprocessor",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a user rule dataprocessor plugin specifying the module name, the class, its label, the plugin id, the type, the category and its context",
                    "execution": "drupal generate:plugin:rules:dataprocessor  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultDataprocessor\"  \\\n  --label=\"Default dataprocessor\"  \\\n  --plugin-id=\"default_dataprocessor\"  \\\n"
                }
            ],
            "aliases": [
                "gprd"
            ],
            "key": "generate.plugin.rules.dataprocessor",
            "dashed": "generate-plugin-rules-dataprocessor",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:skeleton",
            "description": "G\u00e9n\u00e8re une impl\u00e9mentation d'un squelette de plugin pour les plugins Drupal Console qui n'ont pas de g\u00e9n\u00e9rateur sp\u00e9cifique",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "plugin-id",
                    "description": "L'Id du plugin."
                },
                {
                    "name": "class",
                    "description": "Le nom de la classe du plugin"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin skeleton specifying module name, the plugin id and the class",
                    "execution": "drupal generate:plugin:skeleton  \\\n  --module=\"modulename\"  \\\n  --plugin-id=\"link_relation_type\"  \\\n  --class=\"DefaultLinkRelationType\"\n"
                }
            ],
            "aliases": [
                "gps"
            ],
            "key": "generate.plugin.skeleton",
            "dashed": "generate-plugin-skeleton",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:type:annotation",
            "description": "G\u00e9n\u00e8re un type de plugin avec des annotations (m\u00e9canisme de d\u00e9couverte)",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Nom de la classe du type de plugin"
                },
                {
                    "name": "machine-name",
                    "description": "commands.generate.plugin.type.annotation.options.plugin-id"
                },
                {
                    "name": "label",
                    "description": "Label du type de plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with annotation discovery specifying module name, class name, machine name and label",
                    "execution": "drupal generate:plugin:type:annotation  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --machine-name=\"example_plugin\"  \\\n  --label=\"Example plugin\"\n"
                }
            ],
            "aliases": [
                "gpta"
            ],
            "key": "generate.plugin.type.annotation",
            "dashed": "generate-plugin-type-annotation",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:type:yaml",
            "description": "Generate a plugin type with Yaml discovery",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin type class name"
                },
                {
                    "name": "plugin-name",
                    "description": "Plugin type machine name"
                },
                {
                    "name": "plugin-file-name",
                    "description": "Plugin file name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with Yaml discovery specifying module name, class name, plugin name and plugin file name",
                    "execution": "drupal generate:plugin:type:yaml  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --plugin-name=\"example_plugin\"  \\\n  --plugin-file-name=\"example.plugin\"\n"
                }
            ],
            "aliases": [
                "gpty"
            ],
            "key": "generate.plugin.type.yaml",
            "dashed": "generate-plugin-type-yaml",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:validationconstraint",
            "description": "Generate a validation constraint plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "hook",
                    "description": "Generate hook to validate a field"
                },
                {
                    "name": "field-id",
                    "description": "Field id"
                },
                {
                    "name": "bundle",
                    "description": "Bundle"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a validation constraint plugin specifying the module name, the class, its label, the plugin id, the entity bundle and the field id",
                    "execution": "drupal generate:plugin:validationconstraint  \\\n  --module=\"modulename\" \\\n  --class=\"ExampleConstraint\" \\\n  --label=\"Example validation constraint\" \\\n  -plugin-id=\"example_validation_constraint\" \\\n  --hook \\\n  --field-id=\"field_exmaple_id\" \\\n  --bundle=\"entity_example_bundle\" \\\n  --no-interaction\n"
                }
            ],
            "aliases": [
                "gpvc"
            ],
            "key": "generate.plugin.validationconstraint",
            "dashed": "generate-plugin-validationconstraint",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:plugin:views:field",
            "description": "G\u00e9n\u00e8re un plugin personnalis\u00e9 de champ de vue.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "fields",
                    "description": "Fields definition (class name, title and description)."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a custom view field plugin specifying the module name, the class, a title and its description",
                    "execution": "drupal generate:plugin:views:field  \\\n  --module=\"modulename\"  \\\n  --class=\"CustomViewsField\"  \\\n  --title=\"Custom views field\"  \\\n  --description=\"My awesome custom views field plugin.\"\n"
                }
            ],
            "aliases": [
                "gpvf"
            ],
            "key": "generate.plugin.views.field",
            "dashed": "generate-plugin-views-field",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:post:update",
            "description": "G\u00e9n\u00e8re une impl\u00e9mentation de hook_post_update_NAME()",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "post-update-name",
                    "description": "Nom du post update"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an implementation of post update hook specifying the module name and the post update name",
                    "execution": "drupal generate:post:update  \\\n  --module=\"modulename\"  \\\n  --post-update-name=\"PostUpdateName\"\n"
                }
            ],
            "aliases": [
                "gpu"
            ],
            "key": "generate.post.update",
            "dashed": "generate-post-update",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:profile",
            "description": "G\u00e9n\u00e8re un profil.",
            "options": [
                {
                    "name": "profile",
                    "description": "Le nom du profil"
                },
                {
                    "name": "machine-name",
                    "description": "Le nom machine (uniquement minuscules ou underscore)"
                },
                {
                    "name": "profile-path",
                    "description": "The path of the profile"
                },
                {
                    "name": "description",
                    "description": "Description du profil"
                },
                {
                    "name": "core",
                    "description": "Version du core"
                },
                {
                    "name": "dependencies",
                    "description": "D\u00e9pendances du module s\u00e9par\u00e9es par des virgules (i.e. context, panels)"
                },
                {
                    "name": "themes",
                    "description": "the theme name"
                },
                {
                    "name": "distribution",
                    "description": "Le nom de la distribution"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a profile specifying the profile name, the machine name, a description, the core and its module dependencies",
                    "execution": "drupal generate:profile  \\\n  --profile=\"NewProfileName\"  \\\n  --machine-name=\"newprofilename\"  \\\n  --description=\"My Useful Profile\"  \\\n  --core=\"8.x\"  \\\n  --dependencies=\"modulename\"\n"
                }
            ],
            "aliases": [
                "gpr"
            ],
            "key": "generate.profile",
            "dashed": "generate-profile",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:routesubscriber",
            "description": "G\u00e9n\u00e8rer un RouteSubscriber",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "name",
                    "description": "Nom du service"
                },
                {
                    "name": "class",
                    "description": "Nom de la classe"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a route subscriber specifying the module name, the route name and its class",
                    "execution": "drupal generate:routesubscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.route_subscriber\"  \\\n  --class=\"RouteSubscriber\"\n"
                }
            ],
            "aliases": [
                "gr"
            ],
            "key": "generate.routesubscriber",
            "dashed": "generate-routesubscriber",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:service",
            "description": "G\u00e9n\u00e8re un service",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "name",
                    "description": "Le nom du service"
                },
                {
                    "name": "class",
                    "description": "Nom de la classe"
                },
                {
                    "name": "interface",
                    "description": "Interface"
                },
                {
                    "name": "interface-name",
                    "description": "Interface name"
                },
                {
                    "name": "logger-channel",
                    "description": "Logger channel"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                },
                {
                    "name": "path-service",
                    "description": "Path"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a services without interface specifying the module name, the service name, the class and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\""
                },
                {
                    "description": "Generate a services with interface specifying the module name, the service name, the class, the interface name and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --interface  \\\n  --interface-name=\"InterfaceName\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\"\n"
                }
            ],
            "aliases": [
                "gs"
            ],
            "key": "generate.service",
            "dashed": "generate-service",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:site:alias",
            "description": "Generates a site alias.",
            "options": [
                {
                    "name": "site",
                    "description": "Use local site as destination."
                },
                {
                    "name": "name",
                    "description": "Site name."
                },
                {
                    "name": "environment",
                    "description": "Environment name."
                },
                {
                    "name": "type",
                    "description": "The site type."
                },
                {
                    "name": "composer-root",
                    "description": "The Drupal root project directory."
                },
                {
                    "name": "site-uri",
                    "description": "Drupal uri (for multi-sites)."
                },
                {
                    "name": "host",
                    "description": "The ip\/domain name of the remote system. Not required on local sites."
                },
                {
                    "name": "user",
                    "description": "The username to use when connecting via ssh."
                },
                {
                    "name": "port",
                    "description": "The port to use when connecting via ssh."
                },
                {
                    "name": "drupal-console-binary",
                    "description": "The name of your drupal console binary. By default is \"drupal\""
                },
                {
                    "name": "extra-options",
                    "description": "Used only when the target requires extra options, such as tty option and\/or alternative authentication method and\/or alternative identity file."
                },
                {
                    "name": "directory",
                    "description": "Directory to store the generated site alias."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate site alias to connect with ssh using tty as extra-option",
                    "execution": "drupal generate:site:alias  \\\n  --name=\"demo\"  \\\n  --environment=\"dev\"  \\\n  --type=\"ssh\" \\\n  --composer-root=\"\/path\/to\/remote\/project\" \\\n  --site-uri=\"default\" \\\n  --host=\"hostName\/domain\" \\\n  --user=\"userName\" \\\n  --port=\"port\" \\\n  --drupal-console-binary=\"drupal\" \\\n  --extra-options=\"-tt\" \\\n  --directory=\"\/Users\/hjuarez\/drupalSq\/console\/\""
                }
            ],
            "aliases": [
                "gsa"
            ],
            "key": "generate.site.alias",
            "dashed": "generate-site-alias",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:theme",
            "description": "G\u00e9n\u00e8re un theme.",
            "options": [
                {
                    "name": "theme",
                    "description": "Le nom du th\u00e8me"
                },
                {
                    "name": "machine-name",
                    "description": "Le nom machine (minuscules et underscore seulement)"
                },
                {
                    "name": "theme-path",
                    "description": "Le chemin du th\u00e8me"
                },
                {
                    "name": "description",
                    "description": "Description du th\u00e8me"
                },
                {
                    "name": "core",
                    "description": "Version du c\u0153ur"
                },
                {
                    "name": "package",
                    "description": "Package du th\u00e8me"
                },
                {
                    "name": "global-library",
                    "description": "Nom de la librairie de styles globale"
                },
                {
                    "name": "libraries",
                    "description": "Libraries"
                },
                {
                    "name": "base-theme",
                    "description": "Th\u00e8me de base (i.e. classy, stable)"
                },
                {
                    "name": "base-theme-regions",
                    "description": "Add the default regions of the chosen base theme"
                },
                {
                    "name": "regions",
                    "description": "R\u00e9gions"
                },
                {
                    "name": "breakpoints",
                    "description": "Breakpoints"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a theme without region and without breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name and the global library",
                    "execution": "drupal generate:theme  \\\n  --theme=\"AnotherTheme\"  \\\n  --machine-name=\"anothertheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"PackageName\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"false\""
                },
                {
                    "description": "Generate a theme base on stable theme with two region defined and one breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name, a global library, its base, the regions and the breakpoint",
                    "execution": "drupal generate:theme  \\\n  --theme=\"MyTheme\"  \\\n  --machine-name=\"mytheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"MyThemePackage\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"stable\"  \\\n  --regions='\"region_name\":\"Content\", \"region_machine_name\":\"content\"'  \\\n  --regions='\"region_name\":\"Panel\", \"region_machine_name\":\"panel\"'  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'\n"
                }
            ],
            "aliases": [
                "gt"
            ],
            "key": "generate.theme",
            "dashed": "generate-theme",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:twig:extension",
            "description": "G\u00e9n\u00e8re une extension Twig.",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "name",
                    "description": "Nom de l'extension Twig"
                },
                {
                    "name": "class",
                    "description": "Nom de la classe"
                },
                {
                    "name": "services",
                    "description": "Charger des services depuis le conteneur."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a twig extension specifying the module name, the extension name and its class",
                    "execution": "drupal generate:twig:extension  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.twig.extension\"  \\\n  --class=\"DefaultTwigExtension\"\n"
                }
            ],
            "aliases": [
                "gte"
            ],
            "key": "generate.twig.extension",
            "dashed": "generate-twig-extension",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "generate:update",
            "description": "G\u00e9n\u00e8re une impl\u00e9mentation de hook_update_N()",
            "options": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "update-n",
                    "description": "Num\u00e9ro de mise \u00e0 jour"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an update N hook implementation specifying the module name and the N value",
                    "execution": "drupal generate:update  \\\n  --module=\"modulename\"  \\\n  --update-n=\"8001\"\n"
                }
            ],
            "aliases": [
                "gu"
            ],
            "key": "generate.update",
            "dashed": "generate-update",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "image:styles:flush",
            "description": "Vide les caches par style d'image ou pour tous les styles d'image",
            "options": [],
            "arguments": [
                {
                    "name": "styles",
                    "description": "Le nom des styles d'image."
                }
            ],
            "examples": [
                {
                    "description": "Flush large image style",
                    "execution": "drupal image:styles:flush  large"
                },
                {
                    "description": "Flush thumbnail image style",
                    "execution": "drupal image:styles:flush  thumbnail\n"
                }
            ],
            "aliases": [
                "isf"
            ],
            "key": "image.styles.flush",
            "dashed": "image-styles-flush",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "locale:language:add",
            "description": "Ajoute une langue \u00e0 votre site",
            "options": [],
            "arguments": [
                {
                    "name": "language",
                    "description": "Langue, par exemple : es ou Espagnol"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "locale.language.add",
            "dashed": "locale-language-add",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "locale:language:delete",
            "description": "Supprime une langue de votre site",
            "options": [],
            "arguments": [
                {
                    "name": "language",
                    "description": "Langue, par exemple : es ou Espagnol"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "locale.language.delete",
            "dashed": "locale-language-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "locale:translation:status",
            "description": "Liste des mises \u00e0 jour de traduction disponibles",
            "options": [],
            "arguments": [
                {
                    "name": "language",
                    "description": "Langue, par exemple : es ou Espagnol"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "locale.translation.status",
            "dashed": "locale-translation-status",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "migrate:execute",
            "description": "Ex\u00e9cute une migration disponible dans l'application",
            "options": [
                {
                    "name": "site-url",
                    "description": "Url source du site"
                },
                {
                    "name": "db-type",
                    "description": "commands.migrate.execute.migrations.options.db-type"
                },
                {
                    "name": "db-host",
                    "description": "Serveur de la base de donn\u00e9es"
                },
                {
                    "name": "db-name",
                    "description": "Nom de la base de donn\u00e9es"
                },
                {
                    "name": "db-user",
                    "description": "Utilisateur de la base de donn\u00e9es"
                },
                {
                    "name": "db-pass",
                    "description": "Mot de passe de la base de donn\u00e9es"
                },
                {
                    "name": "db-prefix",
                    "description": "Pr\u00e9fixe de la base de donn\u00e9es"
                },
                {
                    "name": "db-port",
                    "description": "Port de la base de donn\u00e9es"
                },
                {
                    "name": "exclude",
                    "description": "Id(s) de migration \u00e0 exclure"
                },
                {
                    "name": "source-base_path",
                    "description": "Local file directory containing your source site (e.g. \/var\/www\/docroot), or your site address (for example http:\/\/example.com)"
                }
            ],
            "arguments": [
                {
                    "name": "migration-ids",
                    "description": "Id de migration"
                }
            ],
            "examples": [],
            "aliases": [
                "mie"
            ],
            "key": "migrate.execute",
            "dashed": "migrate-execute",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "migrate:rollback",
            "description": "Rollback one or multiple migrations",
            "options": [
                {
                    "name": "source-base_path",
                    "description": "Local file directory containing your source site (e.g. \/var\/www\/docroot), or your site address (for example http:\/\/example.com)"
                }
            ],
            "arguments": [
                {
                    "name": "migration-ids",
                    "description": "Migration id(s)"
                }
            ],
            "examples": [],
            "aliases": [
                "mir"
            ],
            "key": "migrate.rollback",
            "dashed": "migrate-rollback",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "migrate:setup",
            "description": "Charge et cr\u00e9\u00e9 les migrations ad\u00e9quates pour la base de donn\u00e9es existante indiqu\u00e9e",
            "options": [
                {
                    "name": "db-type",
                    "description": "Type de base de donn\u00e9es de l'installation Drupal"
                },
                {
                    "name": "db-host",
                    "description": "Serveur de la base de donn\u00e9es"
                },
                {
                    "name": "db-name",
                    "description": "Nom de la base de donn\u00e9es"
                },
                {
                    "name": "db-user",
                    "description": "Utilisateur de la base de donn\u00e9es"
                },
                {
                    "name": "db-pass",
                    "description": "Mot de passe de la base de donn\u00e9es"
                },
                {
                    "name": "db-prefix",
                    "description": "Pr\u00e9fixe de la base de donn\u00e9es"
                },
                {
                    "name": "db-port",
                    "description": "Port de la base de donn\u00e9es"
                },
                {
                    "name": "source-base_path",
                    "description": "Local file directory containing your source site (e.g. \/var\/www\/docroot), or your site address (for example http:\/\/example.com)"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "mis"
            ],
            "key": "migrate.setup",
            "dashed": "migrate-setup",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "module:dependency:install",
            "description": "Install dependencies module in the application",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be enabled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Install the dependencies of the specfied module",
                    "execution": "drupal module:dependency:install  modulename\n"
                }
            ],
            "aliases": [
                "modi"
            ],
            "key": "module.dependency.install",
            "dashed": "module-dependency-install",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "module:download",
            "description": "T\u00e9l\u00e9charge le module ou les modules dans l'application",
            "options": [
                {
                    "name": "path",
                    "description": "Le chemin du projet contrib"
                },
                {
                    "name": "latest",
                    "description": "Valeur par d\u00e9faut qui t\u00e9l\u00e9charge la version la plus r\u00e9cente"
                },
                {
                    "name": "composer",
                    "description": "T\u00e9l\u00e9charge le module via Composer"
                },
                {
                    "name": "unstable",
                    "description": "Module unstable"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Le ou les modules \u00e0 activer doivent \u00eatre s\u00e9par\u00e9s par un espace"
                }
            ],
            "examples": [
                {
                    "description": "Download module specifying module name and its path",
                    "execution": "drupal module:download  modulename  \\\n  --path=\"modules\/contrib\"\n"
                }
            ],
            "aliases": [
                "mod"
            ],
            "key": "module.download",
            "dashed": "module-download",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "module:install",
            "description": "Installe un ou plusieurs modules dans l'application",
            "options": [
                {
                    "name": "latest",
                    "description": "T\u00e9l\u00e9charge par d\u00e9faut la version la plus r\u00e9cente"
                },
                {
                    "name": "composer",
                    "description": "T\u00e9l\u00e9charge le module via Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Le ou les modules \u00e0 activer doivent \u00eatre s\u00e9par\u00e9s par un espace"
                }
            ],
            "examples": [
                {
                    "description": "Install module specifying the module name",
                    "execution": "drupal module:install  modulename\n"
                }
            ],
            "aliases": [
                "moi"
            ],
            "key": "module.install",
            "dashed": "module-install",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "module:path",
            "description": "Renvoie le chemin relatif vers le module (ou le chemin absolu)",
            "options": [
                {
                    "name": "absolute",
                    "description": "Renvoie le chemin absolu"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Le nom du module (nom machine)"
                }
            ],
            "examples": [
                {
                    "description": "Get the relative path of the module specifying the module name",
                    "execution": "drupal module:path  modulename\n"
                }
            ],
            "aliases": [
                "mop"
            ],
            "key": "module.path",
            "dashed": "module-path",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "module:uninstall",
            "description": "D\u00e9sinstalle le ou les modules de l'application",
            "options": [
                {
                    "name": "force",
                    "description": "Souhaitez-vous ignorer les d\u00e9pendances et forcer la d\u00e9sinstallation du module ?"
                },
                {
                    "name": "composer",
                    "description": "D\u00e9sinstalle le module via Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be uninstalled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall the module specifying the module name",
                    "execution": "drupal module:uninstall  modulename\n"
                }
            ],
            "aliases": [
                "mou"
            ],
            "key": "module.uninstall",
            "dashed": "module-uninstall",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "module:update",
            "description": "Met \u00e0 jour le c\u0153ur, ou bien un ou plusieurs modules de l'application",
            "options": [
                {
                    "name": "composer",
                    "description": "Mettre \u00e0 jour le module via Composer"
                },
                {
                    "name": "simulate",
                    "description": "Simuler le processus de mise \u00e0 jour via Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Le ou les modules \u00e0 mettre \u00e0 jour doivent \u00eatre s\u00e9par\u00e9s par un espace. Laisser vide pour mettre \u00e0 jour le c\u0153ur et tous vos modules g\u00e9r\u00e9s par Composer."
                }
            ],
            "examples": [
                {
                    "description": "Update module specifying module name and composer parameter",
                    "execution": "drupal module:update  modulename  \\\n  --composer\n"
                }
            ],
            "aliases": [
                "moup"
            ],
            "key": "module.update",
            "dashed": "module-update",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "multisite:new",
            "description": "Pr\u00e9pare les fichiers pour une nouvelle installation multi-sites.",
            "options": [
                {
                    "name": "copy-default",
                    "description": "Copies existing site from the default install."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "Name of directory under 'sites' which should be created."
                },
                {
                    "name": "uri",
                    "description": "Site URI to add to sites.php."
                }
            ],
            "examples": [
                {
                    "description": "Set up files for a multisite install specifying destination path and uri",
                    "execution": "drupal multisite:new  vendor\/newsite http:\/\/mysite.example.com\n"
                }
            ],
            "aliases": [
                "mun",
                "sn"
            ],
            "key": "multisite.new",
            "dashed": "multisite-new",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "multisite:update",
            "description": "Update the files for a multisite installed.",
            "options": [
                {
                    "name": "directory",
                    "description": "Name of new directory for multisite installed. (You could create subdir separated by '\/')"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Update the files for a multisite installed specifying old path and new path",
                    "execution": "drupal multisite:update\n"
                }
            ],
            "aliases": [
                "muu"
            ],
            "key": "multisite.update",
            "dashed": "multisite-update",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "node:access:rebuild",
            "description": "Reconstruit les permissions d'acc\u00e8s aux noeuds. Le processus supprimera tous les privil\u00e8ges sur le contenu et les remplacera par des permissions bas\u00e9s sur les modules et la configuration actuels.",
            "options": [
                {
                    "name": "batch",
                    "description": "Traiter en mode batch."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Reconstruire les permissions d'acc\u00e8s aux noeuds",
                    "execution": "drupal node:access:rebuild --batch"
                }
            ],
            "aliases": [
                "nar"
            ],
            "key": "node.access.rebuild",
            "dashed": "node-access-rebuild",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "queue:run",
            "description": "Traite la queue s\u00e9lectionn\u00e9e.",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Nom de la queue."
                }
            ],
            "examples": [],
            "aliases": [
                "qr"
            ],
            "key": "queue.run",
            "dashed": "queue-run",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "quick:start",
            "description": "Download, install and serve a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "quick.start",
            "dashed": "quick-start",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "rest:disable",
            "description": "D\u00e9sactive une ressource Rest dans l'application",
            "options": [],
            "arguments": [
                {
                    "name": "resource-id",
                    "description": "Rest ID"
                }
            ],
            "examples": [],
            "aliases": [
                "red"
            ],
            "key": "rest.disable",
            "dashed": "rest-disable",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "rest:enable",
            "description": "Active une ressource Rest de l'application",
            "options": [],
            "arguments": [
                {
                    "name": "resource-id",
                    "description": "ID Rest"
                }
            ],
            "examples": [],
            "aliases": [
                "ree"
            ],
            "key": "rest.enable",
            "dashed": "rest-enable",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "role:delete",
            "description": "Delete roles for the application",
            "options": [],
            "arguments": [
                {
                    "name": "roles",
                    "description": "commands.role.delete.argument.roles"
                }
            ],
            "examples": [
                {
                    "description": "Delete role specifying rolename",
                    "execution": "drupal role:delete  moderator\n"
                }
            ],
            "aliases": [
                "rd"
            ],
            "key": "role.delete",
            "dashed": "role-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "role:new",
            "description": "Create roles for the application",
            "options": [],
            "arguments": [
                {
                    "name": "rolename",
                    "description": "commands.role.new.argument.rolename"
                },
                {
                    "name": "machine-name",
                    "description": "commands.role.new.argument.machine-name"
                }
            ],
            "examples": [
                {
                    "description": "Create role specifying rolename and machine-name",
                    "execution": "drupal role:new  moderator moderator\n"
                }
            ],
            "aliases": [
                "rn"
            ],
            "key": "role.new",
            "dashed": "role-new",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "router:rebuild",
            "description": "Reconstruit les routes de l'application",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Rebuild routes",
                    "execution": "drupal router:rebuild"
                }
            ],
            "aliases": [
                "rr",
                "ror"
            ],
            "key": "router.rebuild",
            "dashed": "router-rebuild",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "settings:set",
            "description": "Change une valeur de configuration sp\u00e9cifique dans le fichier de configuration de Drupal Console",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Setting name in YAML flatten format to set a value in Drupal Console config file"
                },
                {
                    "name": "value",
                    "description": "Setting value to set in Drupal Console config file"
                }
            ],
            "examples": [
                {
                    "description": "Set application language setting value to \"es\"",
                    "execution": "drupal settings:set  application.language es"
                }
            ],
            "aliases": [],
            "key": "settings.set",
            "dashed": "settings-set",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:import:local",
            "description": "Importe\/Configure un projet local Drupal existant",
            "options": [
                {
                    "name": "environment",
                    "description": "Nom de l'environnement qui qui va \u00eatre import\u00e9"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Nom qui sera utilis\u00e9 pour g\u00e9n\u00e9rer la configuration du site"
                },
                {
                    "name": "directory",
                    "description": "Dossier racine du site Drupal existant"
                }
            ],
            "examples": [
                {
                    "description": "Import local drupal project specifying the site name and the path",
                    "execution": "drupal site:import:local  SiteName \/private\/var\/www\/vhost\/anexusit\/drupal8.dev\/web"
                }
            ],
            "aliases": [
                "sil"
            ],
            "key": "site.import.local",
            "dashed": "site-import-local",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:install",
            "description": "Installe un site Drupal",
            "options": [
                {
                    "name": "langcode",
                    "description": "Langue Drupal"
                },
                {
                    "name": "db-type",
                    "description": "Type de base de donn\u00e9es \u00e0 utiliser lors de l'installation"
                },
                {
                    "name": "db-file",
                    "description": "Fichier de base de donn\u00e9es Drupal \u00e0 utiliser lors de l'installation"
                },
                {
                    "name": "db-host",
                    "description": "Serveur de la base de donn\u00e9es"
                },
                {
                    "name": "db-name",
                    "description": "Nom de la base de donn\u00e9es"
                },
                {
                    "name": "db-user",
                    "description": "Utilisateur de la base de donn\u00e9es"
                },
                {
                    "name": "db-pass",
                    "description": "Mot de passe de la base de donn\u00e9es"
                },
                {
                    "name": "db-prefix",
                    "description": "Pr\u00e9fixe de la base de donn\u00e9es"
                },
                {
                    "name": "db-port",
                    "description": "Port de la base de donn\u00e9es"
                },
                {
                    "name": "site-name",
                    "description": "Nom du site Drupal"
                },
                {
                    "name": "site-mail",
                    "description": "Courriel du site Drupal"
                },
                {
                    "name": "account-name",
                    "description": "Nom du compte administrateur Drupal"
                },
                {
                    "name": "account-mail",
                    "description": "Courriel du compte administrateur Drupal"
                },
                {
                    "name": "account-pass",
                    "description": "Mot de passe du compte administrateur Drupal"
                },
                {
                    "name": "force",
                    "description": "Force to reinstall the site"
                }
            ],
            "arguments": [
                {
                    "name": "profile",
                    "description": "Profil Drupal \u00e0 installer"
                },
                {
                    "name": "db-url",
                    "description": "Use Database url to the installation instead of using the options. (Sqlite is not supported)"
                }
            ],
            "examples": [
                {
                    "description": "Install a drupal project specifying installation type, language code, database configuration, site name, site email and admin credential settings",
                    "execution": "drupal site:install  standard  \\\n  --langcode=\"en\"  \\\n  --db-type=\"mysql\"  \\\n  --db-host=\"127.0.0.1\"  \\\n  --db-name=\"drupal8\"  \\\n  --db-user=\"u53rn4m3\"  \\\n  --db-pass=\"dbp455\"  \\\n  --db-port=\"3306\"  \\\n  --site-name=\"Drupal 8\"  \\\n  --site-mail=\"admin@example.com\"  \\\n  --account-name=\"admin\"  \\\n  --account-mail=\"admin@example.com\"  \\\n  --account-pass=\"p455w0rd\"\n"
                },
                {
                    "description": "Install a drupal project using a mysql url",
                    "execution": "drupal site:install  standard  mysql:\/\/dbUser:dbPass@dbHost\/dbName \\\n  --langcode=\"en\"  \\\n  --site-name=\"Drupal 8\"  \\\n  --site-mail=\"admin@example.com\"  \\\n  --account-name=\"admin\"  \\\n  --account-mail=\"admin@example.com\"  \\\n  --account-pass=\"p455w0rd\"\n"
                }
            ],
            "aliases": [
                "si"
            ],
            "key": "site.install",
            "dashed": "site-install",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:maintenance",
            "description": "Fait basculer le site en mode maintenance",
            "options": [],
            "arguments": [
                {
                    "name": "mode",
                    "description": "Mode maintenance du site"
                }
            ],
            "examples": [
                {
                    "description": "Switch on maintenance",
                    "execution": "drupal site:maintenance  on"
                },
                {
                    "description": "Switch off maintenance",
                    "execution": "drupal site:maintenance  off\n"
                }
            ],
            "aliases": [
                "sma"
            ],
            "key": "site.maintenance",
            "dashed": "site-maintenance",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:mode",
            "description": "Change la configuration de la performance du syst\u00e8me",
            "options": [],
            "arguments": [
                {
                    "name": "environment",
                    "description": "Nom de l'environnement"
                }
            ],
            "examples": [
                {
                    "description": "Switch system to prod",
                    "execution": "drupal site:mode  prod"
                },
                {
                    "description": "Switch system to dev",
                    "execution": "drupal site:mode  dev\n"
                }
            ],
            "aliases": [
                "smo"
            ],
            "key": "site.mode",
            "dashed": "site-mode",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:new",
            "description": "Download a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "site.new",
            "dashed": "site-new",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:statistics",
            "description": "Affiche les statistiques actuelles du site web.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "sst"
            ],
            "key": "site.statistics",
            "dashed": "site-statistics",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "site:status",
            "description": "Voir l'\u00e9tat actuel de l'installation Drupal",
            "options": [
                {
                    "name": "format",
                    "description": "commands.site.status.options.format"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Get drupal installation status specifying the output format as table",
                    "execution": "drupal site:status  \\\n  --format=\"table\"\n"
                }
            ],
            "aliases": [
                "ss",
                "st"
            ],
            "key": "site.status",
            "dashed": "site-status",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "state:delete",
            "description": "Supprime l'Etat",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Nom de l'Etat."
                }
            ],
            "examples": [
                {
                    "description": "Delete state specifying the state name",
                    "execution": "drupal state:delete  comment.maintain_entity_statistics\n"
                }
            ],
            "aliases": [
                "std"
            ],
            "key": "state.delete",
            "dashed": "state-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "state:override",
            "description": "Surcharge la cl\u00e9 d'un Etat.",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "La cl\u00e9 de l'Etat \u00e0 surcharger."
                },
                {
                    "name": "value",
                    "description": "La valeur de l'Etat \u00e0 fixer."
                }
            ],
            "examples": [
                {
                    "description": "Override state value specifying the state name and the new value",
                    "execution": "drupal state:override  comment.node_comment_statistics_scale \"!!float 1\"\n"
                }
            ],
            "aliases": [
                "sto"
            ],
            "key": "state.override",
            "dashed": "state-override",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "taxonomy:term:delete",
            "description": "Delete taxonomy terms from a vocabulary",
            "options": [],
            "arguments": [
                {
                    "name": "vid",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Delete all terms of the \"tags\" vocabulary",
                    "execution": "drupal taxonomy:term:delete  tags\n"
                }
            ],
            "aliases": [
                "ttd"
            ],
            "key": "taxonomy.term.delete",
            "dashed": "taxonomy-term-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "theme:download",
            "description": "T\u00e9l\u00e9charge un th\u00e8me dans l'application",
            "options": [
                {
                    "name": "composer",
                    "description": "Utiliser l'option --composer pour effectuer le t\u00e9l\u00e9chargement du th\u00e8me avec Composer"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Le nom du th\u00e8me"
                },
                {
                    "name": "version",
                    "description": "Version du th\u00e8me, par exemple 1.x-dev"
                }
            ],
            "examples": [
                {
                    "description": "Download theme specifying name and version",
                    "execution": "drupal theme:download  Alina 7.x-1.2\n"
                }
            ],
            "aliases": [
                "thd"
            ],
            "key": "theme.download",
            "dashed": "theme-download",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "theme:install",
            "description": "Installe un ou plusieurs th\u00e8mes dans l'application",
            "options": [
                {
                    "name": "set-default",
                    "description": "Etablir comme th\u00e8me par d\u00e9faut"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Le ou les th\u00e8mes \u00e0 activer doivent \u00eatre s\u00e9par\u00e9s par des virgules"
                }
            ],
            "examples": [
                {
                    "description": "Install theme specifying the name",
                    "execution": "drupal theme:install  mytheme\n"
                }
            ],
            "aliases": [
                "thi"
            ],
            "key": "theme.install",
            "dashed": "theme-install",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "theme:path",
            "description": "Renvoie le chemin relatif du th\u00e8me (ou le chemin absolu)",
            "options": [
                {
                    "name": "absolute",
                    "description": "Renvoie le chemin absolu du th\u00e8me"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Theme name"
                }
            ],
            "examples": [
                {
                    "description": "Get the path of mytheme",
                    "execution": "drupal theme:path  mytheme\n"
                }
            ],
            "aliases": [
                "thp"
            ],
            "key": "theme.path",
            "dashed": "theme-path",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "theme:uninstall",
            "description": "D\u00e9sisntalle un ou plusieurs th\u00e8mes dans l'application",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Le ou les th\u00e8mes \u00e0 d\u00e9sinstaller doivent \u00eatre s\u00e9par\u00e9s par des virgules"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall theme specifying the name",
                    "execution": "drupal theme:uninstall  mytheme\n"
                }
            ],
            "aliases": [
                "thu"
            ],
            "key": "theme.uninstall",
            "dashed": "theme-uninstall",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "update:entities",
            "description": "Applique des mises \u00e0 jour d'entit\u00e9s",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Update entities",
                    "execution": "drupal update:entities\n"
                }
            ],
            "aliases": [
                "upe"
            ],
            "key": "update.entities",
            "dashed": "update-entities",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "update:execute",
            "description": "Ex\u00e9cute une fonction de mise \u00e0 jour N dans un module, ou bien ex\u00e9cute toutes les fonctions",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Le nom du module."
                },
                {
                    "name": "update-n",
                    "description": "commands.update.execute.options.update-n"
                }
            ],
            "examples": [
                {
                    "description": "Update all entities",
                    "execution": "drupal update:execute\n"
                },
                {
                    "description": "Execute updates for system module",
                    "execution": "drupal update:execute system\n"
                }
            ],
            "aliases": [
                "upex",
                "updb"
            ],
            "key": "update.execute",
            "dashed": "update-execute",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:create",
            "description": "Create users for the application",
            "options": [
                {
                    "name": "roles",
                    "description": "User roles"
                },
                {
                    "name": "email",
                    "description": "User email"
                },
                {
                    "name": "status",
                    "description": "User status"
                }
            ],
            "arguments": [
                {
                    "name": "username",
                    "description": "User name to be created"
                },
                {
                    "name": "password",
                    "description": "User password"
                }
            ],
            "examples": [
                {
                    "description": "Create user specifying username, password, role, email and status",
                    "execution": "drupal user:create  john p455w0rd  \\\n  --roles='authenticated'  \\\n  --email=\"john@anexusit.com\"  \\\n  --status=\"1\""
                },
                {
                    "description": "Create admin user specifying username, password, role, email and status",
                    "execution": "drupal user:create  doe p455w0rd  \\\n  --roles='administrator'  \\\n  --email=\"doe@anexusit.com\"  \\\n  --status=\"1\"\n"
                }
            ],
            "aliases": [
                "uc"
            ],
            "key": "user.create",
            "dashed": "user-create",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:delete",
            "description": "Supprime des utilisateurs de l'application",
            "options": [
                {
                    "name": "user",
                    "description": "User name\/id to be deleted"
                },
                {
                    "name": "roles",
                    "description": "R\u00f4les associ\u00e9s aux utilisateurs \u00e0 supprimer"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Delete user specifying the id and the user role",
                    "execution": "drupal user:delete  \\\n  --user-id=\"2\"\n  --roles='authenticated'"
                },
                {
                    "description": "Delete user specifying its id",
                    "execution": "drupal user:delete  \\\n  --user-id=\"3\"\n"
                },
                {
                    "description": "Delete users with the role \"authenticated\"",
                    "execution": "drupal user:delete  \\\n  --role=\"authenticated\"\n"
                }
            ],
            "aliases": [
                "ud"
            ],
            "key": "user.delete",
            "dashed": "user-delete",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:login:clear:attempts",
            "description": "Nettoie les tentatives de connexion rat\u00e9s pour un compte.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "User name\/id."
                }
            ],
            "examples": [],
            "aliases": [
                "ulca",
                "uslca"
            ],
            "key": "user.login.clear.attempts",
            "dashed": "user-login-clear-attempts",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:login:url",
            "description": "Retourne une url de connection \u00e0 validit\u00e9 unique pour un utilisateur.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "User name\/id."
                }
            ],
            "examples": [
                {
                    "description": "Get one time login url for user id 1",
                    "execution": "drupal user:login:url  1\n"
                },
                {
                    "description": "Get one time login url for username jmolivas",
                    "execution": "drupal user:login:url jmolivas"
                }
            ],
            "aliases": [
                "ulu",
                "usli",
                "uli"
            ],
            "key": "user.login.url",
            "dashed": "user-login-url",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:password:hash",
            "description": "G\u00e9n\u00e8re un hash \u00e0 partir d'un mot de passe en texte brut.",
            "options": [],
            "arguments": [
                {
                    "name": "password",
                    "description": "Mot(s) de passe en texte brut"
                }
            ],
            "examples": [
                {
                    "description": "Get hash of the word \"p455w0rd\"",
                    "execution": "drupal user:password:hash  p455w0rd\n"
                }
            ],
            "aliases": [
                "uph",
                "usph"
            ],
            "key": "user.password.hash",
            "dashed": "user-password-hash",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:password:reset",
            "description": "R\u00e9initialise le mot de passe pour un utilisateur sp\u00e9cifique.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "User name\/id"
                },
                {
                    "name": "password",
                    "description": "Mot de passe au format texte"
                }
            ],
            "examples": [
                {
                    "description": "Update password specifying the user id and the new password",
                    "execution": "drupal user:password:reset  2 p455w0rd\n"
                },
                {
                    "description": "Update password specifying the user jmolivas and the new password",
                    "execution": "drupal user:password:reset jmolivas p455w0rd\n"
                }
            ],
            "aliases": [
                "upr",
                "upsr"
            ],
            "key": "user.password.reset",
            "dashed": "user-password-reset",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:role",
            "description": "Ajoute\/retire un r\u00f4le \u00e0 un utilisateur donn\u00e9",
            "options": [],
            "arguments": [
                {
                    "name": "operation",
                    "description": "Ajouter ou retirer"
                },
                {
                    "name": "user",
                    "description": "L'utilisateur concern\u00e9 (un seul)"
                },
                {
                    "name": "role",
                    "description": "R\u00f4les \u00e0 ajouter ou \u00e0 retirer. Merci de fournir le nom machine (un seul)"
                }
            ],
            "examples": [
                {
                    "description": "Add administrator role to the user admin specifying the username and the role",
                    "execution": "drupal user:role  add admin administrator"
                },
                {
                    "description": "Remove administrator role from the user admin specifying the username and the role",
                    "execution": "drupal user:role  remove admin administrator\n"
                }
            ],
            "aliases": [
                "ur"
            ],
            "key": "user.role",
            "dashed": "user-role",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "user:unblock",
            "description": "Unblock a specific user.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "User name\/id"
                }
            ],
            "examples": [
                {
                    "description": "Unblock user providing the user id",
                    "execution": "drupal user:unblock 2"
                },
                {
                    "description": "Unblock user providing the user name",
                    "execution": "drupal user:unblock johndoe\n"
                }
            ],
            "aliases": [
                "uu"
            ],
            "key": "user.unblock",
            "dashed": "user-unblock",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "views:disable",
            "description": "D\u00e9sactive une vue",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "Identifiant de la vue"
                }
            ],
            "examples": [
                {
                    "description": "Disable content view",
                    "execution": "drupal views:disable  content\n"
                },
                {
                    "description": "Disable frontpage view",
                    "execution": "drupal views:disable  frontpage\n"
                }
            ],
            "aliases": [
                "vd",
                "vdi"
            ],
            "key": "views.disable",
            "dashed": "views-disable",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        },
        {
            "name": "views:enable",
            "description": "Active une vue",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "Identifiant de la vue"
                }
            ],
            "examples": [
                {
                    "description": "Enable content view",
                    "execution": "drupal views:enable  content\n"
                },
                {
                    "description": "Enable frontpage view",
                    "execution": "drupal views:enable  frontpage\n"
                }
            ],
            "aliases": [
                "ve"
            ],
            "key": "views.enable",
            "dashed": "views-enable",
            "messages": {
                "usage": "Utilisation",
                "options": "Options disponibles",
                "option": "Option",
                "details": "D\u00e9tails",
                "arguments": "Param\u00e8tres disponibles",
                "argument": "Param\u00e8tre",
                "examples": "Exemples"
            }
        }
    ],
    "namespaces": [
        {
            "name": "cache"
        },
        {
            "name": "config"
        },
        {
            "name": "create"
        },
        {
            "name": "cron"
        },
        {
            "name": "database"
        },
        {
            "name": "debug"
        },
        {
            "name": "devel"
        },
        {
            "name": "docker"
        },
        {
            "name": "dotenv"
        },
        {
            "name": "entity"
        },
        {
            "name": "features"
        },
        {
            "name": "field"
        },
        {
            "name": "generate"
        },
        {
            "name": "image"
        },
        {
            "name": "locale"
        },
        {
            "name": "migrate"
        },
        {
            "name": "module"
        },
        {
            "name": "multisite"
        },
        {
            "name": "node"
        },
        {
            "name": "queue"
        },
        {
            "name": "quick"
        },
        {
            "name": "rest"
        },
        {
            "name": "role"
        },
        {
            "name": "router"
        },
        {
            "name": "settings"
        },
        {
            "name": "site"
        },
        {
            "name": "state"
        },
        {
            "name": "taxonomy"
        },
        {
            "name": "theme"
        },
        {
            "name": "update"
        },
        {
            "name": "user"
        },
        {
            "name": "views"
        }
    ]
}