{
    "language": "hu",
    "type": "commands",
    "commands": [
        {
            "name": "about",
            "description": "Alapvet\u0151 inform\u00e1ci\u00f3kat jelen\u00edt meg a Drupal Console projektr\u0151l",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "about",
            "dashed": "about",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "chain",
            "description": "Chain parancs v\u00e9grehajt\u00e1sa",
            "options": [
                {
                    "name": "file",
                    "description": "A v\u00e9grehajtand\u00f3 parancsokat tartalmaz\u00f3, felhaszn\u00e1l\u00f3 \u00e1ltal megadott f\u00e1jl."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal chain \\\n  --file=\"\/path\/to\/file\/chain-file.yml\"\n"
                }
            ],
            "aliases": [],
            "key": "chain",
            "dashed": "chain",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "check",
            "description": "System requirement checker",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "check",
            "dashed": "check",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "composerize",
            "description": "commands.composerize.description",
            "options": [
                {
                    "name": "show-packages",
                    "description": "commands.composerize.options.show-packages"
                },
                {
                    "name": "include-version",
                    "description": "commands.composerize.options.include-version"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "composerize",
            "dashed": "composerize",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "exec",
            "description": "Execute an external command.",
            "options": [
                {
                    "name": "working-directory",
                    "description": "The current working directory."
                }
            ],
            "arguments": [
                {
                    "name": "bin",
                    "description": "Executable name."
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "exec",
            "dashed": "exec",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "help",
            "description": "Displays help for a command",
            "options": [
                {
                    "name": "xml",
                    "description": "To output list as XML"
                },
                {
                    "name": "raw",
                    "description": "To output raw command list"
                },
                {
                    "name": "format",
                    "description": "The output format (txt, xml, json, or md)"
                }
            ],
            "arguments": [
                {
                    "name": "command_name",
                    "description": "The command name"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "help",
            "dashed": "help",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "init",
            "description": "Copy configuration files to user home directory.",
            "options": [
                {
                    "name": "destination",
                    "description": "Destination directory to copy files"
                },
                {
                    "name": "site",
                    "description": "commands.init.options.site"
                },
                {
                    "name": "override",
                    "description": "Override configurations files"
                },
                {
                    "name": "autocomplete",
                    "description": "Autocomplete tool files flag."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "init",
            "dashed": "init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "list",
            "description": "A rendelkez\u00e9sre \u00e1ll\u00f3 parancsok list\u00e1z\u00e1sa",
            "options": [
                {
                    "name": "xml",
                    "description": "A lista ki\u00edr\u00e1sa XML form\u00e1tumban"
                },
                {
                    "name": "raw",
                    "description": "A nyers parancslista ki\u00edr\u00e1sa"
                },
                {
                    "name": "format",
                    "description": "A kimeneti form\u00e1tum (txt, xml, json vagy md)"
                }
            ],
            "arguments": [
                {
                    "name": "namespace",
                    "description": "A n\u00e9vt\u00e9r neve"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "list",
            "dashed": "list",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "shell",
            "description": "Open a shell providing an interactive REPL (Read\u2013Eval\u2013Print-Loop).",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "shell",
            "dashed": "shell",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "server",
            "description": "A PHP be\u00e9p\u00edtett webkiszolg\u00e1l\u00f3j\u00e1nak futtat\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "address",
                    "description": "A c\u00edm:port \u00e9rt\u00e9kek"
                }
            ],
            "examples": [
                {
                    "description": "Futtat\u00e1s az alap\u00e9rtelmezett c\u00edm argumentum\u00e9rt\u00e9kkel: 127.0.0.1:8088",
                    "execution": "drupal server"
                },
                {
                    "description": "C\u00edm argumentum \u00e1tad\u00e1sa m\u00e1sik portsz\u00e1m haszn\u00e1lat\u00e1hoz",
                    "execution": "drupal server 127.0.0.1:8089"
                },
                {
                    "description": "Alap\u00e9rtelmezett c\u00edm argumentum\u00e9rt\u00e9kek futtat\u00e1sa, --root param\u00e9ter haszn\u00e1lata a Drupal gy\u00f6k\u00e9r megad\u00e1s\u00e1ra",
                    "execution": "drupal --root=\/var\/www\/drupal8.dev server"
                }
            ],
            "aliases": [
                "serve",
                "rs"
            ],
            "key": "server",
            "dashed": "server",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "snippet",
            "description": "commands.snippet.description",
            "options": [
                {
                    "name": "file",
                    "description": "commands.snippet.options.file"
                },
                {
                    "name": "code",
                    "description": "commands.snippet.options.code"
                },
                {
                    "name": "show-code",
                    "description": "commands.snippet.options.show-code"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "snippet",
            "dashed": "snippet",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cache:rebuild",
            "description": "A webhely \u00f6sszes gyors\u00edt\u00f3t\u00e1r\u00e1nak \u00fajra\u00e9p\u00edt\u00e9se \u00e9s t\u00f6rl\u00e9se.",
            "options": [],
            "arguments": [
                {
                    "name": "cache",
                    "description": "Csak egy adott gyors\u00edt\u00f3t\u00e1r t\u00f6rl\u00e9se."
                }
            ],
            "examples": [
                {
                    "description": "\u00d6sszes gyors\u00edt\u00f3t\u00e1r \u00fajra\u00e9p\u00edt\u00e9se",
                    "execution": "drupal cr all"
                },
                {
                    "description": "Felder\u00edt\u00e9si gyors\u00edt\u00f3t\u00e1r \u00fajra\u00e9p\u00edt\u00e9se",
                    "execution": "drupal cr discovery"
                }
            ],
            "aliases": [
                "cr",
                "cc"
            ],
            "key": "cache.rebuild",
            "dashed": "cache-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cache:tag:invalidate",
            "description": "commands.cache.tag.invalidate.description",
            "options": [],
            "arguments": [
                {
                    "name": "tag",
                    "description": "commands.cache.tag.invalidate.options.tag"
                }
            ],
            "examples": [],
            "aliases": [
                "cti"
            ],
            "key": "cache.tag.invalidate",
            "dashed": "cache-tag-invalidate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:delete",
            "description": "Delete configuration",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Configuration type."
                },
                {
                    "name": "name",
                    "description": "Configuration name."
                }
            ],
            "examples": [
                {
                    "description": "Provide a config type and a config name",
                    "execution": "drupal config:delete active all"
                }
            ],
            "aliases": [
                "cd"
            ],
            "key": "config.delete",
            "dashed": "config-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:diff",
            "description": "Az akt\u00edv konfigur\u00e1ci\u00f3t egy k\u00f6nyvt\u00e1rral \u00f6sszehasonl\u00edtva az elt\u00e9r\u0151 konfigur\u00e1ci\u00f3s elemek.",
            "options": [
                {
                    "name": "reverse",
                    "description": "M\u00f3dos\u00edt\u00e1sok megtekint\u00e9se ford\u00edtva (vagyis egy k\u00f6nyvt\u00e1r \u00f6sszehasonl\u00edt\u00e1sa az akt\u00edv konfigur\u00e1ci\u00f3val)."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "A k\u00f6nyvt\u00e1r, amivel az \u00f6sszehasonl\u00edt\u00e1st v\u00e9gezni kell. Ha nincs megadva, akkor a program a Drupal konfigur\u00e1ci\u00f3s k\u00f6nyvt\u00e1rakb\u00f3l v\u00e1laszt."
                }
            ],
            "examples": [
                {
                    "description": "Provide a config directory",
                    "execution": "drupal config:diff ..\/config\/path"
                }
            ],
            "aliases": [
                "cdi"
            ],
            "key": "config.diff",
            "dashed": "config-diff",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:edit",
            "description": "Szerkeszteni kell a kiv\u00e1lasztott konfigur\u00e1ci\u00f3t.",
            "options": [],
            "arguments": [
                {
                    "name": "config-name",
                    "description": "A konfigur\u00e1ci\u00f3 neve."
                },
                {
                    "name": "editor",
                    "description": "Szerkeszt\u0151."
                }
            ],
            "examples": [
                {
                    "description": "Edit system cron configurations with \"vim\" (default editor).",
                    "execution": "drupal config:edit system.cron"
                },
                {
                    "description": "Edit system cron configurations with \"gedit\".",
                    "execution": "drupal config:edit system.cron gedit"
                }
            ],
            "aliases": [
                "ced",
                "cdit"
            ],
            "key": "config.edit",
            "dashed": "config-edit",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export",
            "description": "Aktu\u00e1lis alkalmaz\u00e1skonfigur\u00e1ci\u00f3 export\u00e1l\u00e1sa.",
            "options": [
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                },
                {
                    "name": "tar",
                    "description": "If set, the configuration will be exported to an archive file."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Optional you can add the path to export",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\""
                },
                {
                    "description": "If export will be in a compressed file and\/or if uuid and config hashes will be removed.",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\" \\\n  --tar \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ce"
            ],
            "key": "config.export",
            "dashed": "config-export",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:content:type",
            "description": "Adott tartalomt\u00edpus \u00e9s mez\u0151inek export\u00e1l\u00e1sa.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "optional-config",
                    "description": "Tartalomt\u00edpus export\u00e1l\u00e1sa a modulba nem k\u00f6telez\u0151 YAML-konfigur\u00e1ci\u00f3k\u00e9nt"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.content.type.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.content.type.options.remove-config-hash"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "commands.config.export.content.type.options.include-module-dependencies"
                }
            ],
            "arguments": [
                {
                    "name": "content-type",
                    "description": "Az export\u00e1lni k\u00edv\u00e1nt tartalomt\u00edpus"
                }
            ],
            "examples": [
                {
                    "description": "Provide a content type  and module name",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\""
                },
                {
                    "description": "If you want export content type provide the optional config",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\" \\\n  --optional-config \n"
                }
            ],
            "aliases": [
                "cect"
            ],
            "key": "config.export.content.type",
            "dashed": "config-export-content-type",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:entity",
            "description": "commands.config.export.entity.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "optional-config",
                    "description": "commands.config.export.entity.options.optional-config"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.entity.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.entity.options.remove-config-hash"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "commands.config.export.entity.options.include-module-dependencies"
                }
            ],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.config.export.entity.arguments.entity-type"
                },
                {
                    "name": "bundle",
                    "description": "commands.config.export.entity.arguments.bundle"
                }
            ],
            "examples": [],
            "aliases": [
                "cee"
            ],
            "key": "config.export.entity",
            "dashed": "config-export-entity",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:single",
            "description": "Egyetlen konfigur\u00e1ci\u00f3s f\u00e1jl export\u00e1l\u00e1sa yml-f\u00e1jlk\u00e9nt.",
            "options": [
                {
                    "name": "name",
                    "description": "commands.config.export.single.options.name"
                },
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "include-dependencies",
                    "description": "A konfigur\u00e1ci\u00f3 f\u00fcgg\u0151s\u00e9gei is legyenek export\u00e1lva."
                },
                {
                    "name": "optional",
                    "description": "Export config as an optional YAML configuration in your module"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide config settings name to be exported",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name"
                },
                {
                    "description": "if uuid and\/or config hashes will be removed.",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ces"
            ],
            "key": "config.export.single",
            "dashed": "config-export-single",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:view",
            "description": "N\u00e9zet export\u00e1l\u00e1sa YAML-form\u00e1tumban egy megadott modulba, hogy \u00fajra lehessen haszn\u00e1lni m\u00e1s weboldalon.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "optional-config",
                    "description": "N\u00e9zet export\u00e1l\u00e1sa a modulba nem k\u00f6telez\u0151 YAML-konfigur\u00e1ci\u00f3k\u00e9nt"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "Modulf\u00fcgg\u0151s\u00e9geinek tartalmaz\u00e1sa a modul info.yml f\u00e1jlj\u00e1ban"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.entity.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.entity.options.remove-config-hash"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "N\u00e9zet azonos\u00edt\u00f3ja"
                }
            ],
            "examples": [
                {
                    "description": "Provide a view id",
                    "execution": "drupal config:export:view viewid"
                },
                {
                    "description": "You can provide the interactive values like parameter.",
                    "execution": "drupal config:export:view viewid \\\n  --module=\"modulename\" \\\n  --optional-config \\\n  --include-module-dependencies\n"
                }
            ],
            "aliases": [
                "cev"
            ],
            "key": "config.export.view",
            "dashed": "config-export-view",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:import",
            "description": "Konfigur\u00e1ci\u00f3 import\u00e1l\u00e1sa az aktu\u00e1lis alkalmaz\u00e1sba.",
            "options": [
                {
                    "name": "file",
                    "description": "Path to an archive file of configuration to import."
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                },
                {
                    "name": "remove-files",
                    "description": "Remove files after synchronization."
                },
                {
                    "name": "skip-uuid",
                    "description": "commands.config.import.options.skip-uuid"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide a configuration file",
                    "execution": "drupal config:import \\\n  --file=\/path\/to\/config\/file"
                },
                {
                    "description": "Provide a configuration directory",
                    "execution": "drupal config:import  \\\n  --directory=\/path\/to\/config\/dir\n"
                }
            ],
            "aliases": [
                "ci"
            ],
            "key": "config.import",
            "dashed": "config-import",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:import:single",
            "description": "Import the selected configuration.",
            "options": [
                {
                    "name": "file",
                    "description": "The file(s) name or file(s) absolute path to import"
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal config:import:single \\\n  --file=\"\/path\/to\/file\/block.block.default_block.yml\""
                },
                {
                    "description": "Providing file and directory options",
                    "execution": "drupal config:import:single  \\\n  --file=\"block.block.default_block.yml\" \\\n  --directory=\"\/path\/to\/directory\"\n"
                }
            ],
            "aliases": [
                "cis"
            ],
            "key": "config.import.single",
            "dashed": "config-import-single",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:override",
            "description": "Az akt\u00edv konfigur\u00e1ci\u00f3 \u00e9rt\u00e9k\u00e9nek fel\u00fclb\u00edr\u00e1l\u00e1sa.",
            "options": [
                {
                    "name": "key",
                    "description": "commands.config.override.options.key"
                },
                {
                    "name": "value",
                    "description": "commands.config.override.options.value"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Configuration name"
                }
            ],
            "examples": [
                {
                    "description": "A Contact modul el\u00e1raszt\u00e1si korl\u00e1tj\u00e1nak be\u00e1ll\u00edt\u00e1sa 10 \u00e9rt\u00e9kre.",
                    "execution": "drupal config:override contact.settings flood.limit 10"
                }
            ],
            "aliases": [
                "co"
            ],
            "key": "config.override",
            "dashed": "config-override",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:validate",
            "description": "Validate a drupal config against its schema",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Provide the configuration name.",
                    "execution": "drupal config:validate configuration.name"
                }
            ],
            "aliases": [
                "cv"
            ],
            "key": "config.validate",
            "dashed": "config-validate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:comments",
            "description": "Create dummy comments for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many comments would you like to create"
                },
                {
                    "name": "title-words",
                    "description": "Maximum number of words in comment titles"
                },
                {
                    "name": "time-range",
                    "description": "How far back in time should the comments be dated"
                }
            ],
            "arguments": [
                {
                    "name": "node-id",
                    "description": "Node ID where the comments will be created"
                }
            ],
            "examples": [
                {
                    "description": "Provide the node id where the comments will be generated.",
                    "execution": "drupal create:comments  node-id"
                },
                {
                    "description": "Provide number of comments to generate, max title words and time range.",
                    "execution": "drupal create:comments  node-id \\\n  --limit=\"2\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "crc"
            ],
            "key": "create.comments",
            "dashed": "create-comments",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:nodes",
            "description": "Teszttartalom l\u00e9trehoz\u00e1sa egy Drupal 8 alkalmaz\u00e1shoz.",
            "options": [
                {
                    "name": "limit",
                    "description": "H\u00e1ny tartalom j\u00f6jj\u00f6n l\u00e9tre"
                },
                {
                    "name": "title-words",
                    "description": "A tartalom c\u00edmei \u00e1ltal tartalmazott szavak maxim\u00e1lis sz\u00e1ma"
                },
                {
                    "name": "time-range",
                    "description": "Mennyire legyen visszad\u00e1tumozva a tartalom?"
                },
                {
                    "name": "revision",
                    "description": "commands.create.nodes.options.revision"
                },
                {
                    "name": "language",
                    "description": "commands.create.nodes.options.language"
                }
            ],
            "arguments": [
                {
                    "name": "content-types",
                    "description": "A tartalom l\u00e9trehoz\u00e1sakor haszn\u00e1land\u00f3 tartalomt\u00edpusok"
                }
            ],
            "examples": [
                {
                    "description": "Provide the content type name.",
                    "execution": "drupal create:nodes content-name"
                },
                {
                    "description": "Provide the limit of publications, limit of title words, time range and language.",
                    "execution": "drupal create:nodes content-name \\\n  --limit=\"5\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\" \\\n  --language=\"und\"\n"
                }
            ],
            "aliases": [
                "crn"
            ],
            "key": "create.nodes",
            "dashed": "create-nodes",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:roles",
            "description": "commands.create.roles.description",
            "options": [
                {
                    "name": "limit",
                    "description": "commands.create.roles.options.limit"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "crr"
            ],
            "key": "create.roles",
            "dashed": "create-roles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:terms",
            "description": "Tesztkifejez\u00e9sek l\u00e9trehoz\u00e1sa egy Drupal 8 alkalmaz\u00e1shoz.",
            "options": [
                {
                    "name": "limit",
                    "description": "H\u00e1ny sz\u00f3 j\u00f6jj\u00f6n l\u00e9tre"
                },
                {
                    "name": "name-words",
                    "description": "A kifejez\u00e9sek \u00e1ltal tartalmazott szavak maxim\u00e1lis sz\u00e1ma"
                }
            ],
            "arguments": [
                {
                    "name": "vocabularies",
                    "description": "A kifejez\u00e9sek l\u00e9trehoz\u00e1sakor haszn\u00e1land\u00f3 sz\u00f3t\u00e1rak"
                }
            ],
            "examples": [
                {
                    "description": "Provide the vocabulary term name.",
                    "execution": "drupal create:terms vocabulary"
                },
                {
                    "description": "Provide the limit of terms to add and limit of title words.",
                    "execution": "drupal create:terms tags \\\n  --limit=\"10\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crt"
            ],
            "key": "create.terms",
            "dashed": "create-terms",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:users",
            "description": "Tesztfelhaszn\u00e1l\u00f3k l\u00e9trehoz\u00e1sa egy Drupal 8 alkalmaz\u00e1shoz.",
            "options": [
                {
                    "name": "limit",
                    "description": "H\u00e1ny felhaszn\u00e1l\u00f3 j\u00f6jj\u00f6n l\u00e9tre"
                },
                {
                    "name": "password",
                    "description": "A l\u00e9trehozott felhaszn\u00e1l\u00f3khoz be\u00e1ll\u00edtott jelsz\u00f3"
                },
                {
                    "name": "time-range",
                    "description": "Mennyire legyen visszad\u00e1tumozva a felhaszn\u00e1l\u00f3k l\u00e9trehoz\u00e1sa"
                }
            ],
            "arguments": [
                {
                    "name": "roles",
                    "description": "A felhaszn\u00e1l\u00f3k l\u00e9trehoz\u00e1sakor haszn\u00e1land\u00f3 szerepk\u00f6r\u00f6k"
                }
            ],
            "examples": [
                {
                    "description": "Provide the user role.",
                    "execution": "drupal create:users role"
                },
                {
                    "description": "Provide the number of users to create, password and time range to create.",
                    "execution": "drupal create:users role \\\n  --limit=\"5\" \\\n  --password=\"usersnewpassword\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "cru"
            ],
            "key": "create.users",
            "dashed": "create-users",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:vocabularies",
            "description": "Tesztsz\u00f3t\u00e1rak l\u00e9trehoz\u00e1sa egy Drupal 8 alkalmaz\u00e1shoz.",
            "options": [
                {
                    "name": "limit",
                    "description": "H\u00e1ny sz\u00f3t\u00e1r j\u00f6jj\u00f6n l\u00e9tre?"
                },
                {
                    "name": "name-words",
                    "description": "A sz\u00f3t\u00e1rak nev\u00e9ben haszn\u00e1lt szavak maxim\u00e1lis sz\u00e1ma"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide the number of vocabularies to create and maximum number of words in vocabulary names",
                    "execution": "drupal create:vocabularies \\\n  --limit=\"5\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crv"
            ],
            "key": "create.vocabularies",
            "dashed": "create-vocabularies",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cron:execute",
            "description": "Cron megval\u00f3s\u00edt\u00e1sok v\u00e9grehajt\u00e1sa modul szerint, vagy az \u00f6sszes cron met\u00f3dus v\u00e9grehajt\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "A modul neve."
                }
            ],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                },
                {
                    "description": "Execute the cron on the specified module",
                    "execution": "drupal cron:execute \\\n  <module>\n"
                }
            ],
            "aliases": [
                "croe",
                "cre"
            ],
            "key": "cron.execute",
            "dashed": "cron-execute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cron:release",
            "description": "Cron rendszerz\u00e1r felold\u00e1sa a cron \u00fajb\u00f3li futtat\u00e1s\u00e1hoz",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                }
            ],
            "aliases": [
                "cror"
            ],
            "key": "cron.release",
            "dashed": "cron-release",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:add",
            "description": "Add a database to settings.php",
            "options": [
                {
                    "name": "database",
                    "description": "The database name"
                },
                {
                    "name": "username",
                    "description": "The database username"
                },
                {
                    "name": "password",
                    "description": "The database password"
                },
                {
                    "name": "prefix",
                    "description": "The database prefix"
                },
                {
                    "name": "host",
                    "description": "The database host address"
                },
                {
                    "name": "port",
                    "description": "The database host port"
                },
                {
                    "name": "driver",
                    "description": "The database driver"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Add a database to the settings.php",
                    "execution": "drupal database:add \\\n  --database=DATABASE \\\n  --username=USERNAME \\\n  --password=PASSWORD\n"
                }
            ],
            "aliases": [
                "dba"
            ],
            "key": "database.add",
            "dashed": "database-add",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:client",
            "description": "Adatb\u00e1zis\u00fcgyf\u00e9l ind\u00edt\u00e1sa, ha az el\u00e9rhet\u0151",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "Adatb\u00e1ziskulcs a settings.php f\u00e1jlb\u00f3l"
                },
                {
                    "name": "target",
                    "description": "commands.database.client.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Launch the default client or could launch another regarding the specification on the argument",
                    "execution": "drupal database:client <database>\n"
                }
            ],
            "aliases": [
                "dbc"
            ],
            "key": "database.client",
            "dashed": "database-client",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:connect",
            "description": "Megjelen\u00edti az adatb\u00e1zis-kapcsolatot",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "commands.database.connect.arguments.key"
                },
                {
                    "name": "target",
                    "description": "commands.database.connect.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Connects to an specified database, or the default if not arguments passed",
                    "execution": "drupal database:connect \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbco",
                "sqlc"
            ],
            "key": "database.connect",
            "dashed": "database-connect",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:drop",
            "description": "Egy adatb\u00e1zis \u00f6sszes t\u00e1bl\u00e1j\u00e1nak eldob\u00e1sa.",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "Adatb\u00e1ziskulcs a settings.php f\u00e1jlb\u00f3l"
                },
                {
                    "name": "target",
                    "description": "commands.database.drop.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Drop the tables on the database specified on the argument",
                    "execution": "drupal database:drop \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbd"
            ],
            "key": "database.drop",
            "dashed": "database-drop",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:dump",
            "description": "Adatb\u00e1zis szerkezet\u00e9nek \u00e9s tartalm\u00e1nak ki\u00edrat\u00e1sa",
            "options": [
                {
                    "name": "file",
                    "description": "Az adatb\u00e1zis biztons\u00e1gi ment\u00e9s\u00e9nek f\u00e1jlneve"
                },
                {
                    "name": "gz",
                    "description": "Pass this option if you want the sql result file gzipped"
                },
                {
                    "name": "exclude-cache",
                    "description": "commands.database.dump.options.exclude.cache"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "Adatb\u00e1ziskulcs a settings.php f\u00e1jlb\u00f3l"
                },
                {
                    "name": "target",
                    "description": "commands.database.dump.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Dump default database or the one specified on the argument",
                    "execution": "drupal database:dump \\\n  <database>"
                },
                {
                    "description": "Dump in gz compressed format",
                    "execution": "drupal database:dump \\\n  --gz"
                }
            ],
            "aliases": [
                "dbdu"
            ],
            "key": "database.dump",
            "dashed": "database-dump",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:log:clear",
            "description": "Esem\u00e9nyek elt\u00e1vol\u00edt\u00e1sa a DBLog t\u00e1bl\u00e1b\u00f3l, rendelkez\u00e9sre \u00e1llnak sz\u0171r\u0151k",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "DBLog event ID"
                }
            ],
            "examples": [
                {
                    "description": "Clear the database log from DBLog table",
                    "execution": "drupal database:log:clear \\\n  <database>"
                },
                {
                    "description": "Clear the database log from DBLog table using filters",
                    "execution": "drupal database:log:clear \\\n  <database> \\\n  --type=TYPE \\\n  --severity=SEVERITY"
                }
            ],
            "aliases": [
                "dblc"
            ],
            "key": "database.log.clear",
            "dashed": "database-log-clear",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:log:poll",
            "description": "Poll the watchdog and print new log entries every x seconds",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                }
            ],
            "arguments": [
                {
                    "name": "duration",
                    "description": "Duration in seconds which to sleep between database reads"
                }
            ],
            "examples": [
                {
                    "description": "Print the log entries on screen every x seconds",
                    "execution": "drupal database:log:poll \\\n  100\n"
                }
            ],
            "aliases": [
                "dblp"
            ],
            "key": "database.log.poll",
            "dashed": "database-log-poll",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:query",
            "description": "Executes a SQL statement directly as argument",
            "options": [
                {
                    "name": "quick",
                    "description": "Do not cache each query result, print each row as it is received"
                },
                {
                    "name": "debug",
                    "description": "Prints debugging information and memory and CPU usage statistics when the program exits"
                },
                {
                    "name": "html",
                    "description": "Produce HTML output"
                },
                {
                    "name": "xml",
                    "description": "Produce XML output"
                },
                {
                    "name": "raw",
                    "description": "Special characters are not escaped in the output."
                },
                {
                    "name": "vertical",
                    "description": "Print query output rows vertically"
                },
                {
                    "name": "batch",
                    "description": "Print results using tab as the column separator, with each row on a new line. With this option, mysql does not use the history file"
                }
            ],
            "arguments": [
                {
                    "name": "query",
                    "description": "The SQL statement to execute"
                },
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.connect.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Send a database query",
                    "execution": "drupal database:query 'select * from node limit 0,1'\n"
                }
            ],
            "aliases": [
                "dbq",
                "sqlq"
            ],
            "key": "database.query",
            "dashed": "database-query",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:restore",
            "description": "Adatb\u00e1zis szerkezet\u00e9nek \u00e9s tartalm\u00e1nak vissza\u00e1ll\u00edt\u00e1sa.",
            "options": [
                {
                    "name": "file",
                    "description": "Az adatb\u00e1zis biztons\u00e1gi ment\u00e9s\u00e9nek f\u00e1jlneve"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "Adatb\u00e1ziskulcs a settings.php f\u00e1jlb\u00f3l"
                },
                {
                    "name": "target",
                    "description": "commands.database.restore.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Restore the database file dump to the database default or another one specified",
                    "execution": "drupal database:restore \\\n  --file='\/srv\/dump\/db.sql'\n"
                }
            ],
            "aliases": [
                "dbr"
            ],
            "key": "database.restore",
            "dashed": "database-restore",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:breakpoints",
            "description": "Displays breakpoints available in application",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Enter Breakpoint Group Name"
                }
            ],
            "examples": [
                {
                    "description": "Provide a group name.",
                    "execution": "drupal breakpoints:debug bartik"
                }
            ],
            "aliases": [
                "dbre"
            ],
            "key": "debug.breakpoints",
            "dashed": "debug-breakpoints",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:cache:context",
            "description": "Displays current cache context for the application.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays cache context",
                    "execution": "drupal debug:cache:context\n"
                }
            ],
            "aliases": [
                "dcc"
            ],
            "key": "debug.cache.context",
            "dashed": "debug-cache-context",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:chain",
            "description": "Rendelkez\u00e9sre \u00e1ll\u00f3 l\u00e1ncolt f\u00e1jlok felsorol\u00e1sa.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dch"
            ],
            "key": "debug.chain",
            "dashed": "debug-chain",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config",
            "description": "Aktu\u00e1lis konfigur\u00e1ci\u00f3 megjelen\u00edt\u00e9se.",
            "options": [
                {
                    "name": "show-overridden",
                    "description": "commands.debug.config.options.show-overridden"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "A konfigur\u00e1ci\u00f3 neve."
                }
            ],
            "examples": [
                {
                    "description": "List all configuration object names.",
                    "execution": "drupal config:debug"
                },
                {
                    "description": "Display system site configurations values.",
                    "execution": "drupal config:debug system.site"
                },
                {
                    "description": "List all system configuration names.",
                    "execution": "drupal config:debug | grep system"
                }
            ],
            "aliases": [
                "dc"
            ],
            "key": "debug.config",
            "dashed": "debug-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config:settings",
            "description": "A be\u00e1ll\u00edt\u00e1sf\u00e1jl aktu\u00e1lis kulcs:\u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1sainak megjelen\u00edt\u00e9se.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays key:value as per the settings file",
                    "execution": "drupal debug:config:settings\n"
                }
            ],
            "aliases": [
                "dcs"
            ],
            "key": "debug.config.settings",
            "dashed": "debug-config-settings",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config:validate",
            "description": "Validate a schema implementation before a module is installed.",
            "options": [
                {
                    "name": "schema-name",
                    "description": ""
                }
            ],
            "arguments": [
                {
                    "name": "filepath",
                    "description": ""
                },
                {
                    "name": "schema-filepath",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:config:validate \\\n  \/path\/to\/file \\\n  \/path\/to\/schema-filepath\n"
                }
            ],
            "aliases": [
                "dcv"
            ],
            "key": "debug.config.validate",
            "dashed": "debug-config-validate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:container",
            "description": "Egy alkalmaz\u00e1s aktu\u00e1lis szolg\u00e1ltat\u00e1sait jelen\u00edti meg.",
            "options": [
                {
                    "name": "parameters",
                    "description": "Service name."
                },
                {
                    "name": "tag",
                    "description": "commands.debug.container.options.tag"
                }
            ],
            "arguments": [
                {
                    "name": "service",
                    "description": "Service name."
                },
                {
                    "name": "method",
                    "description": "Method name."
                },
                {
                    "name": "arguments",
                    "description": "Array of Arguments in CSV or JSON format."
                }
            ],
            "examples": [
                {
                    "description": "Displays the views.views_data_helper services",
                    "execution": "drupal debug:container views.views_data_helper\n"
                }
            ],
            "aliases": [
                "dco",
                "cod"
            ],
            "key": "debug.container",
            "dashed": "debug-container",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:cron",
            "description": "Cron met\u00f3dust megval\u00f3s\u00edt\u00f3 modulok list\u00e1ja",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "This will show a list with modules implementing the cron hook",
                    "execution": "drupal debug:cron\n"
                }
            ],
            "aliases": [
                "dcr"
            ],
            "key": "debug.cron",
            "dashed": "debug-cron",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:database:log",
            "description": "Az alkalmaz\u00e1s aktu\u00e1lis napl\u00f3esem\u00e9nyeinek megjelen\u00edt\u00e9se",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                },
                {
                    "name": "asc",
                    "description": "List events in ascending order"
                },
                {
                    "name": "limit",
                    "description": "Egy adott sz\u00e1mra korl\u00e1tozza a tal\u00e1latok sz\u00e1m\u00e1t"
                },
                {
                    "name": "offset",
                    "description": "Egy korl\u00e1t kezd\u0151pontja"
                },
                {
                    "name": "yml",
                    "description": "Print in a yml style"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "DBLog esem\u00e9nyazonos\u00edt\u00f3"
                }
            ],
            "examples": [
                {
                    "description": "List all the entries on the log",
                    "execution": "drupal debug:database:log"
                },
                {
                    "description": "List specific log entry by Event ID",
                    "execution": "drupal debug:database:log 21228\n"
                }
            ],
            "aliases": [
                "dbb",
                "ws"
            ],
            "key": "debug.database.log",
            "dashed": "debug-database-log",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:database:table",
            "description": "Adott adatb\u00e1zis \u00f6sszes t\u00e1bl\u00e1j\u00e1nak megjelen\u00edt\u00e9se.",
            "options": [
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                }
            ],
            "arguments": [
                {
                    "name": "table",
                    "description": "Table to debug"
                }
            ],
            "examples": [
                {
                    "description": "Show all tables on a database",
                    "execution": "drupal debug:database:table"
                },
                {
                    "description": "Show fields on the node table or another specified on the argument",
                    "execution": "drupal debug:database:table node\n"
                }
            ],
            "aliases": [
                "ddt"
            ],
            "key": "debug.database.table",
            "dashed": "debug-database-table",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:dotenv",
            "description": "Debug Dotenv debug values.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "debug.dotenv",
            "dashed": "debug-dotenv",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:entity",
            "description": "Debug entities available in the system",
            "options": [],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.debug.entity.arguments.entity-type"
                }
            ],
            "examples": [
                {
                    "description": "Displays the available entities",
                    "execution": "drupal debug:entity\n"
                }
            ],
            "aliases": [
                "de"
            ],
            "key": "debug.entity",
            "dashed": "debug-entity",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:event",
            "description": "Display current events ",
            "options": [],
            "arguments": [
                {
                    "name": "event",
                    "description": "Event to debug"
                }
            ],
            "examples": [
                {
                    "description": "List all the events that could be debugged",
                    "execution": "drupal debug:evet"
                },
                {
                    "description": "Show the information for the kernel.request event",
                    "execution": "drupal debug:event kernel.request"
                }
            ],
            "aliases": [
                "dev"
            ],
            "key": "debug.event",
            "dashed": "debug-event",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:hook",
            "description": "commands.debug.hook.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dbh"
            ],
            "key": "debug.hook",
            "dashed": "debug-hook",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:image:styles",
            "description": "List image styles on the site",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List all images styles on the site",
                    "execution": "drupal debug:image:styles\n"
                }
            ],
            "aliases": [
                "dis"
            ],
            "key": "debug.image.styles",
            "dashed": "debug-image-styles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:libraries",
            "description": "Displays libraries available in application",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Enter Libraries Name"
                }
            ],
            "examples": [
                {
                    "description": "List all available libraries",
                    "execution": "drupal debug:libraries\n"
                },
                {
                    "description": "List block library information",
                    "execution": "drupal debug:libraries block\n"
                }
            ],
            "aliases": [
                "dl"
            ],
            "key": "debug.libraries",
            "dashed": "debug-libraries",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:module",
            "description": "Az alkalmaz\u00e1shoz el\u00e9rhet\u0151 aktu\u00e1lis modulok megjelen\u00edt\u00e9se",
            "options": [
                {
                    "name": "status",
                    "description": "Modul \u00e1llapota [enged\u00e9lyezett|tiltott]"
                },
                {
                    "name": "type",
                    "description": "Modul t\u00edpusa [alaprendszer|nem alaprendszer]"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module name"
                }
            ],
            "examples": [
                {
                    "description": "Display all installed modules",
                    "execution": "drupal mod --status=installed"
                },
                {
                    "description": "Display all installed and no core modules",
                    "execution": "drupal mod --status=installed --type=no-core"
                }
            ],
            "aliases": [
                "dm"
            ],
            "key": "debug.module",
            "dashed": "debug-module",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:multisite",
            "description": "A rendszeren el\u00e9rhet\u0151 multisite-ok list\u00e1z\u00e1sa",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays multisite information",
                    "execution": "drupal debug:multisite\n"
                }
            ],
            "aliases": [
                "dmu",
                "msd"
            ],
            "key": "debug.multisite",
            "dashed": "debug-multisite",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:permission",
            "description": "Displays all user permissions.",
            "options": [],
            "arguments": [
                {
                    "name": "role",
                    "description": "User role"
                }
            ],
            "examples": [
                {
                    "description": "Displays all the permissions availables on the site",
                    "execution": "drupal debug:permission\n"
                }
            ],
            "aliases": [
                "dp"
            ],
            "key": "debug.permission",
            "dashed": "debug-permission",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:plugin",
            "description": "Display all plugin types, plugin instances of a specific type, or the definition for a specific plugin.",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Plugin type"
                },
                {
                    "name": "id",
                    "description": "Plugin ID"
                }
            ],
            "examples": [
                {
                    "description": "Displays a list with all the plugins on the current site",
                    "execution": "drupal debug:plugin"
                },
                {
                    "description": "Displays block plugin information",
                    "execution": "drupal debug:plugin block"
                },
                {
                    "description": "Displays block broken information",
                    "execution": "drupal debug:plugin block broken\n"
                }
            ],
            "aliases": [
                "dpl"
            ],
            "key": "debug.plugin",
            "dashed": "debug-plugin",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:queue",
            "description": "Display the queues of your application",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays the queues of the application",
                    "execution": "drupal debug:queue\n"
                }
            ],
            "aliases": [
                "dq"
            ],
            "key": "debug.queue",
            "dashed": "debug-queue",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:roles",
            "description": "commands.debug.roles.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dusr"
            ],
            "key": "debug.roles",
            "dashed": "debug-roles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:router",
            "description": "Megjelen\u00edti az alkalmaz\u00e1s aktu\u00e1lis \u00fatvonalait",
            "options": [
                {
                    "name": "pattern",
                    "description": "commands.debug.router.options.pattern"
                }
            ],
            "arguments": [
                {
                    "name": "route-name",
                    "description": "\u00datvonalnevek"
                }
            ],
            "examples": [
                {
                    "description": "Displays current routes for the application",
                    "execution": "drupal rod"
                },
                {
                    "description": "Displays details for the route user.page (\/user)",
                    "execution": "drupal rod user.page"
                }
            ],
            "aliases": [
                "dr",
                "rod"
            ],
            "key": "debug.router",
            "dashed": "debug-router",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:settings",
            "description": "List user Drupal Console settings.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:settings\n"
                }
            ],
            "aliases": [
                "dse"
            ],
            "key": "debug.settings",
            "dashed": "debug-settings",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:site",
            "description": "Minden ismert helyi \u00e9s t\u00e1voli webhely list\u00e1z\u00e1sa.",
            "options": [],
            "arguments": [
                {
                    "name": "target",
                    "description": "Target"
                },
                {
                    "name": "property",
                    "description": "Property"
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:site\n"
                }
            ],
            "aliases": [
                "dsi"
            ],
            "key": "debug.site",
            "dashed": "debug-site",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:state",
            "description": "Az aktu\u00e1lis \u00e1llapotkulcsok megjelen\u00edt\u00e9se.",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "Az \u00e1llapotkulcs, amelyen hibakeres\u00e9st kell v\u00e9gezni."
                }
            ],
            "examples": [
                {
                    "description": "List of the states on the site",
                    "execution": "drupal debug:state\n"
                },
                {
                    "description": "Displays a detail of the state install_task tok from the list of states",
                    "execution": "drupal debug:state install_task\n"
                }
            ],
            "aliases": [
                "dst"
            ],
            "key": "debug.state",
            "dashed": "debug-state",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:theme",
            "description": "Megjelen\u00edti az alkalmaz\u00e1s aktu\u00e1lis sminkjeit",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Adott smink, ahol hibakeres\u00e9st kell v\u00e9gezni"
                }
            ],
            "examples": [
                {
                    "description": "List of themes on the site",
                    "execution": "drupal debug:theme"
                },
                {
                    "description": "Bartik theme information",
                    "execution": "drupal debug:theme bartik"
                }
            ],
            "aliases": [
                "dt",
                "tde"
            ],
            "key": "debug.theme",
            "dashed": "debug-theme",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:theme:keys",
            "description": "commands.debug.theme.keys.description",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "commands.debug.theme.keys.arguments.key"
                }
            ],
            "examples": [],
            "aliases": [
                "dtk"
            ],
            "key": "debug.theme.keys",
            "dashed": "debug-theme-keys",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:update",
            "description": "Az alkalmaz\u00e1s jelenleg el\u00e9rhet\u0151 friss\u00edt\u00e9seinek megjelen\u00edt\u00e9se",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List of pending updates",
                    "execution": "drupal debug:update\n"
                }
            ],
            "aliases": [
                "du",
                "upd"
            ],
            "key": "debug.update",
            "dashed": "debug-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:update:composer",
            "description": "commands.debug.update.composer.description",
            "options": [
                {
                    "name": "only-drupal",
                    "description": "commands.debug.update.composer.options.only-drupal"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "duc"
            ],
            "key": "debug.update.composer",
            "dashed": "debug-update-composer",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:user",
            "description": "Megjelen\u00edti az aktu\u00e1lis felhaszn\u00e1l\u00f3kat",
            "options": [
                {
                    "name": "uid",
                    "description": "Filters the result list by uids [between quotes separated by spaces]"
                },
                {
                    "name": "username",
                    "description": "Filters the result list by usernames [between quotes separated by spaces]"
                },
                {
                    "name": "mail",
                    "description": "Filters the result list by user's e-mail [between quotes separated by spaces]"
                },
                {
                    "name": "roles",
                    "description": "Szerepek sz\u0171r\u00e9se a hibakeres\u00e9shez"
                },
                {
                    "name": "limit",
                    "description": "H\u00e1ny felhaszn\u00e1l\u00f3 jelenjen meg a hibakeres\u00e9sben"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Users list on the site",
                    "execution": "drupal debug:user\n"
                }
            ],
            "aliases": [
                "dus"
            ],
            "key": "debug.user",
            "dashed": "debug-user",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:views",
            "description": "Alkalmaz\u00e1s aktu\u00e1lis views er\u0151forr\u00e1sainak megjelen\u00edt\u00e9se",
            "options": [
                {
                    "name": "tag",
                    "description": "N\u00e9zet c\u00edmk\u00e9je"
                },
                {
                    "name": "status",
                    "description": "N\u00e9zet \u00e1llapota (enged\u00e9lyezett|tiltott)"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "N\u00e9zet azonos\u00edt\u00f3ja"
                }
            ],
            "examples": [
                {
                    "description": "List of views on the site",
                    "execution": "drupal debug:views\n"
                }
            ],
            "aliases": [
                "vde"
            ],
            "key": "debug.views",
            "dashed": "debug-views",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:views:plugins",
            "description": "Display current views plugins for the application",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Filter views plugins by type"
                }
            ],
            "examples": [
                {
                    "description": "List of views plugins",
                    "execution": "drupal debug:views:plugins\n"
                }
            ],
            "aliases": [
                "dvp"
            ],
            "key": "debug.views.plugins",
            "dashed": "debug-views-plugins",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "demo:harold",
            "description": "Download Drupal + Drupal Console to contribute.",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "demo.harold",
            "dashed": "demo-harold",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "devel:dumper",
            "description": "commands.devel.dumper.messages.change-devel-dumper-plugin",
            "options": [],
            "arguments": [
                {
                    "name": "dumper",
                    "description": "commands.devel.dumper.messages.name-devel-dumper-plugin"
                }
            ],
            "examples": [],
            "aliases": [
                "dd"
            ],
            "key": "devel.dumper",
            "dashed": "devel-dumper",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:contribute",
            "description": "Download Drupal + Drupal Console to contribute.",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.contribute",
            "dashed": "develop-contribute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:create:symlinks",
            "description": "Create symlinks between Drupal site and cloned repositories.",
            "options": [
                {
                    "name": "code-directory",
                    "description": "The directory where the projects were cloned"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.create.symlinks",
            "dashed": "develop-create-symlinks",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:cheatsheet",
            "description": "Generate a printable cheatsheet for Commands",
            "options": [
                {
                    "name": "path",
                    "description": "The path to generate the pdf for the documentation"
                },
                {
                    "name": "wkhtmltopdf",
                    "description": "The path for the wkhtmltopdf binary in your system"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdc"
            ],
            "key": "develop.doc.cheatsheet",
            "dashed": "develop-doc-cheatsheet",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:dash",
            "description": "DrupalConsole.docset csomag l\u00e9trehoz\u00e1sa a Dash sz\u00e1m\u00e1ra",
            "options": [
                {
                    "name": "path",
                    "description": "A docset ment\u00e9si k\u00f6nyvt\u00e1r\u00e1nak \u00fatvonala."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdd"
            ],
            "key": "develop.doc.dash",
            "dashed": "develop-doc-dash",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:data",
            "description": "Generate documentations for Commands.",
            "options": [
                {
                    "name": "file",
                    "description": "The file to render the command data"
                },
                {
                    "name": "help",
                    "description": "Display this help message"
                },
                {
                    "name": "quiet",
                    "description": "Do not output any message"
                },
                {
                    "name": "verbose",
                    "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                },
                {
                    "name": "version",
                    "description": "Display this application version"
                },
                {
                    "name": "ansi",
                    "description": "Force ANSI output"
                },
                {
                    "name": "no-ansi",
                    "description": "Disable ANSI output"
                },
                {
                    "name": "no-interaction",
                    "description": "Do not ask any interactive question"
                },
                {
                    "name": "env",
                    "description": "A k\u00f6rnyezet neve"
                },
                {
                    "name": "root",
                    "description": "A parancs v\u00e9grehajt\u00e1sakor haszn\u00e1lt Drupal gy\u00f6k\u00e9rk\u00f6nyvt\u00e1rt adja meg"
                },
                {
                    "name": "debug",
                    "description": "application.options.debug"
                },
                {
                    "name": "learning",
                    "description": "R\u00e9szletes k\u00f3dkimenet l\u00e9trehoz\u00e1sa"
                },
                {
                    "name": "generate-chain",
                    "description": "A parancspbe\u00e1ll\u00edt\u00e1sokat \u00e9s argumentumokat a chain parancsban haszn\u00e1land\u00f3 yaml-kimenetk\u00e9nt jelen\u00edti meg"
                },
                {
                    "name": "generate-inline",
                    "description": "A parancsbe\u00e1ll\u00edt\u00e1sokat \u00e9s argumentumokat be\u00e1gyazott parancsk\u00e9nt jelen\u00edti meg"
                },
                {
                    "name": "generate-doc",
                    "description": "A parancsbe\u00e1ll\u00edt\u00e1sokat \u00e9s argumentumokat markdown sz\u00f6vegk\u00e9nt jelen\u00edti meg"
                },
                {
                    "name": "target",
                    "description": "A kezelni k\u00edv\u00e1nt webhely neve (helyi vagy t\u00e1voli webhelyek eset\u00e9n)"
                },
                {
                    "name": "uri",
                    "description": "A haszn\u00e1land\u00f3 Drupal webhely URI-c\u00edme (multisite vagy m\u00e1sodlagos porton fut\u00f3 k\u00f6rnyezetek eset\u00e9n)"
                },
                {
                    "name": "yes",
                    "description": "Meger\u0151s\u00edt\u00e9s kihagy\u00e1sa \u00e9s a m\u0171velet folytat\u00e1sa"
                }
            ],
            "arguments": [
                {
                    "name": "command",
                    "description": "The command to execute"
                }
            ],
            "examples": [],
            "aliases": [
                "gdda"
            ],
            "key": "develop.doc.data",
            "dashed": "develop-doc-data",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:gitbook",
            "description": "Dokument\u00e1ci\u00f3 l\u00e9trehoz\u00e1sa a parancsokhoz",
            "options": [
                {
                    "name": "path",
                    "description": "A dokument\u00e1ci\u00f3 el\u0151\u00e1ll\u00edt\u00e1s\u00e1nak \u00fatvonala"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdg"
            ],
            "key": "develop.doc.gitbook",
            "dashed": "develop-doc-gitbook",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:example",
            "description": null,
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.example",
            "dashed": "develop-example",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:example:container:aware",
            "description": null,
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.example.container.aware",
            "dashed": "develop-example-container-aware",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:cleanup",
            "description": "Clean up translation files",
            "options": [],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to clean up files against English"
                },
                {
                    "name": "library",
                    "description": "Library to clean up files against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Delete all unnecessary files in all languages.",
                    "execution": "drupal translation:cleanup"
                },
                {
                    "description": "Delete all unnecessary files in Spanish language",
                    "execution": "drupal translation:cleanup es"
                },
                {
                    "description": "Delete all unnecessary files in all languages in console-develop library",
                    "execution": "drupal translation:cleanup all console-develop"
                },
                {
                    "description": "Delete all unnecessary files in Spanish language in console-develop library",
                    "execution": "drupal translation:cleanup es console-develop"
                }
            ],
            "aliases": [
                "tc"
            ],
            "key": "develop.translation.cleanup",
            "dashed": "develop-translation-cleanup",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:pending",
            "description": "Determine pending translation string in a language or a specific file in a language",
            "options": [
                {
                    "name": "file",
                    "description": "Specific file to determine pending translations against English"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to determine pending translations against English"
                },
                {
                    "name": "library",
                    "description": "Library to determine pending translations against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Determine pending translation strings in all languages.",
                    "execution": "drupal translation:pending"
                },
                {
                    "description": "Determine pending translation strings in Spanish language",
                    "execution": "drupal translation:pending es"
                },
                {
                    "description": "Determine pending translation strings in all languages in console-develop library",
                    "execution": "drupal translation:pending all console-develop"
                },
                {
                    "description": "Determine pending translation strings in Spanish language in console-develop library",
                    "execution": "drupal translation:pending es console-develop"
                }
            ],
            "aliases": [
                "tp"
            ],
            "key": "develop.translation.pending",
            "dashed": "develop-translation-pending",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:stats",
            "description": "Generate translate stats",
            "options": [
                {
                    "name": "format",
                    "description": "Define output format table|markdown"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to generate translation stats against English"
                },
                {
                    "name": "library",
                    "description": "Library to calculate translation stats against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Calculate translation stats in all languages.",
                    "execution": "drupal translation:stats"
                },
                {
                    "description": "Calculate translation stats in Spanish language",
                    "execution": "drupal translation:stats es"
                },
                {
                    "description": "Calculate translation stats in all languages in console-develop library",
                    "execution": "drupal translation:stats all console-develop"
                },
                {
                    "description": "Calculate translation stats in Spanish language in console-develop library",
                    "execution": "drupal translation:stats es console-develop"
                }
            ],
            "aliases": [
                "ts"
            ],
            "key": "develop.translation.stats",
            "dashed": "develop-translation-stats",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:sync",
            "description": "Sync translation files",
            "options": [
                {
                    "name": "file",
                    "description": "commands.develop.translation.stats.options.file"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to syncronize against English source files"
                },
                {
                    "name": "library",
                    "description": "Library to syncronize against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Syncronize translation files in all languages.",
                    "execution": "drupal translation:sync"
                },
                {
                    "description": "Syncronize translation files in Spanish language",
                    "execution": "drupal translation:sync es"
                },
                {
                    "description": "Syncronize translation files in all languages in console-develop library",
                    "execution": "drupal translation:sync all console-develop"
                },
                {
                    "description": "Syncronize translation files in Spanish language in console-develop library",
                    "execution": "drupal translation:sync es console-develop"
                }
            ],
            "aliases": [
                "tsy"
            ],
            "key": "develop.translation.sync",
            "dashed": "develop-translation-sync",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "docker:init",
            "description": "commands.docker.init.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "docker.init",
            "dashed": "docker-init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "dotenv:init",
            "description": "commands.dotenv.init.description",
            "options": [
                {
                    "name": "load-from-env",
                    "description": "commands.dotenv.init.options.load-from-env"
                },
                {
                    "name": "load-settings",
                    "description": "commands.dotenv.init.options.load-settings"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "dotenv.init",
            "dashed": "dotenv-init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "entity:delete",
            "description": "Delete an specific entity",
            "options": [
                {
                    "name": "all",
                    "description": "commands.entity.delete.options.all"
                }
            ],
            "arguments": [
                {
                    "name": "entity-definition-id",
                    "description": "Entity definition id"
                },
                {
                    "name": "entity-id",
                    "description": "Entity ID to be deleted"
                }
            ],
            "examples": [
                {
                    "description": "Delete entity type content using node id",
                    "execution": "drupal entity:delete node 1"
                }
            ],
            "aliases": [
                "ed"
            ],
            "key": "entity.delete",
            "dashed": "entity-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "field:info",
            "description": "View information about fields.",
            "options": [
                {
                    "name": "detailed",
                    "description": "Extended output with machine names and descriptions"
                },
                {
                    "name": "entity",
                    "description": "Restrict to a specific fieldabe entity type, for example: node, comment, taxonomy_term, shortcut, block_content, contact_message"
                },
                {
                    "name": "bundle",
                    "description": "Restrict to a specific bundle type, for example: article"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "fii"
            ],
            "key": "field.info",
            "dashed": "field-info",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:ajax:command",
            "description": "commands.generate.ajax.command.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "commands.generate.ajax.command.options.class"
                },
                {
                    "name": "method",
                    "description": "commands.generate.ajax.command.options.method"
                },
                {
                    "name": "js-name",
                    "description": "commands.generate.ajax.command.options.js-name"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gac"
            ],
            "key": "generate.ajax.command",
            "dashed": "generate-ajax-command",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:authentication:provider",
            "description": "Hiteles\u00edt\u00e9sszolg\u00e1ltat\u00f3 l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Hiteles\u00edt\u00e9sszolg\u00e1ltat\u00f3 oszt\u00e1ly"
                },
                {
                    "name": "provider-id",
                    "description": "Szolg\u00e1ltat\u00f3 azonos\u00edt\u00f3ja"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an authentication provider specifying the module, the class and the provider id",
                    "execution": "drupal generate:authentication:provider  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAuthenticationProvider\"  \\\n  --provider-id=\"default_authentication_provider\"\n"
                }
            ],
            "aliases": [
                "gap"
            ],
            "key": "generate.authentication.provider",
            "dashed": "generate-authentication-provider",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:breakpoint",
            "description": "Generate breakpoint",
            "options": [
                {
                    "name": "theme",
                    "description": "Theme name"
                },
                {
                    "name": "breakpoints",
                    "description": "Breakpoints"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a breakpoint specifying the theme, a breakpoint name, its label, the media query, its weight and multipliers",
                    "execution": "drupal generate:breakpoint  \\\n  --theme=\"classy\"  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'"
                }
            ],
            "aliases": [
                "gb"
            ],
            "key": "generate.breakpoint",
            "dashed": "generate-breakpoint",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:cache:context",
            "description": "Generate a cache context",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "cache-context",
                    "description": "commands.generate.cache.context.options.name"
                },
                {
                    "name": "class",
                    "description": "commands.generate.cache.context.options.class"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate cache for a context specifying the module, the context name and its class",
                    "execution": "drupal generate:cache:context  \\\n  --module=\"modulename\"  \\\n  --cache-context=\"ContextName\"  \\\n  --class=\"DefaultCacheContext\""
                }
            ],
            "aliases": [
                "gcc"
            ],
            "key": "generate.cache.context",
            "dashed": "generate-cache-context",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:command",
            "description": "Parancsok l\u00e9trehoz\u00e1sa a konzolhoz.",
            "options": [
                {
                    "name": "extension",
                    "description": "The extension name."
                },
                {
                    "name": "extension-type",
                    "description": "The extension type."
                },
                {
                    "name": "class",
                    "description": "A parancsot le\u00edr\u00f3 oszt\u00e1ly. (A 'Command' sz\u00f3ra kell v\u00e9gz\u0151dnie)."
                },
                {
                    "name": "name",
                    "description": "A parancs neve."
                },
                {
                    "name": "initialize",
                    "description": "commands.generate.command.options.initialize"
                },
                {
                    "name": "interact",
                    "description": "commands.generate.command.options.interact"
                },
                {
                    "name": "container-aware",
                    "description": "A parancs ismeri-e a drupal telep\u00edt\u00e9si hely\u00e9t a v\u00e9grehajt\u00e1skor"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                },
                {
                    "name": "generator",
                    "description": "commands.generate.command.options.generator"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a command specifying the extension name and type, its class and the name.",
                    "execution": "drupal generate:command  \\\n  --extension=\"ExtensionName\"  \\\n  --extension-type=\"module\"  \\\n  --class=\"DefaultCommand\"  \\\n  --name=\"CommandName\""
                }
            ],
            "aliases": [
                "gco"
            ],
            "key": "generate.command",
            "dashed": "generate-command",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:composer",
            "description": "commands.generate.composer.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "name",
                    "description": "commands.generate.composer.options.name"
                },
                {
                    "name": "type",
                    "description": "commands.generate.composer.options.type"
                },
                {
                    "name": "description",
                    "description": "commands.generate.composer.options.description"
                },
                {
                    "name": "keywords",
                    "description": "commands.generate.composer.options.keywords"
                },
                {
                    "name": "license",
                    "description": "commands.generate.composer.options.license"
                },
                {
                    "name": "homepage",
                    "description": "commands.generate.composer.options.homepage"
                },
                {
                    "name": "minimum-stability",
                    "description": "commands.generate.composer.options.minimum-stability"
                },
                {
                    "name": "authors",
                    "description": "commands.generate.composer.options.authors"
                },
                {
                    "name": "support",
                    "description": "commands.generate.composer.options.support"
                },
                {
                    "name": "required",
                    "description": "commands.generate.composer.options.required"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gcom"
            ],
            "key": "generate.composer",
            "dashed": "generate-composer",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:controller",
            "description": "Kontroller l\u00e9trehoz\u00e1sa \u00e9s regisztr\u00e1l\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Kontroller oszt\u00e1lyneve"
                },
                {
                    "name": "routes",
                    "description": "Az \u00fatvonalak, [title, method, path] tartalm\u00fa t\u00f6mbnek kell lennie"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                },
                {
                    "name": "test",
                    "description": "Tesztoszt\u00e1ly l\u00e9trehoz\u00e1sa"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate controller specifying the module name, the class name and its routes",
                    "execution": "drupal generate:controller  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultController\"  \\\n  --routes='\"title\":\"ControllerMethod\", \"name\":\"modulename.default_controller_hello\", \"method\":\"hello\", \"path\":\"\/modulename\/hello\/{name}\"'  \\\n  --test"
                }
            ],
            "aliases": [
                "gcon"
            ],
            "key": "generate.controller",
            "dashed": "generate-controller",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:bundle",
            "description": "\u00daj tartalomt\u00edpus l\u00e9trehoz\u00e1sa (tartalom \/ mez\u0151k\u00f6teg)",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "bundle-name",
                    "description": "A tartalomt\u00edpus programok \u00e1ltal haszn\u00e1lt neve"
                },
                {
                    "name": "bundle-title",
                    "description": "A tartalomt\u00edpus felhaszn\u00e1l\u00f3k \u00e1ltal olvashat\u00f3 neve"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate bundle entity specifying the module, the bundle name and its title",
                    "execution": "drupal generate:entity:bundle  \\\n  --module=\"modulename\"  \\\n  --bundle-name=\"default\"  \\\n  --bundle-title=\"default\""
                }
            ],
            "aliases": [
                "geb"
            ],
            "key": "generate.entity.bundle",
            "dashed": "generate-entity-bundle",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:config",
            "description": "\u00daj konfigur\u00e1ci\u00f3s entit\u00e1s l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "entity-class",
                    "description": "A konfigur\u00e1ci\u00f3s entit\u00e1s oszt\u00e1lya"
                },
                {
                    "name": "entity-name",
                    "description": "A konfigur\u00e1ci\u00f3s entit\u00e1s neve"
                },
                {
                    "name": "base-path",
                    "description": "A konfigur\u00e1ci\u00f3s entit\u00e1sok \u00fatvonalainak alap\u00fatvonala"
                },
                {
                    "name": "label",
                    "description": "A felirat"
                },
                {
                    "name": "bundle-of",
                    "description": "A tartalomentit\u00e1sok mez\u0151k\u00f6tegek\u00e9nt funkcion\u00e1l"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate config entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:config  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                }
            ],
            "aliases": [
                "gec"
            ],
            "key": "generate.entity.config",
            "dashed": "generate-entity-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:content",
            "description": "\u00daj tartalom entit\u00e1s l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "entity-class",
                    "description": "A tartalom entit\u00e1s oszt\u00e1ly"
                },
                {
                    "name": "entity-name",
                    "description": "A tartalom entit\u00e1s neve"
                },
                {
                    "name": "base-path",
                    "description": "A tartalom entit\u00e1s \u00fatvonalak alap\u00fatvonala"
                },
                {
                    "name": "label",
                    "description": "A felirat"
                },
                {
                    "name": "has-bundles",
                    "description": "Az entit\u00e1s nem rendelkezik mez\u0151csoportokkal"
                },
                {
                    "name": "is-translatable",
                    "description": "Content entity translatable"
                },
                {
                    "name": "revisionable",
                    "description": "commands.generate.entity.content.options.revisionable"
                },
                {
                    "name": "has-forms",
                    "description": "commands.generate.entity.content.options.has-forms"
                },
                {
                    "name": "has-owner",
                    "description": "commands.generate.entity.content.options.has-owner"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                },
                {
                    "description": "Generate a translatable and revisionable content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\"  \\\n  --is-translatable  \\\n  --revisionable"
                }
            ],
            "aliases": [
                "geco"
            ],
            "key": "generate.entity.content",
            "dashed": "generate-entity-content",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:event:subscriber",
            "description": "Esem\u00e9ny-el\u0151fizet\u0151 l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "name",
                    "description": "commands.generate.event.subscriber.options.name"
                },
                {
                    "name": "class",
                    "description": "commands.generate.event.subscriber.options.class"
                },
                {
                    "name": "events",
                    "description": "Esem\u00e9nyek bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an event subscriber specifying the module name, its name, the class and the events to subscribe",
                    "execution": "drupal generate:event:subscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultSubscriber\"  \\\n  --events='kernel_request'\n"
                }
            ],
            "aliases": [
                "ges"
            ],
            "key": "generate.event.subscriber",
            "dashed": "generate-event-subscriber",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form",
            "description": "\u00daj \"FormBase\" l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Az \u0171rlap oszt\u00e1ly\u00e1nak neve"
                },
                {
                    "name": "form-id",
                    "description": "Az \u0171rlap-azonos\u00edt\u00f3"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "Bemenetek l\u00e9trehoz\u00e1sa egy \u0171rlapban."
                },
                {
                    "name": "path",
                    "description": "Enter the form path"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an empty form with config file specifying the module name, the class, a form id and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --path=\"\/modulename\/form\/default\""
                },
                {
                    "description": "Generate a form with 2 fields and a config file specifying the module name, the class, a form id, the inputs and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --inputs='\"name\":\"inputname\", \"type\":\"text_format\", \"label\":\"InputName\", \"options\":\"\", \"description\":\"Just a text input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --path=\"\/modulename\/form\/default\""
                }
            ],
            "aliases": [
                "gf"
            ],
            "key": "generate.form",
            "dashed": "generate-form",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form:alter",
            "description": "A hook_form_alter() vagy hook_form_FORM_ID_alter megval\u00f3s\u00edt\u00e1s\u00e1nak l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "form-id",
                    "description": "A m\u00f3dos\u00edtand\u00f3 formazonos\u00edt\u00f3"
                },
                {
                    "name": "inputs",
                    "description": "Bemenetek l\u00e9trehoz\u00e1sa egy \u0171rlapban."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook form alter for an empty form specifying the module name",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\""
                },
                {
                    "description": "Generate a hook form alter with 2 fields specifying the module name and the inputs",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gfa"
            ],
            "key": "generate.form.alter",
            "dashed": "generate-form-alter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form:config",
            "description": "\u00daj \"ConfigFormBase\" l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Az \u0171rlap oszt\u00e1ly\u00e1nak neve"
                },
                {
                    "name": "form-id",
                    "description": "Az \u0171rlap-azonos\u00edt\u00f3"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "Bemenetek l\u00e9trehoz\u00e1sa egy \u0171rlapban."
                },
                {
                    "name": "path",
                    "description": "Enter the form path"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gfc"
            ],
            "key": "generate.form.config",
            "dashed": "generate-form-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:help",
            "description": "Generate an implementation of hook_help()",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "description",
                    "description": "commands.generate.help.options.description"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook help specifying the module name and the description",
                    "execution": "drupal generate:help  \\\n  --module=\"modulename\"  \\\n  --description=\"My Awesome Module\""
                }
            ],
            "aliases": [
                "gh"
            ],
            "key": "generate.help",
            "dashed": "generate-help",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:jstest",
            "description": "commands.generate.jstest.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "commands.generate.jstest.options.class"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gjt"
            ],
            "key": "generate.jstest",
            "dashed": "generate-jstest",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:module",
            "description": "Modul l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve"
                },
                {
                    "name": "machine-name",
                    "description": "A programok \u00e1ltal haszn\u00e1lt n\u00e9v (csak kisbet\u0171k \u00e9s al\u00e1h\u00faz\u00e1s)"
                },
                {
                    "name": "module-path",
                    "description": "A modul \u00fatvonala"
                },
                {
                    "name": "description",
                    "description": "A modul le\u00edr\u00e1sa"
                },
                {
                    "name": "core",
                    "description": "Drupal alaprendszer verzi\u00f3ja"
                },
                {
                    "name": "package",
                    "description": "Modulcsomag"
                },
                {
                    "name": "module-file",
                    "description": ".module f\u00e1jl hozz\u00e1ad\u00e1sa"
                },
                {
                    "name": "features-bundle",
                    "description": "Define module as feature using the given Features bundle name"
                },
                {
                    "name": "composer",
                    "description": "composer.json f\u00e1jl hozz\u00e1ad\u00e1sa"
                },
                {
                    "name": "dependencies",
                    "description": "Modulf\u00fcgg\u0151s\u00e9gek vessz\u0151vel elv\u00e1lasztva (pl. context, panels)"
                },
                {
                    "name": "test",
                    "description": "Tesztoszt\u00e1ly l\u00e9trehoz\u00e1sa"
                },
                {
                    "name": "twigtemplate",
                    "description": "Generate theme template"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a module specifying the module name, machine name, the path, its description, drupal core and the package name. In this example the composer file, the unit test and twig template are generated too",
                    "execution": "drupal generate:module  \\\n  --module=\"modulename\"  \\\n  --machine-name=\"modulename\"  \\\n  --module-path=\"\/modules\/custom\"  \\\n  --description=\"My Awesome Module\"  \\\n  --core=\"8.x\"  \\\n  --package=\"Custom\"  \\\n  --module-file  \\\n  --composer  \\\n  --test  \\\n  --twigtemplate"
                }
            ],
            "aliases": [
                "gm"
            ],
            "key": "generate.module",
            "dashed": "generate-module",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:module:file",
            "description": "Generate a .module file",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate the .module file specifying the module name",
                    "execution": "drupal generate:module:file  \\\n  --module=\"modulename\""
                }
            ],
            "aliases": [
                "gmf"
            ],
            "key": "generate.module.file",
            "dashed": "generate-module-file",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:permissions",
            "description": "commands.generate.permissions.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "permissions",
                    "description": "Enged\u00e9lyek l\u00e9trehoz\u00e1sa."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gp"
            ],
            "key": "generate.permissions",
            "dashed": "generate-permissions",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:block",
            "description": "Blokk b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "plugin-label",
                    "description": "commands.generate.plugin.block.options.plugin-label"
                },
                {
                    "name": "plugin-id",
                    "description": "B\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "theme-region",
                    "description": "Smink azon r\u00e9gi\u00f3ja, ahol a blokk b\u0151v\u00edtm\u00e9nynek meg kell jelennie"
                },
                {
                    "name": "inputs",
                    "description": "Bemenetek l\u00e9trehoz\u00e1sa egy \u0171rlapban."
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                },
                {
                    "name": "twigtemplate",
                    "description": "commands.generate.plugin.block.options.twigtemplate"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin block in the header region with an input field specifying the module name, the class, the label, its id, the region and the input",
                    "execution": "drupal generate:plugin:block  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultBlock\"  \\\n  --label=\"Default block\"  \\\n  --plugin-id=\"default_block\"  \\\n  --theme-region=\"header\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gpb"
            ],
            "key": "generate.plugin.block",
            "dashed": "generate-plugin-block",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:ckeditorbutton",
            "description": "Generate CKEditor button plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin ID. NOTE: This corresponds to the CKEditor plugin name. It is the first argument of the CKEDITOR.plugins.add() function in the plugin.js file."
                },
                {
                    "name": "buttons",
                    "description": "commands.generate.plugin.ckeditorbutton.options.buttons"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate CKEditor button specifying the module name, the class, the label, its id, the button name and the icon path",
                    "execution": "drupal generate:plugin:ckeditorbutton  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultCKEditorButton\"  \\\n  --label=\"Default ckeditor button\"  \\\n  --plugin-id=\"default ckeditor button\"  \\\n  --button-name=\"Default ckeditor button\"  \\\n  --button-icon-path=\"modules\/custom\/modulename\/js\/plugins\/default ckeditor button\/images\/icon.png\""
                }
            ],
            "aliases": [
                "gpc"
            ],
            "key": "generate.plugin.ckeditorbutton",
            "dashed": "generate-plugin-ckeditorbutton",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:condition",
            "description": "Felt\u00e9telb\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Felt\u00e9telb\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "label",
                    "description": "Felt\u00e9telb\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "plugin-id",
                    "description": "Felt\u00e9telb\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "context-definition-id",
                    "description": "Kontextusmeghat\u00e1roz\u00e1s azonos\u00edt\u00f3ja"
                },
                {
                    "name": "context-definition-label",
                    "description": "Kontextusmeghat\u00e1roz\u00e1s felirata"
                },
                {
                    "name": "context-definition-required",
                    "description": "A kontextusmeghat\u00e1roz\u00e1s k\u00f6telez\u0151 (TRUE\/FALSE)"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin condition for a node entity type specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:node\"  \\\n  --context-definition-label=\"node\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for language specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"language\"  \\\n  --context-definition-label=\"Language\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for role configuration specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:user_role\"  \\\n  --context-definition-label=\"user_role\"  \\\n  --context-definition-required\n"
                }
            ],
            "aliases": [
                "gpco"
            ],
            "key": "generate.plugin.condition",
            "dashed": "generate-plugin-condition",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:field",
            "description": "Mez\u0151t\u00edpus, fel\u00fcleti elem \u00e9s form\u00e1z\u00f3 b\u0151v\u00edtm\u00e9nyek l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "type-class",
                    "description": "Mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "type-label",
                    "description": "Mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "type-plugin-id",
                    "description": "Mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "type-description",
                    "description": "Mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny le\u00edr\u00e1sa"
                },
                {
                    "name": "formatter-class",
                    "description": "Mez\u0151form\u00e1z\u00f3 b\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "formatter-label",
                    "description": "Mez\u0151form\u00e1z\u00f3 b\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "formatter-plugin-id",
                    "description": "Mez\u0151form\u00e1z\u00f3 b\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "widget-class",
                    "description": "Mez\u0151form\u00e1z\u00f3 b\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "widget-label",
                    "description": "Mez\u0151 fel\u00fcleti elem b\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "widget-plugin-id",
                    "description": "Mez\u0151 fel\u00fcleti elem b\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "field-type",
                    "description": "Mez\u0151t\u00edpus, amivel a form\u00e1z\u00f3 \u00e9s a fel\u00fcleti elem b\u0151v\u00edtm\u00e9ny haszn\u00e1lhat\u00f3"
                },
                {
                    "name": "default-widget",
                    "description": "A mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny alap\u00e9rtelmezett mez\u0151 fel\u00fcleti eleme"
                },
                {
                    "name": "default-formatter",
                    "description": "A mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny alap\u00e9rtelmezett mez\u0151form\u00e1z\u00f3jatype plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate field type, widget and formatter plugins specifying the module name, the type (class, label, plugin id and description), the formatter (class, label, plugin id) and the widget (class, label and plugin id)",
                    "execution": "drupal generate:plugin:field  \\\n  --module=\"modulename\"  \\\n  --type-class=\"ExampleFieldType\"  \\\n  --type-label=\"Example field type\"  \\\n  --type-plugin-id=\"example_field_type\"  \\\n  --type-description=\"My Field Type\"  \\\n  --formatter-class=\"ExampleFormatterType\"  \\\n  --formatter-label=\"Example formatter type\"  \\\n  --formatter-plugin-id=\"example_formatter_type\"  \\\n  --widget-class=\"ExampleWidgetType\"  \\\n  --widget-label=\"Example widget type\"  \\\n  --widget-plugin-id=\"example_widget_type\"  \\\n  --field-type=\"example_field_type\"  \\\n  --default-widget=\"example_widget_type\"  \\\n  --default-formatter=\"example_formatter_type\"\n"
                }
            ],
            "aliases": [
                "gpf"
            ],
            "key": "generate.plugin.field",
            "dashed": "generate-plugin-field",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldformatter",
            "description": "Mez\u0151form\u00e1z\u00f3 b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "label",
                    "description": "B\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "plugin-id",
                    "description": "B\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "field-type",
                    "description": "Mez\u0151t\u00edpus, amivel a b\u0151v\u00edtm\u00e9ny haszn\u00e1lhat\u00f3"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a a text field formatter plugin specifying the module name, the class, the label its plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldFormatter\"  \\\n  --label=\"Example field formatter\"  \\\n  --plugin-id=\"example_field_formatter\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpff"
            ],
            "key": "generate.plugin.fieldformatter",
            "dashed": "generate-plugin-fieldformatter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldtype",
            "description": "Mez\u0151t\u00edpus b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "label",
                    "description": "B\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "plugin-id",
                    "description": "B\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "description",
                    "description": "B\u0151v\u00edtm\u00e9ny le\u00edr\u00e1sa"
                },
                {
                    "name": "default-widget",
                    "description": "A b\u0151v\u00edtm\u00e9ny alap\u00e9rtelmezett mez\u0151 fel\u00fcleti eleme"
                },
                {
                    "name": "default-formatter",
                    "description": "A b\u0151v\u00edtm\u00e9ny alap\u00e9rtelmezett mez\u0151form\u00e1z\u00f3ja"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a field type plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\""
                },
                {
                    "description": "Generate a field type plugin with a default widget and formatter specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\"  \\\n  --default-widget=\"DefaultWidget\"  \\\n  --default-formatter=\"DefaultFormatter\"\n"
                }
            ],
            "aliases": [
                "gpft"
            ],
            "key": "generate.plugin.fieldtype",
            "dashed": "generate-plugin-fieldtype",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldwidget",
            "description": "Mez\u0151 fel\u00fcleti elem b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "label",
                    "description": "B\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "plugin-id",
                    "description": "B\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "field-type",
                    "description": "A mez\u0151t\u00edpus, amivel a b\u0151v\u00edtm\u00e9ny haszn\u00e1lhat\u00f3"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a text type field widget plugin specifying the module name, the class, its label, the plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldwidget  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldWidget\"  \\\n  --label=\"Example field widget\"  \\\n  --plugin-id=\"example_field_widget\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpfw"
            ],
            "key": "generate.plugin.fieldwidget",
            "dashed": "generate-plugin-fieldwidget",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:imageeffect",
            "description": "K\u00e9phat\u00e1s b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9ny oszt\u00e1lyneve"
                },
                {
                    "name": "label",
                    "description": "B\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "plugin-id",
                    "description": "B\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "description",
                    "description": "B\u0151v\u00edtm\u00e9ny le\u00edr\u00e1sa"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image effect plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:imageeffect  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultImageEffect\"  \\\n  --label=\"Default image effect\"  \\\n  --plugin-id=\"default_image_effect\"  \\\n  --description=\"My Image Effect\"\n"
                }
            ],
            "aliases": [
                "gpie"
            ],
            "key": "generate.plugin.imageeffect",
            "dashed": "generate-plugin-imageeffect",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:imageformatter",
            "description": "K\u00e9pform\u00e1z\u00f3 b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9nyoszt\u00e1ly neve"
                },
                {
                    "name": "label",
                    "description": "B\u0151v\u00edtm\u00e9ny felirata"
                },
                {
                    "name": "plugin-id",
                    "description": "B\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image formatter plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:imageformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleImageFormatter\"  \\\n  --label=\"Example image formatter\"  \\\n  --plugin-id=\"example_image_formatter\"\n"
                }
            ],
            "aliases": [
                "gpif"
            ],
            "key": "generate.plugin.imageformatter",
            "dashed": "generate-plugin-imageformatter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:mail",
            "description": "Generate a plugin mail",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an email plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:mail  \\\n  --module=\"modulename\"  \\\n  --class=\"HtmlFormatterMail\"  \\\n  --label=\"Html formatter mail\"  \\\n  --plugin-id=\"html_formatter_mail\"\n"
                }
            ],
            "aliases": [
                "gpm"
            ],
            "key": "generate.plugin.mail",
            "dashed": "generate-plugin-mail",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:dataparser",
            "description": "commands.generate.plugin.migrate.dataparser.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.migrate.dataparser.options.class"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.migrate.dataparser.options.plugin-id"
                },
                {
                    "name": "plugin-title",
                    "description": "commands.generate.plugin.migrate.dataparser.options.plugin-title"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpmdp"
            ],
            "key": "generate.plugin.migrate.dataparser",
            "dashed": "generate-plugin-migrate-dataparser",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:process",
            "description": "Generate a migrate process plugin",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration plugin process specifying the module name, the class and its id",
                    "execution": "drupal generate:plugin:migrate:process  \\\n  --module=\"modulename\"  \\\n  --class=\"MigrationProcess\"  \\\n  --plugin-id=\"migrationprocess\"\n"
                }
            ],
            "aliases": [
                "gpmp"
            ],
            "key": "generate.plugin.migrate.process",
            "dashed": "generate-plugin-migrate-process",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:source",
            "description": "Generate a migrate source plugin",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "table",
                    "description": "Table to query"
                },
                {
                    "name": "alias",
                    "description": "Short alias to refer to the table as"
                },
                {
                    "name": "group-by",
                    "description": "Field to group results by"
                },
                {
                    "name": "fields",
                    "description": "Fields to export"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration source plugin specifying the module name, the class, its plugin id, the table and its alias",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --table=\"DefaultTableName\"  \\\n  --alias=\"D\""
                },
                {
                    "description": "Generate a migration source plugin for specific fields of the users table specifying the module name, the class, its plugin id, the table, its alias and the fields",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultPluginClass\"  \\\n  --plugin-id=\"default_plugin_class\"  \\\n  --table=\"users\"  \\\n  --alias=\"u\"  \\\n  --fields='\"id\":\"id\", \"description\":\"the user id\"'  \\\n  --fields='\"id\":\"username\", \"description\":\"the username\"'  \\\n  --fields='\"id\":\"password\", \"description\":\"the user password\"'  \\\n  --fields='\"id\":\"email\", \"description\":\"the user email\"'\n"
                }
            ],
            "aliases": [
                "gpms"
            ],
            "key": "generate.plugin.migrate.source",
            "dashed": "generate-plugin-migrate-source",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:queue",
            "description": "commands.generate.plugin.queue.description",
            "options": [
                {
                    "name": "module",
                    "description": "commands.generate.plugin.queue.options.module"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.queue.options.class"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.queue.options.plugin-id"
                },
                {
                    "name": "cron-time",
                    "description": "commands.generate.plugin.queue.options.cron-time"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.queue.options.label"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpqueue"
            ],
            "key": "generate.plugin.queue",
            "dashed": "generate-plugin-queue",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rest:resource",
            "description": "REST-er\u0151forr\u00e1s b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "REST-er\u0151forr\u00e1s b\u0151v\u00edtm\u00e9nyoszt\u00e1ly"
                },
                {
                    "name": "plugin-id",
                    "description": "REST-er\u0151forr\u00e1s b\u0151v\u00edtm\u00e9ny azonos\u00edt\u00f3ja"
                },
                {
                    "name": "plugin-label",
                    "description": "REST-er\u0151forr\u00e1s b\u0151v\u00edtm\u00e9ny c\u00edmk\u00e9je"
                },
                {
                    "name": "plugin-url",
                    "description": "REST-er\u0151forr\u00e1s b\u0151v\u00edtm\u00e9ny URL-c\u00edme"
                },
                {
                    "name": "plugin-states",
                    "description": "REST-er\u0151forr\u00e1s b\u0151v\u00edtm\u00e9ny \u00e1llapotok"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a rest resource plugin using GET specifying the module name, the class, the plugin id, its label, the target url and the request type",
                    "execution": "drupal generate:plugin:rest:resource  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultRestResource\"  \\\n  --plugin-id=\"default_rest_resource\"  \\\n  --plugin-label=\"Default rest resource\"  \\\n  --plugin-url=\"http:\/\/rest.resources.example.com\"  \\\n  --plugin-states='GET'\n"
                }
            ],
            "aliases": [
                "gprr"
            ],
            "key": "generate.plugin.rest.resource",
            "dashed": "generate-plugin-rest-resource",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rules:action",
            "description": "commands.generate.plugin.rules.action.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.rules.action.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.rules.action.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.rules.action.options.plugin-id"
                },
                {
                    "name": "category",
                    "description": "commands.generate.plugin.rules.action.options.category"
                },
                {
                    "name": "context",
                    "description": "commands.generate.plugin.rules.action.options.context"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpra"
            ],
            "key": "generate.plugin.rules.action",
            "dashed": "generate-plugin-rules-action",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rules:dataprocessor",
            "description": "commands.generate.plugin.rules.dataprocessor.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.plugin-id"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gprd"
            ],
            "key": "generate.plugin.rules.dataprocessor",
            "dashed": "generate-plugin-rules-dataprocessor",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:skeleton",
            "description": "Generate an implementation of a skeleton plugin for those plugins Drupal Console do not have a specific generator",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "plugin-id",
                    "description": "The Plugin Id."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin skeleton specifying module name, the plugin id and the class",
                    "execution": "drupal generate:plugin:skeleton  \\\n  --module=\"modulename\"  \\\n  --plugin-id=\"link_relation_type\"  \\\n  --class=\"DefaultLinkRelationType\"\n"
                }
            ],
            "aliases": [
                "gps"
            ],
            "key": "generate.plugin.skeleton",
            "dashed": "generate-plugin-skeleton",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:type:annotation",
            "description": "B\u0151v\u00edtm\u00e9nyt\u00edpus l\u00e9trehoz\u00e1sa magyar\u00e1zat\u00e9szlel\u00e9ssel",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9nyt\u00edpus oszt\u00e1lyneve"
                },
                {
                    "name": "machine-name",
                    "description": "commands.generate.plugin.type.annotation.options.plugin-id"
                },
                {
                    "name": "label",
                    "description": "B\u0151v\u00edtm\u00e9nyt\u00edpus felirata"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with annotation discovery specifying module name, class name, machine name and label",
                    "execution": "drupal generate:plugin:type:annotation  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --machine-name=\"example_plugin\"  \\\n  --label=\"Example plugin\"\n"
                }
            ],
            "aliases": [
                "gpta"
            ],
            "key": "generate.plugin.type.annotation",
            "dashed": "generate-plugin-type-annotation",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:type:yaml",
            "description": "B\u0151v\u00edtm\u00e9nyt\u00edpus l\u00e9trehoz\u00e1sa YAML-\u00e9szlel\u00e9ssel",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "B\u0151v\u00edtm\u00e9nyt\u00edpus oszt\u00e1lyneve"
                },
                {
                    "name": "plugin-name",
                    "description": "B\u0151v\u00edtm\u00e9nyt\u00edpus programok \u00e1ltal haszn\u00e1lt neve"
                },
                {
                    "name": "plugin-file-name",
                    "description": "B\u0151v\u00edtm\u00e9ny f\u00e1jlneve"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with Yaml discovery specifying module name, class name, plugin name and plugin file name",
                    "execution": "drupal generate:plugin:type:yaml  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --plugin-name=\"example_plugin\"  \\\n  --plugin-file-name=\"example.plugin\"\n"
                }
            ],
            "aliases": [
                "gpty"
            ],
            "key": "generate.plugin.type.yaml",
            "dashed": "generate-plugin-type-yaml",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:validationconstraint",
            "description": "commands.generate.plugin.validationconstraint.description",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.validationconstraint.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.validationconstraint.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.validationconstraint.options.plugin-id"
                },
                {
                    "name": "hook",
                    "description": "commands.generate.plugin.validationconstraint.options.hook"
                },
                {
                    "name": "field-id",
                    "description": "commands.generate.plugin.validationconstraint.options.field-id"
                },
                {
                    "name": "bundle",
                    "description": "commands.generate.plugin.validationconstraint.options.bundle"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpvc"
            ],
            "key": "generate.plugin.validationconstraint",
            "dashed": "generate-plugin-validationconstraint",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:views:field",
            "description": "Egy\u00e9ni n\u00e9zetmez\u0151 b\u0151v\u00edtm\u00e9ny l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "fields",
                    "description": "commands.generate.plugin.views.field.options.fields"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a custom view field plugin specifying the module name, the class, a title and its description",
                    "execution": "drupal generate:plugin:views:field  \\\n  --module=\"modulename\"  \\\n  --class=\"CustomViewsField\"  \\\n  --title=\"Custom views field\"  \\\n  --description=\"My awesome custom views field plugin.\"\n"
                }
            ],
            "aliases": [
                "gpvf"
            ],
            "key": "generate.plugin.views.field",
            "dashed": "generate-plugin-views-field",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:post:update",
            "description": "Generate an implementation of hook_post_update_NAME()",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "post-update-name",
                    "description": "Post Update Name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an implementation of post update hook specifying the module name and the post update name",
                    "execution": "drupal generate:post:update  \\\n  --module=\"modulename\"  \\\n  --post-update-name=\"PostUpdateName\"\n"
                }
            ],
            "aliases": [
                "gpu"
            ],
            "key": "generate.post.update",
            "dashed": "generate-post-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:profile",
            "description": "Profil l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "profile",
                    "description": "A profil neve"
                },
                {
                    "name": "machine-name",
                    "description": "A programok \u00e1ltal haszn\u00e1lt n\u00e9v (csak kisbet\u0171k \u00e9s al\u00e1h\u00faz\u00e1s)"
                },
                {
                    "name": "profile-path",
                    "description": "commands.generate.profile.options.profile-path"
                },
                {
                    "name": "description",
                    "description": "Profil le\u00edr\u00e1sa"
                },
                {
                    "name": "core",
                    "description": "Drupal alaprendszer verzi\u00f3ja"
                },
                {
                    "name": "dependencies",
                    "description": "Modulf\u00fcgg\u0151s\u00e9gek vessz\u0151vel elv\u00e1lasztva (pl. context, panels)"
                },
                {
                    "name": "themes",
                    "description": "commands.generate.profile.options.themes"
                },
                {
                    "name": "distribution",
                    "description": "A disztrib\u00faci\u00f3 neve"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a profile specifying the profile name, the machine name, a description, the core and its module dependencies",
                    "execution": "drupal generate:profile  \\\n  --profile=\"NewProfileName\"  \\\n  --machine-name=\"newprofilename\"  \\\n  --description=\"My Useful Profile\"  \\\n  --core=\"8.x\"  \\\n  --dependencies=\"modulename\"\n"
                }
            ],
            "aliases": [
                "gpr"
            ],
            "key": "generate.profile",
            "dashed": "generate-profile",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:routesubscriber",
            "description": "RouteSubscriber l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "name",
                    "description": "Szolg\u00e1ltat\u00e1sn\u00e9v"
                },
                {
                    "name": "class",
                    "description": "Oszt\u00e1lyn\u00e9v"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a route subscriber specifying the module name, the route name and its class",
                    "execution": "drupal generate:routesubscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.route_subscriber\"  \\\n  --class=\"RouteSubscriber\"\n"
                }
            ],
            "aliases": [
                "gr"
            ],
            "key": "generate.routesubscriber",
            "dashed": "generate-routesubscriber",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:service",
            "description": "Szolg\u00e1ltat\u00e1s l\u00e9trehoz\u00e1sa",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "name",
                    "description": "Szolg\u00e1ltat\u00e1sn\u00e9v"
                },
                {
                    "name": "class",
                    "description": "Oszt\u00e1lyn\u00e9v"
                },
                {
                    "name": "interface",
                    "description": "Interf\u00e9sz"
                },
                {
                    "name": "interface-name",
                    "description": "commands.generate.service.options.interface-name"
                },
                {
                    "name": "logger-channel",
                    "description": "commands.generate.service.options.logger-channel"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                },
                {
                    "name": "path-service",
                    "description": "commands.generate.service.options.path-service"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a services without interface specifying the module name, the service name, the class and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\""
                },
                {
                    "description": "Generate a services with interface specifying the module name, the service name, the class, the interface name and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --interface  \\\n  --interface-name=\"InterfaceName\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\"\n"
                }
            ],
            "aliases": [
                "gs"
            ],
            "key": "generate.service",
            "dashed": "generate-service",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:site:alias",
            "description": "commands.generate.site.alias.description",
            "options": [
                {
                    "name": "site",
                    "description": "commands.generate.site.alias.options.site"
                },
                {
                    "name": "name",
                    "description": "commands.generate.site.alias.options.name"
                },
                {
                    "name": "environment",
                    "description": "commands.generate.site.alias.options.environment"
                },
                {
                    "name": "type",
                    "description": "commands.generate.site.alias.options.type"
                },
                {
                    "name": "composer-root",
                    "description": "commands.generate.site.alias.options.composer-root"
                },
                {
                    "name": "site-uri",
                    "description": "commands.generate.site.alias.options.site-uri"
                },
                {
                    "name": "host",
                    "description": "commands.generate.site.alias.options.host"
                },
                {
                    "name": "user",
                    "description": "commands.generate.site.alias.options.user"
                },
                {
                    "name": "port",
                    "description": "commands.generate.site.alias.options.port"
                },
                {
                    "name": "drupal-console-binary",
                    "description": "commands.generate.site.alias.options.drupal-console-binary"
                },
                {
                    "name": "extra-options",
                    "description": "commands.generate.site.alias.options.extra-options"
                },
                {
                    "name": "directory",
                    "description": "commands.generate.site.alias.options.directory"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gsa"
            ],
            "key": "generate.site.alias",
            "dashed": "generate-site-alias",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:theme",
            "description": "Smink l\u00e9trehoz\u00e1sa.",
            "options": [
                {
                    "name": "theme",
                    "description": "A smink neve"
                },
                {
                    "name": "machine-name",
                    "description": "A programok \u00e1ltal haszn\u00e1lt n\u00e9v (csak kisbet\u0171k \u00e9s al\u00e1h\u00faz\u00e1s)"
                },
                {
                    "name": "theme-path",
                    "description": "A smink \u00fatvonala"
                },
                {
                    "name": "description",
                    "description": "A smink le\u00edr\u00e1sa"
                },
                {
                    "name": "core",
                    "description": "Drupal alaprendszer verzi\u00f3ja"
                },
                {
                    "name": "package",
                    "description": "Smink csomagja"
                },
                {
                    "name": "global-library",
                    "description": "Glob\u00e1lis st\u00edlusk\u00f6nyvt\u00e1r neve"
                },
                {
                    "name": "libraries",
                    "description": "commands.generate.theme.options.libraries"
                },
                {
                    "name": "base-theme",
                    "description": "Alapsmink (pl. classy, stable)"
                },
                {
                    "name": "regions",
                    "description": "R\u00e9gi\u00f3k"
                },
                {
                    "name": "breakpoints",
                    "description": "T\u00f6r\u00e9spontok"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a theme without region and without breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name and the global library",
                    "execution": "drupal generate:theme  \\\n  --theme=\"AnotherTheme\"  \\\n  --machine-name=\"anothertheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"PackageName\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"false\""
                },
                {
                    "description": "Generate a theme base on stable theme with two region defined and one breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name, a global library, its base, the regions and the breakpoint",
                    "execution": "drupal generate:theme  \\\n  --theme=\"MyTheme\"  \\\n  --machine-name=\"mytheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"MyThemePackage\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"stable\"  \\\n  --regions='\"region_name\":\"Content\", \"region_machine_name\":\"content\"'  \\\n  --regions='\"region_name\":\"Panel\", \"region_machine_name\":\"panel\"'  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'\n"
                }
            ],
            "aliases": [
                "gt"
            ],
            "key": "generate.theme",
            "dashed": "generate-theme",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:twig:extension",
            "description": "Generate a Twig extension.",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "name",
                    "description": "Twig Extension name"
                },
                {
                    "name": "class",
                    "description": "Class name"
                },
                {
                    "name": "services",
                    "description": "Szolg\u00e1ltat\u00e1sok bet\u00f6lt\u00e9se a t\u00e1rol\u00f3b\u00f3l."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a twig extension specifying the module name, the extension name and its class",
                    "execution": "drupal generate:twig:extension  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.twig.extension\"  \\\n  --class=\"DefaultTwigExtension\"\n"
                }
            ],
            "aliases": [
                "gte"
            ],
            "key": "generate.twig.extension",
            "dashed": "generate-twig-extension",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:update",
            "description": "Generate an implementation of hook_update_N()",
            "options": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "update-n",
                    "description": "Update Number"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an update N hook implementation specifying the module name and the N value",
                    "execution": "drupal generate:update  \\\n  --module=\"modulename\"  \\\n  --update-n=\"8001\"\n"
                }
            ],
            "aliases": [
                "gu"
            ],
            "key": "generate.update",
            "dashed": "generate-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "image:styles:flush",
            "description": "Execute flush function by image style or execute all flush images styles",
            "options": [],
            "arguments": [
                {
                    "name": "styles",
                    "description": "The Images Styles name."
                }
            ],
            "examples": [
                {
                    "description": "Flush large image style",
                    "execution": "drupal image:styles:flush  large"
                },
                {
                    "description": "Flush thumbnail image style",
                    "execution": "drupal image:styles:flush  thumbnail\n"
                }
            ],
            "aliases": [
                "isf"
            ],
            "key": "image.styles.flush",
            "dashed": "image-styles-flush",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:dependency:install",
            "description": "Install dependencies module in the application",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be enabled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Install the dependencies of the specfied module",
                    "execution": "drupal module:dependency:install  modulename\n"
                }
            ],
            "aliases": [
                "modi"
            ],
            "key": "module.dependency.install",
            "dashed": "module-dependency-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:download",
            "description": "Modul vagy modulok let\u00f6lt\u00e9se",
            "options": [
                {
                    "name": "path",
                    "description": "The path of the contrib project"
                },
                {
                    "name": "latest",
                    "description": "Az alap\u00e9rtelmez\u00e9s a legfrissebb verzi\u00f3 let\u00f6lt\u00e9se"
                },
                {
                    "name": "composer",
                    "description": "Download the module using Composer"
                },
                {
                    "name": "unstable",
                    "description": "commands.module.download.options.unstable"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Az enged\u00e9lyezend\u0151 modulokat sz\u00f3k\u00f6zzel kell elv\u00e1lasztani"
                }
            ],
            "examples": [
                {
                    "description": "Download module specifying module name and its path",
                    "execution": "drupal module:download  modulename  \\\n  --path=\"modules\/contrib\"\n"
                }
            ],
            "aliases": [
                "mod"
            ],
            "key": "module.download",
            "dashed": "module-download",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:install",
            "description": "Modul vagy modulok telep\u00edt\u00e9se",
            "options": [
                {
                    "name": "latest",
                    "description": "Az alap\u00e9rtelmez\u00e9s a legfrissebb verzi\u00f3 let\u00f6lt\u00e9se"
                },
                {
                    "name": "composer",
                    "description": "Download the module using Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Az enged\u00e9lyezend\u0151 modulokat sz\u00f3k\u00f6zzel kell elv\u00e1lasztani"
                }
            ],
            "examples": [
                {
                    "description": "Install module specifying the module name",
                    "execution": "drupal module:install  modulename\n"
                }
            ],
            "aliases": [
                "moi"
            ],
            "key": "module.install",
            "dashed": "module-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:path",
            "description": "Returns the relative path to the module (or absolute path)",
            "options": [
                {
                    "name": "absolute",
                    "description": "Return module absolute path"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "The Module name (machine name)"
                }
            ],
            "examples": [
                {
                    "description": "Get the relative path of the module specifying the module name",
                    "execution": "drupal module:path  modulename\n"
                }
            ],
            "aliases": [
                "mop"
            ],
            "key": "module.path",
            "dashed": "module-path",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:uninstall",
            "description": "Modul vagy modulok elt\u00e1vol\u00edt\u00e1sa",
            "options": [
                {
                    "name": "force",
                    "description": "Do you want to ignore dependencies and forcefully uninstall the module?"
                },
                {
                    "name": "composer",
                    "description": "Uninstalls the module using Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "commands.module.uninstall.arguments.module"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall the module specifying the module name",
                    "execution": "drupal module:uninstall  modulename\n"
                }
            ],
            "aliases": [
                "mou"
            ],
            "key": "module.uninstall",
            "dashed": "module-uninstall",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:update",
            "description": "Update core, module or modules in the application",
            "options": [
                {
                    "name": "composer",
                    "description": "Update the module using Composer"
                },
                {
                    "name": "simulate",
                    "description": "Simulate the update process with Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be updated should be separated by a space. Leave empty for updating the core and all your modules managed by Composer."
                }
            ],
            "examples": [
                {
                    "description": "Update module specifying module name and composer parameter",
                    "execution": "drupal module:update  modulename  \\\n  --composer\n"
                }
            ],
            "aliases": [
                "moup"
            ],
            "key": "module.update",
            "dashed": "module-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "multisite:new",
            "description": "Sets up the files for a new multisite install.",
            "options": [
                {
                    "name": "copy-default",
                    "description": "Copies existing site from the default install."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "Name of directory under 'sites' which should be created."
                },
                {
                    "name": "uri",
                    "description": "Site URI to add to sites.php."
                }
            ],
            "examples": [
                {
                    "description": "Set up files for a multisite install specifying destination path and uri",
                    "execution": "drupal multisite:new  vendor\/newsite http:\/\/mysite.example.com\n"
                }
            ],
            "aliases": [
                "mun",
                "sn"
            ],
            "key": "multisite.new",
            "dashed": "multisite-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "multisite:update",
            "description": "commands.multisite.update.description",
            "options": [
                {
                    "name": "directory",
                    "description": "commands.multisite.update.options.directory"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "muu"
            ],
            "key": "multisite.update",
            "dashed": "multisite-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "node:access:rebuild",
            "description": "Rebuild node access permissions. Rebuilding will remove all privileges to content and replace them with permissions based on the current modules and settings.",
            "options": [
                {
                    "name": "batch",
                    "description": "Process in batch mode."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Rebuild node access permissions",
                    "execution": "drupal node:access:rebuild --batch"
                }
            ],
            "aliases": [
                "nar"
            ],
            "key": "node.access.rebuild",
            "dashed": "node-access-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "queue:run",
            "description": "Process the selected queue.",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Queue name."
                }
            ],
            "examples": [],
            "aliases": [
                "qr"
            ],
            "key": "queue.run",
            "dashed": "queue-run",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "quick:start",
            "description": "Download, install and serve a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "quick.start",
            "dashed": "quick-start",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "role:delete",
            "description": "commands.role.delete.description",
            "options": [],
            "arguments": [
                {
                    "name": "roles",
                    "description": "commands.role.delete.argument.roles"
                }
            ],
            "examples": [],
            "aliases": [
                "rd"
            ],
            "key": "role.delete",
            "dashed": "role-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "role:new",
            "description": "commands.role.new.description",
            "options": [],
            "arguments": [
                {
                    "name": "rolename",
                    "description": "commands.role.new.argument.rolename"
                },
                {
                    "name": "machine-name",
                    "description": "commands.role.new.argument.machine-name"
                }
            ],
            "examples": [],
            "aliases": [
                "rn"
            ],
            "key": "role.new",
            "dashed": "role-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "router:rebuild",
            "description": "Az alkalmaz\u00e1s \u00fatvonalainak \u00fajra\u00e9p\u00edt\u00e9se",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Rebuild routes",
                    "execution": "drupal router:rebuild"
                }
            ],
            "aliases": [
                "rr",
                "ror"
            ],
            "key": "router.rebuild",
            "dashed": "router-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "settings:set",
            "description": "Change a specific setting value in DrupalConsole config file",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Setting name in YAML flatten format to set a value in Drupal Console config file"
                },
                {
                    "name": "value",
                    "description": "Setting value to set in Drupal Console config file"
                }
            ],
            "examples": [
                {
                    "description": "Set application language setting value to \"es\"",
                    "execution": "drupal settings:set  application.language es"
                }
            ],
            "aliases": [],
            "key": "settings.set",
            "dashed": "settings-set",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:import:local",
            "description": "Import\/Configure an existing local Drupal project",
            "options": [
                {
                    "name": "environment",
                    "description": "Name of the environment that is going to be imported"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Name that will be used to generate the site config"
                },
                {
                    "name": "directory",
                    "description": "Existing Drupal root directory"
                }
            ],
            "examples": [
                {
                    "description": "Import local drupal project specifying the site name and the path",
                    "execution": "drupal site:import:local  SiteName \/private\/var\/www\/vhost\/anexusit\/drupal8.dev\/web"
                }
            ],
            "aliases": [
                "sil"
            ],
            "key": "site.import.local",
            "dashed": "site-import-local",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:install",
            "description": "Drupal projekt telep\u00edt\u00e9se",
            "options": [
                {
                    "name": "langcode",
                    "description": "A Drupal nyelve"
                },
                {
                    "name": "db-type",
                    "description": "A telep\u00edt\u00e9skor haszn\u00e1land\u00f3 Drupal adatb\u00e1zis"
                },
                {
                    "name": "db-file",
                    "description": "A telep\u00edt\u00e9skor haszn\u00e1land\u00f3 Drupal adatb\u00e1zisf\u00e1jl"
                },
                {
                    "name": "db-host",
                    "description": "Adatb\u00e1zis-gazdag\u00e9p"
                },
                {
                    "name": "db-name",
                    "description": "Adatb\u00e1zis neve"
                },
                {
                    "name": "db-user",
                    "description": "Adatb\u00e1zis-felhaszn\u00e1l\u00f3"
                },
                {
                    "name": "db-pass",
                    "description": "Adatb\u00e1zis jelsz\u00f3"
                },
                {
                    "name": "db-prefix",
                    "description": "Adatb\u00e1zis el\u0151tag"
                },
                {
                    "name": "db-port",
                    "description": "Adatb\u00e1zis port"
                },
                {
                    "name": "site-name",
                    "description": "A Drupal webhely neve"
                },
                {
                    "name": "site-mail",
                    "description": "A Drupal webhely e-mail c\u00edme"
                },
                {
                    "name": "account-name",
                    "description": "A Drupal adminisztr\u00e1tori fi\u00f3k neve"
                },
                {
                    "name": "account-mail",
                    "description": "A Drupal adminisztr\u00e1tori fi\u00f3k e-mail c\u00edme"
                },
                {
                    "name": "account-pass",
                    "description": "A Drupal adminisztr\u00e1tori fi\u00f3k jelszava"
                },
                {
                    "name": "force",
                    "description": "commands.site.install.arguments.force"
                }
            ],
            "arguments": [
                {
                    "name": "profile",
                    "description": "Telep\u00edtend\u0151 Drupal profil"
                },
                {
                    "name": "db-url",
                    "description": "commands.site.install.arguments.db-url"
                }
            ],
            "examples": [
                {
                    "description": "Install a drupal project specifying installation type, language code, database configuration, site name, site email and admin credential settings",
                    "execution": "drupal site:install  standard  \\\n  --langcode=\"en\"  \\\n  --db-type=\"mysql\"  \\\n  --db-host=\"127.0.0.1\"  \\\n  --db-name=\"drupal8\"  \\\n  --db-user=\"u53rn4m3\"  \\\n  --db-pass=\"dbp455\"  \\\n  --db-port=\"3306\"  \\\n  --site-name=\"Drupal 8\"  \\\n  --site-mail=\"admin@example.com\"  \\\n  --account-name=\"admin\"  \\\n  --account-mail=\"admin@example.com\"  \\\n  --account-pass=\"p455w0rd\"\n"
                }
            ],
            "aliases": [
                "si"
            ],
            "key": "site.install",
            "dashed": "site-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:maintenance",
            "description": "Webhely karbantart\u00e1si m\u00f3dba \u00e1ll\u00edt\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "mode",
                    "description": "Webhely karbantart\u00e1si m\u00f3dja"
                }
            ],
            "examples": [
                {
                    "description": "Switch on maintenance",
                    "execution": "drupal site:maintenance  on"
                },
                {
                    "description": "Switch off maintenance",
                    "execution": "drupal site:maintenance  off\n"
                }
            ],
            "aliases": [
                "sma"
            ],
            "key": "site.maintenance",
            "dashed": "site-maintenance",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:mode",
            "description": "Rendszerteljes\u00edtm\u00e9ny be\u00e1ll\u00edt\u00e1s\u00e1nak \u00e1tv\u00e1lt\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "environment",
                    "description": "K\u00f6rnyezet neve [dev, prod]"
                }
            ],
            "examples": [
                {
                    "description": "Switch system to prod",
                    "execution": "drupal site:mode  prod"
                },
                {
                    "description": "Switch system to dev",
                    "execution": "drupal site:mode  dev\n"
                }
            ],
            "aliases": [
                "smo"
            ],
            "key": "site.mode",
            "dashed": "site-mode",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:new",
            "description": "Download a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "site.new",
            "dashed": "site-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:statistics",
            "description": "Show the current statistics of website.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "sst"
            ],
            "key": "site.statistics",
            "dashed": "site-statistics",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:status",
            "description": "Aktu\u00e1lis Drupal-telep\u00edt\u00e9s \u00e1llapot\u00e1nak megtekint\u00e9se",
            "options": [
                {
                    "name": "format",
                    "description": "commands.site.status.options.format"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Get drupal installation status specifying the output format as table",
                    "execution": "drupal site:status  \\\n  --format=\"table\"\n"
                }
            ],
            "aliases": [
                "ss",
                "st"
            ],
            "key": "site.status",
            "dashed": "site-status",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "state:delete",
            "description": "Delete State",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "State name."
                }
            ],
            "examples": [
                {
                    "description": "Delete state specifying the state name",
                    "execution": "drupal state:delete  comment.maintain_entity_statistics\n"
                }
            ],
            "aliases": [
                "std"
            ],
            "key": "state.delete",
            "dashed": "state-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "state:override",
            "description": "\u00c1llapotkulcs fel\u00fclb\u00edr\u00e1l\u00e1sa.",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "A fel\u00fclb\u00edr\u00e1land\u00f3 \u00e1llapotkulcs."
                },
                {
                    "name": "value",
                    "description": "A be\u00e1ll\u00edtand\u00f3 \u00e1llapotkulcs."
                }
            ],
            "examples": [
                {
                    "description": "Override state value specifying the state name and the new value",
                    "execution": "drupal state:override  comment.node_comment_statistics_scale \"!!float 1\"\n"
                }
            ],
            "aliases": [
                "sto"
            ],
            "key": "state.override",
            "dashed": "state-override",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "taxonomy:term:delete",
            "description": "Delete taxonomy terms from a vocabulary",
            "options": [],
            "arguments": [
                {
                    "name": "vid",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Delete all terms of the \"tags\" vocabulary",
                    "execution": "drupal taxonomy:term:delete  tags\n"
                }
            ],
            "aliases": [
                "ttd"
            ],
            "key": "taxonomy.term.delete",
            "dashed": "taxonomy-term-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:download",
            "description": "Smink let\u00f6lt\u00e9se az alkalmaz\u00e1sban",
            "options": [
                {
                    "name": "composer",
                    "description": "Use --composer option for manage the theme download with Composer"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "the Theme name"
                },
                {
                    "name": "version",
                    "description": "Theme version i.e 1.x-dev"
                }
            ],
            "examples": [
                {
                    "description": "Download theme specifying name and version",
                    "execution": "drupal theme:download  Alina 7.x-1.2\n"
                }
            ],
            "aliases": [
                "thd"
            ],
            "key": "theme.download",
            "dashed": "theme-download",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:install",
            "description": "Smink vagy sminkek telep\u00edt\u00e9se az alkalmaz\u00e1sba",
            "options": [
                {
                    "name": "set-default",
                    "description": "Smink be\u00e1ll\u00edt\u00e1sa alap\u00e9rtelmezettk\u00e9nt"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "A telep\u00edtend\u0151 sminkeket vessz\u0151vel kell elv\u00e1lasztani"
                }
            ],
            "examples": [
                {
                    "description": "Install theme specifying the name",
                    "execution": "drupal theme:install  mytheme\n"
                }
            ],
            "aliases": [
                "thi"
            ],
            "key": "theme.install",
            "dashed": "theme-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:path",
            "description": "Returns the relative path to the theme (or absolute path)",
            "options": [
                {
                    "name": "absolute",
                    "description": "Return theme absolute path"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Theme name"
                }
            ],
            "examples": [
                {
                    "description": "Get the path of mytheme",
                    "execution": "drupal theme:path  mytheme\n"
                }
            ],
            "aliases": [
                "thp"
            ],
            "key": "theme.path",
            "dashed": "theme-path",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:uninstall",
            "description": "Az alkalmaz\u00e1s sminkj\u00e9nek vagy sminkjeinek elt\u00e1vol\u00edt\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Az elt\u00e1vol\u00edtand\u00f3 sminkeket vessz\u0151vel kell elv\u00e1lasztani"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall theme specifying the name",
                    "execution": "drupal theme:uninstall  mytheme\n"
                }
            ],
            "aliases": [
                "thu"
            ],
            "key": "theme.uninstall",
            "dashed": "theme-uninstall",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "update:entities",
            "description": "Applying Entity Updates",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Update entities",
                    "execution": "drupal update:entities\n"
                }
            ],
            "aliases": [
                "upe"
            ],
            "key": "update.entities",
            "dashed": "update-entities",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "update:execute",
            "description": "Egy modul adott Update N f\u00fcggv\u00e9ny\u00e9nek v\u00e9grehajt\u00e1sa, vagy az \u00f6sszes v\u00e9grehajt\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "A modul neve."
                },
                {
                    "name": "update-n",
                    "description": "V\u00e9grehajtand\u00f3 adott Update N f\u00fcggv\u00e9ny"
                }
            ],
            "examples": [
                {
                    "description": "Update all entities",
                    "execution": "drupal update:execute\n"
                }
            ],
            "aliases": [
                "upex",
                "updb"
            ],
            "key": "update.execute",
            "dashed": "update-execute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:create",
            "description": "Create users for the application",
            "options": [
                {
                    "name": "roles",
                    "description": "User roles"
                },
                {
                    "name": "email",
                    "description": "User email"
                },
                {
                    "name": "status",
                    "description": "User status"
                }
            ],
            "arguments": [
                {
                    "name": "username",
                    "description": "User name to be created"
                },
                {
                    "name": "password",
                    "description": "User password"
                }
            ],
            "examples": [
                {
                    "description": "Create user specifying username, password, role, email and status",
                    "execution": "drupal user:create  john p455w0rd  \\\n  --roles='authenticated'  \\\n  --email=\"john@anexusit.com\"  \\\n  --status=\"1\""
                },
                {
                    "description": "Create admin user specifying username, password, role, email and status",
                    "execution": "drupal user:create  doe p455w0rd  \\\n  --roles='administrator'  \\\n  --email=\"doe@anexusit.com\"  \\\n  --status=\"1\"\n"
                }
            ],
            "aliases": [
                "uc"
            ],
            "key": "user.create",
            "dashed": "user-create",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:delete",
            "description": "Felhaszn\u00e1l\u00f3k t\u00f6rl\u00e9se",
            "options": [
                {
                    "name": "user",
                    "description": "commands.user.delete.options.user"
                },
                {
                    "name": "roles",
                    "description": "A t\u00f6r\u00f6lni k\u00edv\u00e1nt felhaszn\u00e1l\u00f3kkal t\u00e1rs\u00edtott szerepk\u00f6r\u00f6k"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Delete user specifying the id and the user role",
                    "execution": "drupal user:delete  \\\n  --user-id=\"2\"\n  --roles='authenticated'"
                },
                {
                    "description": "Delete user specifying its id",
                    "execution": "drupal user:delete  \\\n  --user-id=\"3\"\n"
                }
            ],
            "aliases": [
                "ud"
            ],
            "key": "user.delete",
            "dashed": "user-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:login:clear:attempts",
            "description": "Egy fi\u00f3k sikertelen bejelentkez\u00e9si k\u00eds\u00e9rleteinek t\u00f6rl\u00e9se.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.login.clear.attempts.arguments.user"
                }
            ],
            "examples": [],
            "aliases": [
                "ulca",
                "uslca"
            ],
            "key": "user.login.clear.attempts",
            "dashed": "user-login-clear-attempts",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:login:url",
            "description": "Egyszer haszn\u00e1latos felhaszn\u00e1l\u00f3i bejelentkez\u00e9si URL-c\u00edmet ad vissza.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.login.url.options.user"
                }
            ],
            "examples": [
                {
                    "description": "Get one time login url for user id 1",
                    "execution": "drupal user:login:url  1\n"
                }
            ],
            "aliases": [
                "ulu",
                "usli",
                "uli"
            ],
            "key": "user.login.url",
            "dashed": "user-login-url",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:password:hash",
            "description": "Ellen\u0151rz\u0151\u00f6sszeg el\u0151\u00e1ll\u00edt\u00e1sa sima sz\u00f6veges jelsz\u00f3b\u00f3l.",
            "options": [],
            "arguments": [
                {
                    "name": "password",
                    "description": "Sz\u00f6vegform\u00e1tum\u00fa jelsz\u00f3\/jelszavak"
                }
            ],
            "examples": [
                {
                    "description": "Get hash of the word \"p455w0rd\"",
                    "execution": "drupal user:password:hash  p455w0rd\n"
                }
            ],
            "aliases": [
                "uph",
                "usph"
            ],
            "key": "user.password.hash",
            "dashed": "user-password-hash",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:password:reset",
            "description": "Adott felhaszn\u00e1l\u00f3 jelszav\u00e1nak alaphelyzetbe \u00e1ll\u00edt\u00e1sa.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.password.reset.options.user"
                },
                {
                    "name": "password",
                    "description": "Sz\u00f6vegform\u00e1tum\u00fa jelsz\u00f3"
                }
            ],
            "examples": [
                {
                    "description": "Update password specifying the user id and the new password",
                    "execution": "drupal user:password:reset  2 p455w0rd\n"
                }
            ],
            "aliases": [
                "upr",
                "upsr"
            ],
            "key": "user.password.reset",
            "dashed": "user-password-reset",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:role",
            "description": "Adds\/removes a role for a given user",
            "options": [],
            "arguments": [
                {
                    "name": "operation",
                    "description": "Add or remove"
                },
                {
                    "name": "user",
                    "description": "The affected user (only one)"
                },
                {
                    "name": "role",
                    "description": "Roles to add or remove. Please provide the machine name (only one)"
                }
            ],
            "examples": [
                {
                    "description": "Add administrator role to the user admin specifying the username and the role",
                    "execution": "drupal user:role  add admin administrator"
                },
                {
                    "description": "Remove administrator role from the user admin specifying the username and the role",
                    "execution": "drupal user:role  remove admin administrator\n"
                }
            ],
            "aliases": [
                "ur"
            ],
            "key": "user.role",
            "dashed": "user-role",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:unblock",
            "description": "commands.user.unblock.description",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.unblock.options.user"
                }
            ],
            "examples": [],
            "aliases": [
                "uu"
            ],
            "key": "user.unblock",
            "dashed": "user-unblock",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "version:new",
            "description": "Create new Drupal Console version",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "version.new",
            "dashed": "version-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "version:tag:release",
            "description": "Create new Drupal Console tag and release",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "version.tag.release",
            "dashed": "version-tag-release",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "views:disable",
            "description": "N\u00e9zet letilt\u00e1sa",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "N\u00e9zet azonos\u00edt\u00f3ja"
                }
            ],
            "examples": [
                {
                    "description": "Disable content view",
                    "execution": "drupal views:disable  content\n"
                },
                {
                    "description": "Disable frontpage view",
                    "execution": "drupal views:disable  frontpage\n"
                }
            ],
            "aliases": [
                "vd",
                "vdi"
            ],
            "key": "views.disable",
            "dashed": "views-disable",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "views:enable",
            "description": "N\u00e9zet enged\u00e9lyez\u00e9se",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "N\u00e9zet azonos\u00edt\u00f3ja"
                }
            ],
            "examples": [
                {
                    "description": "Enable content view",
                    "execution": "drupal views:enable  content\n"
                },
                {
                    "description": "Enable frontpage view",
                    "execution": "drupal views:enable  frontpage\n"
                }
            ],
            "aliases": [
                "ve"
            ],
            "key": "views.enable",
            "dashed": "views-enable",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        }
    ]
}