{
    "language": "ro",
    "type": "commands",
    "commands": [
        {
            "name": "about",
            "description": "Afi\u0219eaz\u0103 informa\u021biile de baz\u0103 despre proiectul Drupal Console",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "about",
            "dashed": "about",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "chain",
            "description": "Execu\u021bie comand\u0103 \u00eenl\u0103n\u021buit\u0103",
            "options": [
                {
                    "name": "file",
                    "description": "Fi\u015fier definit de utilizator ce con\u0163ine comenzi care urmeaz\u0103 s\u0103 fie executate."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal chain \\\n  --file=\"\/path\/to\/file\/chain-file.yml\"\n"
                }
            ],
            "aliases": [],
            "key": "chain",
            "dashed": "chain",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "check",
            "description": "System requirement checker",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "check",
            "dashed": "check",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "composerize",
            "description": "commands.composerize.description",
            "options": [
                {
                    "name": "show-packages",
                    "description": "commands.composerize.options.show-packages"
                },
                {
                    "name": "include-version",
                    "description": "commands.composerize.options.include-version"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "composerize",
            "dashed": "composerize",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "exec",
            "description": "Execute an external command.",
            "options": [
                {
                    "name": "working-directory",
                    "description": "The current working directory."
                }
            ],
            "arguments": [
                {
                    "name": "bin",
                    "description": "Executable name."
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "exec",
            "dashed": "exec",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "help",
            "description": "Displays help for a command",
            "options": [
                {
                    "name": "xml",
                    "description": "To output list as XML"
                },
                {
                    "name": "raw",
                    "description": "To output raw command list"
                },
                {
                    "name": "format",
                    "description": "The output format (txt, xml, json, or md)"
                }
            ],
            "arguments": [
                {
                    "name": "command_name",
                    "description": "The command name"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "help",
            "dashed": "help",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "init",
            "description": "Copy configuration files to user home directory.",
            "options": [
                {
                    "name": "destination",
                    "description": "Destination directory to copy files"
                },
                {
                    "name": "site",
                    "description": "commands.init.options.site"
                },
                {
                    "name": "override",
                    "description": "Override configurations files"
                },
                {
                    "name": "autocomplete",
                    "description": "Autocomplete tool files flag."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "init",
            "dashed": "init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "list",
            "description": "Listele de comenzi",
            "options": [
                {
                    "name": "xml",
                    "description": "Afi\u0219area listei ca XML"
                },
                {
                    "name": "raw",
                    "description": "Afi\u0219area brut\u0103 a listei de comenzi"
                },
                {
                    "name": "format",
                    "description": "Formatul de afi\u0219are (txt, xml, json, sau md)"
                }
            ],
            "arguments": [
                {
                    "name": "namespace",
                    "description": "Numele spa\u021biului de lucru"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "list",
            "dashed": "list",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "shell",
            "description": "Open a shell providing an interactive REPL (Read\u2013Eval\u2013Print-Loop).",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "shell",
            "dashed": "shell",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "server",
            "description": "Runs PHP built-in web server",
            "options": [],
            "arguments": [
                {
                    "name": "address",
                    "description": "The address:port values"
                }
            ],
            "examples": [
                {
                    "description": "Run using default address argument value 127.0.0.1:8088",
                    "execution": "drupal server"
                },
                {
                    "description": "Passing address argument to use a different port number",
                    "execution": "drupal server 127.0.0.1:8089"
                },
                {
                    "description": "Running default address argument values, using --root option to define the Drupal root",
                    "execution": "drupal --root=\/var\/www\/drupal8.dev server"
                }
            ],
            "aliases": [
                "serve",
                "rs"
            ],
            "key": "server",
            "dashed": "server",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "snippet",
            "description": "commands.snippet.description",
            "options": [
                {
                    "name": "file",
                    "description": "commands.snippet.options.file"
                },
                {
                    "name": "code",
                    "description": "commands.snippet.options.code"
                },
                {
                    "name": "show-code",
                    "description": "commands.snippet.options.show-code"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "snippet",
            "dashed": "snippet",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cache:rebuild",
            "description": "Reconstrui\u021bi \u0219i cur\u0103\u021ba\u021bi tot cache-ul.",
            "options": [],
            "arguments": [
                {
                    "name": "cache",
                    "description": "Cur\u0103\u021ba\u021bi doar cache-ul specificat."
                }
            ],
            "examples": [
                {
                    "description": "Reconstrui\u021bi tot cache-ul",
                    "execution": "drupal cr all"
                },
                {
                    "description": "Reconstrui\u021bi discovery cache",
                    "execution": "drupal cr discovery"
                }
            ],
            "aliases": [
                "cr",
                "cc"
            ],
            "key": "cache.rebuild",
            "dashed": "cache-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cache:tag:invalidate",
            "description": "commands.cache.tag.invalidate.description",
            "options": [],
            "arguments": [
                {
                    "name": "tag",
                    "description": "commands.cache.tag.invalidate.options.tag"
                }
            ],
            "examples": [],
            "aliases": [
                "cti"
            ],
            "key": "cache.tag.invalidate",
            "dashed": "cache-tag-invalidate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:delete",
            "description": "Delete configuration",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Configuration type."
                },
                {
                    "name": "name",
                    "description": "Configuration name."
                }
            ],
            "examples": [
                {
                    "description": "Provide a config type and a config name",
                    "execution": "drupal config:delete active all"
                }
            ],
            "aliases": [
                "cd"
            ],
            "key": "config.delete",
            "dashed": "config-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:diff",
            "description": "Ouput configuration items that are different in active configuration compared with a directory.",
            "options": [
                {
                    "name": "reverse",
                    "description": "See the changes in reverse (i.e diff a directory to the active configuration)."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "The directory to diff against. If omitted, choose from Drupal config directories."
                }
            ],
            "examples": [
                {
                    "description": "Provide a config directory",
                    "execution": "drupal config:diff ..\/config\/path"
                }
            ],
            "aliases": [
                "cdi"
            ],
            "key": "config.diff",
            "dashed": "config-diff",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:edit",
            "description": "Editeaz\u0103 configurarea selectat\u0103.",
            "options": [],
            "arguments": [
                {
                    "name": "config-name",
                    "description": "Numele configur\u0103rii."
                },
                {
                    "name": "editor",
                    "description": "Editor."
                }
            ],
            "examples": [
                {
                    "description": "Edit system cron configurations with \"vim\" (default editor).",
                    "execution": "drupal config:edit system.cron"
                },
                {
                    "description": "Edit system cron configurations with \"gedit\".",
                    "execution": "drupal config:edit system.cron gedit"
                }
            ],
            "aliases": [
                "ced",
                "cdit"
            ],
            "key": "config.edit",
            "dashed": "config-edit",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export",
            "description": "Export\u0103 configur\u0103rile curente ale aplica\u021biei.",
            "options": [
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                },
                {
                    "name": "tar",
                    "description": "If set, the configuration will be exported to an archive file."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Optional you can add the path to export",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\""
                },
                {
                    "description": "If export will be in a compressed file and\/or if uuid and config hashes will be removed.",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\" \\\n  --tar \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ce"
            ],
            "key": "config.export",
            "dashed": "config-export",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:content:type",
            "description": "Exporta\u021bi un anumit tip de con\u021binut \u0219i c\u00e2mpurile aferente acestuia.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "optional-config",
                    "description": "Exporta\u021bi tipul de con\u021binut ca \u0219i un fi\u0219ier op\u021bional de configurare YAML \u00een modulul dvs."
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.content.type.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.content.type.options.remove-config-hash"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "commands.config.export.content.type.options.include-module-dependencies"
                }
            ],
            "arguments": [
                {
                    "name": "content-type",
                    "description": "Content Type to be exported"
                }
            ],
            "examples": [
                {
                    "description": "Provide a content type  and module name",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\""
                },
                {
                    "description": "If you want export content type provide the optional config",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\" \\\n  --optional-config \n"
                }
            ],
            "aliases": [
                "cect"
            ],
            "key": "config.export.content.type",
            "dashed": "config-export-content-type",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:entity",
            "description": "commands.config.export.entity.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "optional-config",
                    "description": "commands.config.export.entity.options.optional-config"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.entity.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.entity.options.remove-config-hash"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "commands.config.export.entity.options.include-module-dependencies"
                }
            ],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.config.export.entity.arguments.entity-type"
                },
                {
                    "name": "bundle",
                    "description": "commands.config.export.entity.arguments.bundle"
                }
            ],
            "examples": [],
            "aliases": [
                "cee"
            ],
            "key": "config.export.entity",
            "dashed": "config-export-entity",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:single",
            "description": "Exporta\u021bi o configurare unic\u0103 ca \u0219i un fi\u0219ier yml .",
            "options": [
                {
                    "name": "name",
                    "description": "commands.config.export.single.options.name"
                },
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "include-dependencies",
                    "description": "Export dependencies of the configuration as well."
                },
                {
                    "name": "optional",
                    "description": "Export config as an optional YAML configuration in your module"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide config settings name to be exported",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name"
                },
                {
                    "description": "if uuid and\/or config hashes will be removed.",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ces"
            ],
            "key": "config.export.single",
            "dashed": "config-export-single",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:view",
            "description": "Export\u0103 un view \u00een format YAML \u00een interiorul unui modul furnizat pentru a-l reutiliza \u00een alt sit web.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "optional-config",
                    "description": "Exporta\u021bi view-ul ca \u0219i o configurare YAML op\u021bional\u0103 \u00een modulul dvs."
                },
                {
                    "name": "include-module-dependencies",
                    "description": "Include\u021bi dependin\u021bele modulului \u00een fi\u0219ierul info YAML al modulului"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.entity.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.entity.options.remove-config-hash"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "ID-ul view-ului"
                }
            ],
            "examples": [
                {
                    "description": "Provide a view id",
                    "execution": "drupal config:export:view viewid"
                },
                {
                    "description": "You can provide the interactive values like parameter.",
                    "execution": "drupal config:export:view viewid \\\n  --module=\"modulename\" \\\n  --optional-config \\\n  --include-module-dependencies\n"
                }
            ],
            "aliases": [
                "cev"
            ],
            "key": "config.export.view",
            "dashed": "config-export-view",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:import",
            "description": "Import\u0103 configurarea pentru aplica\u021bia curent\u0103.",
            "options": [
                {
                    "name": "file",
                    "description": "Path to an archive file of configuration to import."
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                },
                {
                    "name": "remove-files",
                    "description": "Remove files after synchronization."
                },
                {
                    "name": "skip-uuid",
                    "description": "commands.config.import.options.skip-uuid"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide a configuration file",
                    "execution": "drupal config:import \\\n  --file=\/path\/to\/config\/file"
                },
                {
                    "description": "Provide a configuration directory",
                    "execution": "drupal config:import  \\\n  --directory=\/path\/to\/config\/dir\n"
                }
            ],
            "aliases": [
                "ci"
            ],
            "key": "config.import",
            "dashed": "config-import",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:import:single",
            "description": "Import the selected configuration.",
            "options": [
                {
                    "name": "file",
                    "description": "The file(s) name or file(s) absolute path to import"
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal config:import:single \\\n  --file=\"\/path\/to\/file\/block.block.default_block.yml\""
                },
                {
                    "description": "Providing file and directory options",
                    "execution": "drupal config:import:single  \\\n  --file=\"block.block.default_block.yml\" \\\n  --directory=\"\/path\/to\/directory\"\n"
                }
            ],
            "aliases": [
                "cis"
            ],
            "key": "config.import.single",
            "dashed": "config-import-single",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:override",
            "description": "Suprascrie valoarea de configurare \u00een configurarea activ\u0103.",
            "options": [
                {
                    "name": "key",
                    "description": "commands.config.override.options.key"
                },
                {
                    "name": "value",
                    "description": "commands.config.override.options.value"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Configuration name"
                }
            ],
            "examples": [
                {
                    "description": "D\u00e9finir la valeur de \"flood\" du module Contact \u00e0 10.",
                    "execution": "drupal config:override contact.settings flood.limit 10"
                }
            ],
            "aliases": [
                "co"
            ],
            "key": "config.override",
            "dashed": "config-override",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:validate",
            "description": "Validate a drupal config against its schema",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Provide the configuration name.",
                    "execution": "drupal config:validate configuration.name"
                }
            ],
            "aliases": [
                "cv"
            ],
            "key": "config.validate",
            "dashed": "config-validate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:comments",
            "description": "Create dummy comments for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many comments would you like to create"
                },
                {
                    "name": "title-words",
                    "description": "Maximum number of words in comment titles"
                },
                {
                    "name": "time-range",
                    "description": "How far back in time should the comments be dated"
                }
            ],
            "arguments": [
                {
                    "name": "node-id",
                    "description": "Node ID where the comments will be created"
                }
            ],
            "examples": [
                {
                    "description": "Provide the node id where the comments will be generated.",
                    "execution": "drupal create:comments  node-id"
                },
                {
                    "description": "Provide number of comments to generate, max title words and time range.",
                    "execution": "drupal create:comments  node-id \\\n  --limit=\"2\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "crc"
            ],
            "key": "create.comments",
            "dashed": "create-comments",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:nodes",
            "description": "Create dummy nodes for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many nodes would you like to create"
                },
                {
                    "name": "title-words",
                    "description": "Maximum number of words in node titles"
                },
                {
                    "name": "time-range",
                    "description": "How far back in time should the nodes be dated"
                },
                {
                    "name": "revision",
                    "description": "commands.create.nodes.options.revision"
                },
                {
                    "name": "language",
                    "description": "commands.create.nodes.options.language"
                }
            ],
            "arguments": [
                {
                    "name": "content-types",
                    "description": "Content type(s) to be used in node creation"
                }
            ],
            "examples": [
                {
                    "description": "Provide the content type name.",
                    "execution": "drupal create:nodes content-name"
                },
                {
                    "description": "Provide the limit of publications, limit of title words, time range and language.",
                    "execution": "drupal create:nodes content-name \\\n  --limit=\"5\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\" \\\n  --language=\"und\"\n"
                }
            ],
            "aliases": [
                "crn"
            ],
            "key": "create.nodes",
            "dashed": "create-nodes",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:roles",
            "description": "commands.create.roles.description",
            "options": [
                {
                    "name": "limit",
                    "description": "commands.create.roles.options.limit"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "crr"
            ],
            "key": "create.roles",
            "dashed": "create-roles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:terms",
            "description": "Create dummy terms for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many terms would you like to create"
                },
                {
                    "name": "name-words",
                    "description": "Maximum number of words in term names"
                }
            ],
            "arguments": [
                {
                    "name": "vocabularies",
                    "description": "Vocabularie(s) to be used in terms creation"
                }
            ],
            "examples": [
                {
                    "description": "Provide the vocabulary term name.",
                    "execution": "drupal create:terms vocabulary"
                },
                {
                    "description": "Provide the limit of terms to add and limit of title words.",
                    "execution": "drupal create:terms tags \\\n  --limit=\"10\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crt"
            ],
            "key": "create.terms",
            "dashed": "create-terms",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:users",
            "description": "Create dummy users for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many users would you like to create"
                },
                {
                    "name": "password",
                    "description": "Password to be set to users created"
                },
                {
                    "name": "time-range",
                    "description": "How far back in time should the users be dated"
                }
            ],
            "arguments": [
                {
                    "name": "roles",
                    "description": "Role(s) to be used in user creation"
                }
            ],
            "examples": [
                {
                    "description": "Provide the user role.",
                    "execution": "drupal create:users role"
                },
                {
                    "description": "Provide the number of users to create, password and time range to create.",
                    "execution": "drupal create:users role \\\n  --limit=\"5\" \\\n  --password=\"usersnewpassword\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "cru"
            ],
            "key": "create.users",
            "dashed": "create-users",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:vocabularies",
            "description": "Create dummy vocabularies for your Drupal 8 application.",
            "options": [
                {
                    "name": "limit",
                    "description": "How many vocabularies would you like to create"
                },
                {
                    "name": "name-words",
                    "description": "Maximum number of words in vocabulary names"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide the number of vocabularies to create and maximum number of words in vocabulary names",
                    "execution": "drupal create:vocabularies \\\n  --limit=\"5\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crv"
            ],
            "key": "create.vocabularies",
            "dashed": "create-vocabularies",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cron:execute",
            "description": "Execut\u0103 cron-ul direct dintr-un modul sau din toate",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                }
            ],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                },
                {
                    "description": "Execute the cron on the specified module",
                    "execution": "drupal cron:execute \\\n  <module>\n"
                }
            ],
            "aliases": [
                "croe",
                "cre"
            ],
            "key": "cron.execute",
            "dashed": "cron-execute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cron:release",
            "description": "Lanseaz\u0103 sistemul de blocare pentru a repermite reluarea rul\u0103rii cron-ului",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                }
            ],
            "aliases": [
                "cror"
            ],
            "key": "cron.release",
            "dashed": "cron-release",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:add",
            "description": "Add a database to settings.php",
            "options": [
                {
                    "name": "database",
                    "description": "The database name"
                },
                {
                    "name": "username",
                    "description": "The database username"
                },
                {
                    "name": "password",
                    "description": "The database password"
                },
                {
                    "name": "prefix",
                    "description": "The database prefix"
                },
                {
                    "name": "host",
                    "description": "The database host address"
                },
                {
                    "name": "port",
                    "description": "The database host port"
                },
                {
                    "name": "driver",
                    "description": "The database driver"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Add a database to the settings.php",
                    "execution": "drupal database:add \\\n  --database=DATABASE \\\n  --username=USERNAME \\\n  --password=PASSWORD\n"
                }
            ],
            "aliases": [
                "dba"
            ],
            "key": "database.add",
            "dashed": "database-add",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:client",
            "description": "Lanseaz\u0103 un client DB dac\u0103 acesta este disponibil",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cheia bazei de date din fi\u0219ierul settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.client.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Launch the default client or could launch another regarding the specification on the argument",
                    "execution": "drupal database:client <database>\n"
                }
            ],
            "aliases": [
                "dbc"
            ],
            "key": "database.client",
            "dashed": "database-client",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:connect",
            "description": "Lanseaz\u0103 un client DB dac\u0103 acesta este disponibil",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "commands.database.connect.arguments.key"
                },
                {
                    "name": "target",
                    "description": "commands.database.connect.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Connects to an specified database, or the default if not arguments passed",
                    "execution": "drupal database:connect \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbco",
                "sqlc"
            ],
            "key": "database.connect",
            "dashed": "database-connect",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:drop",
            "description": "Drop all tables in a given database.",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.drop.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Drop the tables on the database specified on the argument",
                    "execution": "drupal database:drop \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbd"
            ],
            "key": "database.drop",
            "dashed": "database-drop",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:dump",
            "description": "Desc\u0103rca\u021bi structura \u0219i con\u021binutul bazei de date MySQL \u0219i tabelele acesteia",
            "options": [
                {
                    "name": "file",
                    "description": "Numele fi\u0219ierului pentru backup-ul bazei dvs. de date"
                },
                {
                    "name": "gz",
                    "description": "Pass this option if you want the sql result file gzipped"
                },
                {
                    "name": "exclude-cache",
                    "description": "commands.database.dump.options.exclude.cache"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cheia bazei de date din fi\u0219ierul settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.dump.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Dump default database or the one specified on the argument",
                    "execution": "drupal database:dump \\\n  <database>"
                },
                {
                    "description": "Dump in gz compressed format",
                    "execution": "drupal database:dump \\\n  --gz"
                }
            ],
            "aliases": [
                "dbdu"
            ],
            "key": "database.dump",
            "dashed": "database-dump",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:log:clear",
            "description": "Elimina\u021bi evenimentele din tabelul DBLog, sunt disponibile filtre",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "DBLog event ID"
                }
            ],
            "examples": [
                {
                    "description": "Clear the database log from DBLog table",
                    "execution": "drupal database:log:clear \\\n  <database>"
                },
                {
                    "description": "Clear the database log from DBLog table using filters",
                    "execution": "drupal database:log:clear \\\n  <database> \\\n  --type=TYPE \\\n  --severity=SEVERITY"
                }
            ],
            "aliases": [
                "dblc"
            ],
            "key": "database.log.clear",
            "dashed": "database-log-clear",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:log:poll",
            "description": "Poll the watchdog and print new log entries every x seconds",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                }
            ],
            "arguments": [
                {
                    "name": "duration",
                    "description": "Duration in seconds which to sleep between database reads"
                }
            ],
            "examples": [
                {
                    "description": "Print the log entries on screen every x seconds",
                    "execution": "drupal database:log:poll \\\n  100\n"
                }
            ],
            "aliases": [
                "dblp"
            ],
            "key": "database.log.poll",
            "dashed": "database-log-poll",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:query",
            "description": "Executes a SQL statement directly as argument",
            "options": [
                {
                    "name": "quick",
                    "description": "Do not cache each query result, print each row as it is received"
                },
                {
                    "name": "debug",
                    "description": "Prints debugging information and memory and CPU usage statistics when the program exits"
                },
                {
                    "name": "html",
                    "description": "Produce HTML output"
                },
                {
                    "name": "xml",
                    "description": "Produce XML output"
                },
                {
                    "name": "raw",
                    "description": "Special characters are not escaped in the output."
                },
                {
                    "name": "vertical",
                    "description": "Print query output rows vertically"
                },
                {
                    "name": "batch",
                    "description": "Print results using tab as the column separator, with each row on a new line. With this option, mysql does not use the history file"
                }
            ],
            "arguments": [
                {
                    "name": "query",
                    "description": "The SQL statement to execute"
                },
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.connect.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Send a database query",
                    "execution": "drupal database:query 'select * from node limit 0,1'\n"
                }
            ],
            "aliases": [
                "dbq",
                "sqlq"
            ],
            "key": "database.query",
            "dashed": "database-query",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:restore",
            "description": "Restabile\u0219te structura \u0219i con\u021binutul bazei de date MySQL \u0219i ale tabelelor acesteia",
            "options": [
                {
                    "name": "file",
                    "description": "Numele fi\u0219ierului pentru backup-ul bazei dvs. de date"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "Cheia bazei de date din fi\u0219ierul settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.restore.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Restore the database file dump to the database default or another one specified",
                    "execution": "drupal database:restore \\\n  --file='\/srv\/dump\/db.sql'\n"
                }
            ],
            "aliases": [
                "dbr"
            ],
            "key": "database.restore",
            "dashed": "database-restore",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:breakpoints",
            "description": "Displays breakpoints available in application",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Enter Breakpoint Group Name"
                }
            ],
            "examples": [
                {
                    "description": "Provide a group name.",
                    "execution": "drupal breakpoints:debug bartik"
                }
            ],
            "aliases": [
                "dbre"
            ],
            "key": "debug.breakpoints",
            "dashed": "debug-breakpoints",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:cache:context",
            "description": "Displays current cache context for the application.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays cache context",
                    "execution": "drupal debug:cache:context\n"
                }
            ],
            "aliases": [
                "dcc"
            ],
            "key": "debug.cache.context",
            "dashed": "debug-cache-context",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:chain",
            "description": "List available chain files.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dch"
            ],
            "key": "debug.chain",
            "dashed": "debug-chain",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config",
            "description": "Afi\u0219eaz\u0103 configurarea curent\u0103.",
            "options": [
                {
                    "name": "show-overridden",
                    "description": "commands.debug.config.options.show-overridden"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Numele configur\u0103rii."
                }
            ],
            "examples": [
                {
                    "description": "List all configuration object names.",
                    "execution": "drupal config:debug"
                },
                {
                    "description": "Display system site configurations values.",
                    "execution": "drupal config:debug system.site"
                },
                {
                    "description": "List all system configuration names.",
                    "execution": "drupal config:debug | grep system"
                }
            ],
            "aliases": [
                "dc"
            ],
            "key": "debug.config",
            "dashed": "debug-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config:settings",
            "description": "Displays current key:value on settings file.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays key:value as per the settings file",
                    "execution": "drupal debug:config:settings\n"
                }
            ],
            "aliases": [
                "dcs"
            ],
            "key": "debug.config.settings",
            "dashed": "debug-config-settings",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config:validate",
            "description": "Validate a schema implementation before a module is installed.",
            "options": [
                {
                    "name": "schema-name",
                    "description": ""
                }
            ],
            "arguments": [
                {
                    "name": "filepath",
                    "description": ""
                },
                {
                    "name": "schema-filepath",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:config:validate \\\n  \/path\/to\/file \\\n  \/path\/to\/schema-filepath\n"
                }
            ],
            "aliases": [
                "dcv"
            ],
            "key": "debug.config.validate",
            "dashed": "debug-config-validate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:container",
            "description": "Afi\u0219eaz\u0103 serviciile curente pentru o aplica\u021bie.",
            "options": [
                {
                    "name": "parameters",
                    "description": "Service name."
                },
                {
                    "name": "tag",
                    "description": "commands.debug.container.options.tag"
                }
            ],
            "arguments": [
                {
                    "name": "service",
                    "description": "Service name."
                },
                {
                    "name": "method",
                    "description": "Method name."
                },
                {
                    "name": "arguments",
                    "description": "Array of Arguments in CSV or JSON format."
                }
            ],
            "examples": [
                {
                    "description": "Displays the views.views_data_helper services",
                    "execution": "drupal debug:container views.views_data_helper\n"
                }
            ],
            "aliases": [
                "dco",
                "cod"
            ],
            "key": "debug.container",
            "dashed": "debug-container",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:cron",
            "description": "Lista modulelor ce implementeaz\u0103 un cron",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "This will show a list with modules implementing the cron hook",
                    "execution": "drupal debug:cron\n"
                }
            ],
            "aliases": [
                "dcr"
            ],
            "key": "debug.cron",
            "dashed": "debug-cron",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:database:log",
            "description": "Afi\u0219eaz\u0103 evenimentele curente, de intrare \u00een jurnal, pentru aplica\u021bie",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                },
                {
                    "name": "asc",
                    "description": "List events in ascending order"
                },
                {
                    "name": "limit",
                    "description": "Limita\u021bi rezultatele la un anumit num\u0103r"
                },
                {
                    "name": "offset",
                    "description": "Punctul de \u00eenceput al unei limite"
                },
                {
                    "name": "yml",
                    "description": "Print in a yml style"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "ID-ul evenimentului DBLog"
                }
            ],
            "examples": [
                {
                    "description": "List all the entries on the log",
                    "execution": "drupal debug:database:log"
                },
                {
                    "description": "List specific log entry by Event ID",
                    "execution": "drupal debug:database:log 21228\n"
                }
            ],
            "aliases": [
                "dbb",
                "ws"
            ],
            "key": "debug.database.log",
            "dashed": "debug-database-log",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:database:table",
            "description": "Show all tables in a given database.",
            "options": [
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                }
            ],
            "arguments": [
                {
                    "name": "table",
                    "description": "Table to debug"
                }
            ],
            "examples": [
                {
                    "description": "Show all tables on a database",
                    "execution": "drupal debug:database:table"
                },
                {
                    "description": "Show fields on the node table or another specified on the argument",
                    "execution": "drupal debug:database:table node\n"
                }
            ],
            "aliases": [
                "ddt"
            ],
            "key": "debug.database.table",
            "dashed": "debug-database-table",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:dotenv",
            "description": "Debug Dotenv debug values.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "debug.dotenv",
            "dashed": "debug-dotenv",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:entity",
            "description": "Debug entities available in the system",
            "options": [],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.debug.entity.arguments.entity-type"
                }
            ],
            "examples": [
                {
                    "description": "Displays the available entities",
                    "execution": "drupal debug:entity\n"
                }
            ],
            "aliases": [
                "de"
            ],
            "key": "debug.entity",
            "dashed": "debug-entity",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:event",
            "description": "Display current events ",
            "options": [],
            "arguments": [
                {
                    "name": "event",
                    "description": "Event to debug"
                }
            ],
            "examples": [
                {
                    "description": "List all the events that could be debugged",
                    "execution": "drupal debug:evet"
                },
                {
                    "description": "Show the information for the kernel.request event",
                    "execution": "drupal debug:event kernel.request"
                }
            ],
            "aliases": [
                "dev"
            ],
            "key": "debug.event",
            "dashed": "debug-event",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:hook",
            "description": "commands.debug.hook.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dbh"
            ],
            "key": "debug.hook",
            "dashed": "debug-hook",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:image:styles",
            "description": "List image styles on the site",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List all images styles on the site",
                    "execution": "drupal debug:image:styles\n"
                }
            ],
            "aliases": [
                "dis"
            ],
            "key": "debug.image.styles",
            "dashed": "debug-image-styles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:libraries",
            "description": "Displays libraries available in application",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Enter Libraries Name"
                }
            ],
            "examples": [
                {
                    "description": "List all available libraries",
                    "execution": "drupal debug:libraries\n"
                },
                {
                    "description": "List block library information",
                    "execution": "drupal debug:libraries block\n"
                }
            ],
            "aliases": [
                "dl"
            ],
            "key": "debug.libraries",
            "dashed": "debug-libraries",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:module",
            "description": "Afi\u015feaz\u0103 Modulele curente pentru aplica\u0163ie",
            "options": [
                {
                    "name": "status",
                    "description": "Starea Modulului [activat|dezactivat]"
                },
                {
                    "name": "type",
                    "description": "Tipul Modulului [core|no-core]"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module name"
                }
            ],
            "examples": [
                {
                    "description": "Display all installed modules",
                    "execution": "drupal mod --status=installed"
                },
                {
                    "description": "Display all installed and no core modules",
                    "execution": "drupal mod --status=installed --type=no-core"
                }
            ],
            "aliases": [
                "dm"
            ],
            "key": "debug.module",
            "dashed": "debug-module",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:multisite",
            "description": "Listeaz\u0103 toate multi siturile disponibile \u00een sistem",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays multisite information",
                    "execution": "drupal debug:multisite\n"
                }
            ],
            "aliases": [
                "dmu",
                "msd"
            ],
            "key": "debug.multisite",
            "dashed": "debug-multisite",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:permission",
            "description": "Displays all user permissions.",
            "options": [],
            "arguments": [
                {
                    "name": "role",
                    "description": "User role"
                }
            ],
            "examples": [
                {
                    "description": "Displays all the permissions availables on the site",
                    "execution": "drupal debug:permission\n"
                }
            ],
            "aliases": [
                "dp"
            ],
            "key": "debug.permission",
            "dashed": "debug-permission",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:plugin",
            "description": "Display all plugin types, plugin instances of a specific type, or the definition for a specific plugin.",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Plugin type"
                },
                {
                    "name": "id",
                    "description": "Plugin ID"
                }
            ],
            "examples": [
                {
                    "description": "Displays a list with all the plugins on the current site",
                    "execution": "drupal debug:plugin"
                },
                {
                    "description": "Displays block plugin information",
                    "execution": "drupal debug:plugin block"
                },
                {
                    "description": "Displays block broken information",
                    "execution": "drupal debug:plugin block broken\n"
                }
            ],
            "aliases": [
                "dpl"
            ],
            "key": "debug.plugin",
            "dashed": "debug-plugin",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:queue",
            "description": "Display the queues of your application",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays the queues of the application",
                    "execution": "drupal debug:queue\n"
                }
            ],
            "aliases": [
                "dq"
            ],
            "key": "debug.queue",
            "dashed": "debug-queue",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:roles",
            "description": "commands.debug.roles.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dusr"
            ],
            "key": "debug.roles",
            "dashed": "debug-roles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:router",
            "description": "Afi\u015feaz\u0103 rutele curente",
            "options": [
                {
                    "name": "pattern",
                    "description": "commands.debug.router.options.pattern"
                }
            ],
            "arguments": [
                {
                    "name": "route-name",
                    "description": "Numele rutei"
                }
            ],
            "examples": [
                {
                    "description": "Displays current routes for the application",
                    "execution": "drupal rod"
                },
                {
                    "description": "Displays details for the route user.page (\/user)",
                    "execution": "drupal rod user.page"
                }
            ],
            "aliases": [
                "dr",
                "rod"
            ],
            "key": "debug.router",
            "dashed": "debug-router",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:settings",
            "description": "List user Drupal Console settings.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:settings\n"
                }
            ],
            "aliases": [
                "dse"
            ],
            "key": "debug.settings",
            "dashed": "debug-settings",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:site",
            "description": "Listeaz\u0103 toate siturile locale sau la distan\u021b\u0103.",
            "options": [],
            "arguments": [
                {
                    "name": "target",
                    "description": "Target"
                },
                {
                    "name": "property",
                    "description": "Property"
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:site\n"
                }
            ],
            "aliases": [
                "dsi"
            ],
            "key": "debug.site",
            "dashed": "debug-site",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:state",
            "description": "Show the current State keys.",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "The State key to debug."
                }
            ],
            "examples": [
                {
                    "description": "List of the states on the site",
                    "execution": "drupal debug:state\n"
                },
                {
                    "description": "Displays a detail of the state install_task tok from the list of states",
                    "execution": "drupal debug:state install_task\n"
                }
            ],
            "aliases": [
                "dst"
            ],
            "key": "debug.state",
            "dashed": "debug-state",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:theme",
            "description": "Afi\u0219eaz\u0103 temele curente pentru aplica\u021bie",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "O anumit\u0103 tem\u0103 ce va fi depanat\u0103"
                }
            ],
            "examples": [
                {
                    "description": "List of themes on the site",
                    "execution": "drupal debug:theme"
                },
                {
                    "description": "Bartik theme information",
                    "execution": "drupal debug:theme bartik"
                }
            ],
            "aliases": [
                "dt",
                "tde"
            ],
            "key": "debug.theme",
            "dashed": "debug-theme",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:theme:keys",
            "description": "commands.debug.theme.keys.description",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "commands.debug.theme.keys.arguments.key"
                }
            ],
            "examples": [],
            "aliases": [
                "dtk"
            ],
            "key": "debug.theme.keys",
            "dashed": "debug-theme-keys",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:update",
            "description": "Afi\u015feaz\u0103 actualiz\u0103rile disponibile pentru aplica\u0163ie.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List of pending updates",
                    "execution": "drupal debug:update\n"
                }
            ],
            "aliases": [
                "du",
                "upd"
            ],
            "key": "debug.update",
            "dashed": "debug-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:update:composer",
            "description": "commands.debug.update.composer.description",
            "options": [
                {
                    "name": "only-drupal",
                    "description": "commands.debug.update.composer.options.only-drupal"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "duc"
            ],
            "key": "debug.update.composer",
            "dashed": "debug-update-composer",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:user",
            "description": "Displays current users for the application",
            "options": [
                {
                    "name": "uid",
                    "description": "Filters the result list by uids [between quotes separated by spaces]"
                },
                {
                    "name": "username",
                    "description": "Filters the result list by usernames [between quotes separated by spaces]"
                },
                {
                    "name": "mail",
                    "description": "Filters the result list by user's e-mail [between quotes separated by spaces]"
                },
                {
                    "name": "roles",
                    "description": "Roles to filter debug"
                },
                {
                    "name": "limit",
                    "description": "How many users would you listed in debug"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Users list on the site",
                    "execution": "drupal debug:user\n"
                }
            ],
            "aliases": [
                "dus"
            ],
            "key": "debug.user",
            "dashed": "debug-user",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:views",
            "description": "Afi\u015feaz\u0103 resursele curente ale views-ului pentru aplica\u021bie.",
            "options": [
                {
                    "name": "tag",
                    "description": "Eticheta view-ului"
                },
                {
                    "name": "status",
                    "description": "Statusul view-ului (Activat|Dezactivat)"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "ID-ul view-ului"
                }
            ],
            "examples": [
                {
                    "description": "List of views on the site",
                    "execution": "drupal debug:views\n"
                }
            ],
            "aliases": [
                "vde"
            ],
            "key": "debug.views",
            "dashed": "debug-views",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:views:plugins",
            "description": "Display current views plugins for the application",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Filter views plugins by type"
                }
            ],
            "examples": [
                {
                    "description": "List of views plugins",
                    "execution": "drupal debug:views:plugins\n"
                }
            ],
            "aliases": [
                "dvp"
            ],
            "key": "debug.views.plugins",
            "dashed": "debug-views-plugins",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "demo:harold",
            "description": "Download Drupal + Drupal Console to contribute.",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "demo.harold",
            "dashed": "demo-harold",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "devel:dumper",
            "description": "commands.devel.dumper.messages.change-devel-dumper-plugin",
            "options": [],
            "arguments": [
                {
                    "name": "dumper",
                    "description": "commands.devel.dumper.messages.name-devel-dumper-plugin"
                }
            ],
            "examples": [],
            "aliases": [
                "dd"
            ],
            "key": "devel.dumper",
            "dashed": "devel-dumper",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:contribute",
            "description": "Download Drupal + Drupal Console to contribute.",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.contribute",
            "dashed": "develop-contribute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:create:symlinks",
            "description": "Create symlinks between Drupal site and cloned repositories.",
            "options": [
                {
                    "name": "code-directory",
                    "description": "The directory where the projects were cloned"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.create.symlinks",
            "dashed": "develop-create-symlinks",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:cheatsheet",
            "description": "Generate a printable cheatsheet for Commands",
            "options": [
                {
                    "name": "path",
                    "description": "The path to generate the pdf for the documentation"
                },
                {
                    "name": "wkhtmltopdf",
                    "description": "The path for the wkhtmltopdf binary in your system"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdc"
            ],
            "key": "develop.doc.cheatsheet",
            "dashed": "develop-doc-cheatsheet",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:dash",
            "description": "Genera\u021bi pachetul DrupalConsole.docset pentru Dash",
            "options": [
                {
                    "name": "path",
                    "description": "Calea c\u0103tre directorul unde docset-ul va fi salvat."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdd"
            ],
            "key": "develop.doc.dash",
            "dashed": "develop-doc-dash",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:data",
            "description": "Generate documentations for Commands.",
            "options": [
                {
                    "name": "file",
                    "description": "The file to render the command data"
                },
                {
                    "name": "help",
                    "description": "Display this help message"
                },
                {
                    "name": "quiet",
                    "description": "Do not output any message"
                },
                {
                    "name": "verbose",
                    "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                },
                {
                    "name": "version",
                    "description": "Display this application version"
                },
                {
                    "name": "ansi",
                    "description": "Force ANSI output"
                },
                {
                    "name": "no-ansi",
                    "description": "Disable ANSI output"
                },
                {
                    "name": "no-interaction",
                    "description": "Do not ask any interactive question"
                },
                {
                    "name": "env",
                    "description": "Numele mediului de lucru."
                },
                {
                    "name": "root",
                    "description": "Defini\u021bi r\u0103d\u0103cina Drupal care va fi folosit\u0103 la executarea comenzilor"
                },
                {
                    "name": "debug",
                    "description": "application.options.debug"
                },
                {
                    "name": "learning",
                    "description": "Generarea unui cod verbal."
                },
                {
                    "name": "generate-chain",
                    "description": "Printeaz\u0103 op\u021biunile \u0219i argumentele de execu\u021bie \u00een format yaml pentru a fi folosit \u00een comand\u0103 \u00eenl\u0103n\u021buit\u0103"
                },
                {
                    "name": "generate-inline",
                    "description": "Printeaz\u0103 op\u021biunile \u0219i argumentele de execu\u021bie \u00een apel inline pentru a fi folosit pe viitor"
                },
                {
                    "name": "generate-doc",
                    "description": "Shows command options and arguments as markdown"
                },
                {
                    "name": "target",
                    "description": "Site name you want to interact with (for local or remote sites)"
                },
                {
                    "name": "uri",
                    "description": "URI-ul sitului Drupal care va fi folosit (pentru medii multi-sit sau c\u00e2nd ruleaz\u0103 pe un port alternativ)"
                },
                {
                    "name": "yes",
                    "description": "Skip confirmation and proceed"
                }
            ],
            "arguments": [
                {
                    "name": "command",
                    "description": "The command to execute"
                }
            ],
            "examples": [],
            "aliases": [
                "gdda"
            ],
            "key": "develop.doc.data",
            "dashed": "develop-doc-data",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:gitbook",
            "description": "Genereaz\u0103 documenta\u021biile pentru Comenzi",
            "options": [
                {
                    "name": "path",
                    "description": "Calea de randare a documenta\u021biei"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdg"
            ],
            "key": "develop.doc.gitbook",
            "dashed": "develop-doc-gitbook",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:example",
            "description": null,
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.example",
            "dashed": "develop-example",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:example:container:aware",
            "description": null,
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.example.container.aware",
            "dashed": "develop-example-container-aware",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:cleanup",
            "description": "Clean up translation files",
            "options": [],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to clean up files against English"
                },
                {
                    "name": "library",
                    "description": "Library to clean up files against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Delete all unnecessary files in all languages.",
                    "execution": "drupal translation:cleanup"
                },
                {
                    "description": "Delete all unnecessary files in Spanish language",
                    "execution": "drupal translation:cleanup es"
                },
                {
                    "description": "Delete all unnecessary files in all languages in console-develop library",
                    "execution": "drupal translation:cleanup all console-develop"
                },
                {
                    "description": "Delete all unnecessary files in Spanish language in console-develop library",
                    "execution": "drupal translation:cleanup es console-develop"
                }
            ],
            "aliases": [
                "tc"
            ],
            "key": "develop.translation.cleanup",
            "dashed": "develop-translation-cleanup",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:pending",
            "description": "Determine pending translation string in a language or a specific file in a language",
            "options": [
                {
                    "name": "file",
                    "description": "Specific file to determine pending translations against English"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to determine pending translations against English"
                },
                {
                    "name": "library",
                    "description": "Library to determine pending translations against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Determine pending translation strings in all languages.",
                    "execution": "drupal translation:pending"
                },
                {
                    "description": "Determine pending translation strings in Spanish language",
                    "execution": "drupal translation:pending es"
                },
                {
                    "description": "Determine pending translation strings in all languages in console-develop library",
                    "execution": "drupal translation:pending all console-develop"
                },
                {
                    "description": "Determine pending translation strings in Spanish language in console-develop library",
                    "execution": "drupal translation:pending es console-develop"
                }
            ],
            "aliases": [
                "tp"
            ],
            "key": "develop.translation.pending",
            "dashed": "develop-translation-pending",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:stats",
            "description": "Generate translate stats",
            "options": [
                {
                    "name": "format",
                    "description": "Define output format table|markdown"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to generate translation stats against English"
                },
                {
                    "name": "library",
                    "description": "Library to calculate translation stats against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Calculate translation stats in all languages.",
                    "execution": "drupal translation:stats"
                },
                {
                    "description": "Calculate translation stats in Spanish language",
                    "execution": "drupal translation:stats es"
                },
                {
                    "description": "Calculate translation stats in all languages in console-develop library",
                    "execution": "drupal translation:stats all console-develop"
                },
                {
                    "description": "Calculate translation stats in Spanish language in console-develop library",
                    "execution": "drupal translation:stats es console-develop"
                }
            ],
            "aliases": [
                "ts"
            ],
            "key": "develop.translation.stats",
            "dashed": "develop-translation-stats",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:sync",
            "description": "Sync translation files",
            "options": [
                {
                    "name": "file",
                    "description": "commands.develop.translation.stats.options.file"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "Language to syncronize against English source files"
                },
                {
                    "name": "library",
                    "description": "Library to syncronize against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Syncronize translation files in all languages.",
                    "execution": "drupal translation:sync"
                },
                {
                    "description": "Syncronize translation files in Spanish language",
                    "execution": "drupal translation:sync es"
                },
                {
                    "description": "Syncronize translation files in all languages in console-develop library",
                    "execution": "drupal translation:sync all console-develop"
                },
                {
                    "description": "Syncronize translation files in Spanish language in console-develop library",
                    "execution": "drupal translation:sync es console-develop"
                }
            ],
            "aliases": [
                "tsy"
            ],
            "key": "develop.translation.sync",
            "dashed": "develop-translation-sync",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "docker:init",
            "description": "commands.docker.init.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "docker.init",
            "dashed": "docker-init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "dotenv:init",
            "description": "commands.dotenv.init.description",
            "options": [
                {
                    "name": "load-from-env",
                    "description": "commands.dotenv.init.options.load-from-env"
                },
                {
                    "name": "load-settings",
                    "description": "commands.dotenv.init.options.load-settings"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "dotenv.init",
            "dashed": "dotenv-init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "entity:delete",
            "description": "Delete an specific entity",
            "options": [
                {
                    "name": "all",
                    "description": "commands.entity.delete.options.all"
                }
            ],
            "arguments": [
                {
                    "name": "entity-definition-id",
                    "description": "Entity definition id"
                },
                {
                    "name": "entity-id",
                    "description": "Entity ID to be deleted"
                }
            ],
            "examples": [
                {
                    "description": "Delete entity type content using node id",
                    "execution": "drupal entity:delete node 1"
                }
            ],
            "aliases": [
                "ed"
            ],
            "key": "entity.delete",
            "dashed": "entity-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "field:info",
            "description": "View information about fields.",
            "options": [
                {
                    "name": "detailed",
                    "description": "Extended output with machine names and descriptions"
                },
                {
                    "name": "entity",
                    "description": "Restrict to a specific fieldabe entity type, for example: node, comment, taxonomy_term, shortcut, block_content, contact_message"
                },
                {
                    "name": "bundle",
                    "description": "Restrict to a specific bundle type, for example: article"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "fii"
            ],
            "key": "field.info",
            "dashed": "field-info",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:ajax:command",
            "description": "commands.generate.ajax.command.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.ajax.command.options.class"
                },
                {
                    "name": "method",
                    "description": "commands.generate.ajax.command.options.method"
                },
                {
                    "name": "js-name",
                    "description": "commands.generate.ajax.command.options.js-name"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gac"
            ],
            "key": "generate.ajax.command",
            "dashed": "generate-ajax-command",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:authentication:provider",
            "description": "Genereaz\u0103 un \"Authentication Provider\"",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.authentication.provider.options.class"
                },
                {
                    "name": "provider-id",
                    "description": "commands.generate.authentication.provider.options.provider-id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an authentication provider specifying the module, the class and the provider id",
                    "execution": "drupal generate:authentication:provider  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAuthenticationProvider\"  \\\n  --provider-id=\"default_authentication_provider\"\n"
                }
            ],
            "aliases": [
                "gap"
            ],
            "key": "generate.authentication.provider",
            "dashed": "generate-authentication-provider",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:breakpoint",
            "description": "Generate breakpoint",
            "options": [
                {
                    "name": "theme",
                    "description": "Theme name"
                },
                {
                    "name": "breakpoints",
                    "description": "Breakpoints"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a breakpoint specifying the theme, a breakpoint name, its label, the media query, its weight and multipliers",
                    "execution": "drupal generate:breakpoint  \\\n  --theme=\"classy\"  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'"
                }
            ],
            "aliases": [
                "gb"
            ],
            "key": "generate.breakpoint",
            "dashed": "generate-breakpoint",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:cache:context",
            "description": "Generate a cache context",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "cache-context",
                    "description": "commands.generate.cache.context.options.name"
                },
                {
                    "name": "class",
                    "description": "commands.generate.cache.context.options.class"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate cache for a context specifying the module, the context name and its class",
                    "execution": "drupal generate:cache:context  \\\n  --module=\"modulename\"  \\\n  --cache-context=\"ContextName\"  \\\n  --class=\"DefaultCacheContext\""
                }
            ],
            "aliases": [
                "gcc"
            ],
            "key": "generate.cache.context",
            "dashed": "generate-cache-context",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:command",
            "description": "Genereaz\u0103 comenzi pentru consol\u0103.",
            "options": [
                {
                    "name": "extension",
                    "description": "The extension name."
                },
                {
                    "name": "extension-type",
                    "description": "The extension type."
                },
                {
                    "name": "class",
                    "description": "Numele Clasei \"Command\""
                },
                {
                    "name": "name",
                    "description": "Numele comenzii."
                },
                {
                    "name": "initialize",
                    "description": "commands.generate.command.options.initialize"
                },
                {
                    "name": "interact",
                    "description": "commands.generate.command.options.interact"
                },
                {
                    "name": "container-aware",
                    "description": "C\u00e2nd este executat\u0103 comanda este con\u0219tient\u0103 de instalarea de drupal a sitului"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                },
                {
                    "name": "generator",
                    "description": "commands.generate.command.options.generator"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a command specifying the extension name and type, its class and the name.",
                    "execution": "drupal generate:command  \\\n  --extension=\"ExtensionName\"  \\\n  --extension-type=\"module\"  \\\n  --class=\"DefaultCommand\"  \\\n  --name=\"CommandName\""
                }
            ],
            "aliases": [
                "gco"
            ],
            "key": "generate.command",
            "dashed": "generate-command",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:composer",
            "description": "commands.generate.composer.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "name",
                    "description": "commands.generate.composer.options.name"
                },
                {
                    "name": "type",
                    "description": "commands.generate.composer.options.type"
                },
                {
                    "name": "description",
                    "description": "commands.generate.composer.options.description"
                },
                {
                    "name": "keywords",
                    "description": "commands.generate.composer.options.keywords"
                },
                {
                    "name": "license",
                    "description": "commands.generate.composer.options.license"
                },
                {
                    "name": "homepage",
                    "description": "commands.generate.composer.options.homepage"
                },
                {
                    "name": "minimum-stability",
                    "description": "commands.generate.composer.options.minimum-stability"
                },
                {
                    "name": "authors",
                    "description": "commands.generate.composer.options.authors"
                },
                {
                    "name": "support",
                    "description": "commands.generate.composer.options.support"
                },
                {
                    "name": "required",
                    "description": "commands.generate.composer.options.required"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gcom"
            ],
            "key": "generate.composer",
            "dashed": "generate-composer",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:controller",
            "description": "Genereaz\u0103 \u0219i \u00cenregistreaz\u0103 un controller",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei Controller"
                },
                {
                    "name": "routes",
                    "description": "The routes, must be an array containing [title, method, path]"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                },
                {
                    "name": "test",
                    "description": "Genera\u021bi o clas\u0103 de test"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate controller specifying the module name, the class name and its routes",
                    "execution": "drupal generate:controller  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultController\"  \\\n  --routes='\"title\":\"ControllerMethod\", \"name\":\"modulename.default_controller_hello\", \"method\":\"hello\", \"path\":\"\/modulename\/hello\/{name}\"'  \\\n  --test"
                }
            ],
            "aliases": [
                "gcon"
            ],
            "key": "generate.controller",
            "dashed": "generate-controller",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:bundle",
            "description": "Genereaz\u0103 un tip de con\u021binut nou (nod \/ entitate)",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "bundle-name",
                    "description": "Numele ma\u0219in\u0103 pentru tipul de con\u021binut"
                },
                {
                    "name": "bundle-title",
                    "description": "Numele lizibil pentru tipul de con\u021binut"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate bundle entity specifying the module, the bundle name and its title",
                    "execution": "drupal generate:entity:bundle  \\\n  --module=\"modulename\"  \\\n  --bundle-name=\"default\"  \\\n  --bundle-title=\"default\""
                }
            ],
            "aliases": [
                "geb"
            ],
            "key": "generate.entity.bundle",
            "dashed": "generate-entity-bundle",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:config",
            "description": "Genereaz\u0103 o entitate de configurare nou\u0103",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "entity-class",
                    "description": "Clasa entit\u0103\u021bii de configurare"
                },
                {
                    "name": "entity-name",
                    "description": "Numele entit\u0103\u021bii de configurare"
                },
                {
                    "name": "base-path",
                    "description": "The base-path for the config entity routes"
                },
                {
                    "name": "label",
                    "description": "Eticheta"
                },
                {
                    "name": "bundle-of",
                    "description": "Acts as bundle for content entities"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate config entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:config  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                }
            ],
            "aliases": [
                "gec"
            ],
            "key": "generate.entity.config",
            "dashed": "generate-entity-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:content",
            "description": "Genereaz\u0103 o entitate de con\u021binut nou\u0103",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "entity-class",
                    "description": "Clasa entit\u0103\u021bii de con\u021binut"
                },
                {
                    "name": "entity-name",
                    "description": "Numele entit\u0103\u021bii de con\u021binut"
                },
                {
                    "name": "base-path",
                    "description": "The base-path for the content entity routes"
                },
                {
                    "name": "label",
                    "description": "Eticheta"
                },
                {
                    "name": "has-bundles",
                    "description": "Entity has bundles"
                },
                {
                    "name": "is-translatable",
                    "description": "Content entity translatable"
                },
                {
                    "name": "revisionable",
                    "description": "commands.generate.entity.content.options.revisionable"
                },
                {
                    "name": "has-forms",
                    "description": "commands.generate.entity.content.options.has-forms"
                },
                {
                    "name": "has-owner",
                    "description": "commands.generate.entity.content.options.has-owner"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                },
                {
                    "description": "Generate a translatable and revisionable content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\"  \\\n  --is-translatable  \\\n  --revisionable"
                }
            ],
            "aliases": [
                "geco"
            ],
            "key": "generate.entity.content",
            "dashed": "generate-entity-content",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:event:subscriber",
            "description": "Genereaz\u0103 un abonat la eveniment",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "name",
                    "description": "commands.generate.event.subscriber.options.name"
                },
                {
                    "name": "class",
                    "description": "commands.generate.event.subscriber.options.class"
                },
                {
                    "name": "events",
                    "description": "\u00cencarc\u0103 evenimente din container"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an event subscriber specifying the module name, its name, the class and the events to subscribe",
                    "execution": "drupal generate:event:subscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultSubscriber\"  \\\n  --events='kernel_request'\n"
                }
            ],
            "aliases": [
                "ges"
            ],
            "key": "generate.event.subscriber",
            "dashed": "generate-event-subscriber",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form",
            "description": "Genereaz\u0103 un \"FormBase\" nou",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei formularului"
                },
                {
                    "name": "form-id",
                    "description": "ID-ul formularului"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "Creeaz\u0103 intr\u0103ri \u00eentr-un formular."
                },
                {
                    "name": "path",
                    "description": "Enter the form path"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an empty form with config file specifying the module name, the class, a form id and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --path=\"\/modulename\/form\/default\""
                },
                {
                    "description": "Generate a form with 2 fields and a config file specifying the module name, the class, a form id, the inputs and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --inputs='\"name\":\"inputname\", \"type\":\"text_format\", \"label\":\"InputName\", \"options\":\"\", \"description\":\"Just a text input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --path=\"\/modulename\/form\/default\""
                }
            ],
            "aliases": [
                "gf"
            ],
            "key": "generate.form",
            "dashed": "generate-form",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form:alter",
            "description": "Genereaz\u0103 o implementare a hook_form_alter() sau hook_form_FORM_ID_alter()",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "form-id",
                    "description": "ID-ul formularului de alterat"
                },
                {
                    "name": "inputs",
                    "description": "Creeaz\u0103 intr\u0103ri \u00eentr-un formular."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook form alter for an empty form specifying the module name",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\""
                },
                {
                    "description": "Generate a hook form alter with 2 fields specifying the module name and the inputs",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gfa"
            ],
            "key": "generate.form.alter",
            "dashed": "generate-form-alter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form:config",
            "description": "Genereaz\u0103 un \"ConfigFormBase\" nou",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei formularului"
                },
                {
                    "name": "form-id",
                    "description": "ID-ul formularului"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "Creeaz\u0103 intr\u0103ri \u00eentr-un formular."
                },
                {
                    "name": "path",
                    "description": "Enter the form path"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gfc"
            ],
            "key": "generate.form.config",
            "dashed": "generate-form-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:help",
            "description": "Generate an implementation of hook_help()",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "description",
                    "description": "commands.generate.help.options.description"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook help specifying the module name and the description",
                    "execution": "drupal generate:help  \\\n  --module=\"modulename\"  \\\n  --description=\"My Awesome Module\""
                }
            ],
            "aliases": [
                "gh"
            ],
            "key": "generate.help",
            "dashed": "generate-help",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:jstest",
            "description": "commands.generate.jstest.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.jstest.options.class"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gjt"
            ],
            "key": "generate.jstest",
            "dashed": "generate-jstest",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:module",
            "description": "Genereaz\u0103 un modul.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului"
                },
                {
                    "name": "machine-name",
                    "description": "Numele ma\u0219in\u0103 (doar minuscule \u0219i liniu\u021be jos)"
                },
                {
                    "name": "module-path",
                    "description": "Calea c\u0103tre modul"
                },
                {
                    "name": "description",
                    "description": "Descrierea modulului"
                },
                {
                    "name": "core",
                    "description": "Versiunea nucleului"
                },
                {
                    "name": "package",
                    "description": "Pachetul modulului"
                },
                {
                    "name": "module-file",
                    "description": "Add a .module file"
                },
                {
                    "name": "features-bundle",
                    "description": "Define module as feature using the given Features bundle name"
                },
                {
                    "name": "composer",
                    "description": "Adaug\u0103 un fi\u0219ier composer.json"
                },
                {
                    "name": "dependencies",
                    "description": "Dependin\u021bele modulului trebuie s\u0103 fie separate prin virgul\u0103 (ex. context, panels)"
                },
                {
                    "name": "test",
                    "description": "Genereaz\u0103 o clas\u0103 pentru testare"
                },
                {
                    "name": "twigtemplate",
                    "description": "Generate theme template"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a module specifying the module name, machine name, the path, its description, drupal core and the package name. In this example the composer file, the unit test and twig template are generated too",
                    "execution": "drupal generate:module  \\\n  --module=\"modulename\"  \\\n  --machine-name=\"modulename\"  \\\n  --module-path=\"\/modules\/custom\"  \\\n  --description=\"My Awesome Module\"  \\\n  --core=\"8.x\"  \\\n  --package=\"Custom\"  \\\n  --module-file  \\\n  --composer  \\\n  --test  \\\n  --twigtemplate"
                }
            ],
            "aliases": [
                "gm"
            ],
            "key": "generate.module",
            "dashed": "generate-module",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:module:file",
            "description": "Generate a .module file",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate the .module file specifying the module name",
                    "execution": "drupal generate:module:file  \\\n  --module=\"modulename\""
                }
            ],
            "aliases": [
                "gmf"
            ],
            "key": "generate.module.file",
            "dashed": "generate-module-file",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:permissions",
            "description": "commands.generate.permissions.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "permissions",
                    "description": "Creeaz\u0103 permisiuni."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gp"
            ],
            "key": "generate.permissions",
            "dashed": "generate-permissions",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:block",
            "description": "Genereaz\u0103 un Plugin de tip bloc",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pluginului"
                },
                {
                    "name": "plugin-label",
                    "description": "commands.generate.plugin.block.options.plugin-label"
                },
                {
                    "name": "plugin-id",
                    "description": "ID-ul pluginului"
                },
                {
                    "name": "theme-region",
                    "description": "Regiunea temei unde va fi randat Pluginul de tip bloc"
                },
                {
                    "name": "inputs",
                    "description": "Creeaz\u0103 intr\u0103ri \u00eentr-un formular."
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                },
                {
                    "name": "twigtemplate",
                    "description": "commands.generate.plugin.block.options.twigtemplate"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin block in the header region with an input field specifying the module name, the class, the label, its id, the region and the input",
                    "execution": "drupal generate:plugin:block  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultBlock\"  \\\n  --label=\"Default block\"  \\\n  --plugin-id=\"default_block\"  \\\n  --theme-region=\"header\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gpb"
            ],
            "key": "generate.plugin.block",
            "dashed": "generate-plugin-block",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:ckeditorbutton",
            "description": "Generate CKEditor button plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin ID. NOTE: This corresponds to the CKEditor plugin name. It is the first argument of the CKEDITOR.plugins.add() function in the plugin.js file."
                },
                {
                    "name": "buttons",
                    "description": "commands.generate.plugin.ckeditorbutton.options.buttons"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate CKEditor button specifying the module name, the class, the label, its id, the button name and the icon path",
                    "execution": "drupal generate:plugin:ckeditorbutton  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultCKEditorButton\"  \\\n  --label=\"Default ckeditor button\"  \\\n  --plugin-id=\"default ckeditor button\"  \\\n  --button-name=\"Default ckeditor button\"  \\\n  --button-icon-path=\"modules\/custom\/modulename\/js\/plugins\/default ckeditor button\/images\/icon.png\""
                }
            ],
            "aliases": [
                "gpc"
            ],
            "key": "generate.plugin.ckeditorbutton",
            "dashed": "generate-plugin-ckeditorbutton",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:condition",
            "description": "Genereaz\u0103 o condi\u021bie pentru extensie.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pentru condi\u021bia extensiei"
                },
                {
                    "name": "label",
                    "description": "Eticheta pentru condi\u021bia extensiei"
                },
                {
                    "name": "plugin-id",
                    "description": "ID-ul condi\u021biei extensiei"
                },
                {
                    "name": "context-definition-id",
                    "description": "ID-ul definirii contextului"
                },
                {
                    "name": "context-definition-label",
                    "description": "Eticheta definirii contextului"
                },
                {
                    "name": "context-definition-required",
                    "description": "Definirea contextului este obligatorie (ADEV\u0102RAT\/FALS)"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin condition for a node entity type specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:node\"  \\\n  --context-definition-label=\"node\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for language specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"language\"  \\\n  --context-definition-label=\"Language\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for role configuration specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:user_role\"  \\\n  --context-definition-label=\"user_role\"  \\\n  --context-definition-required\n"
                }
            ],
            "aliases": [
                "gpco"
            ],
            "key": "generate.plugin.condition",
            "dashed": "generate-plugin-condition",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:field",
            "description": "Genereaz\u0103 extensiile: tipul de c\u00e2mp, widget-ul si formatare.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "type-class",
                    "description": "Numele clasei extensiei de tip c\u00e2mp"
                },
                {
                    "name": "type-label",
                    "description": "Eticheta extensiei de tip c\u00e2mp"
                },
                {
                    "name": "type-plugin-id",
                    "description": "ID-ul extensiei de tip c\u00e2mp"
                },
                {
                    "name": "type-description",
                    "description": "Descrierea extensiei de tip c\u00e2mp"
                },
                {
                    "name": "formatter-class",
                    "description": "Numele clasei extensiei de formatare a c\u00e2mpului"
                },
                {
                    "name": "formatter-label",
                    "description": "Eticheta extensiei de formatare a c\u00e2mpului"
                },
                {
                    "name": "formatter-plugin-id",
                    "description": "ID-ul extensiei de formatare a c\u00e2mpului"
                },
                {
                    "name": "widget-class",
                    "description": "Numele clasei extensiei de formatare a c\u00e2mpului"
                },
                {
                    "name": "widget-label",
                    "description": "Eticheta extensiei de widget pentru c\u00e2mp"
                },
                {
                    "name": "widget-plugin-id",
                    "description": "ID-ul extensiei de widget pentru c\u00e2mp"
                },
                {
                    "name": "field-type",
                    "description": "Tipul de c\u00e2mp cu, care pot fi folosite formatarea si widgetul"
                },
                {
                    "name": "default-widget",
                    "description": "Widget-ul predefinit al extensiei de tip c\u00e2mp."
                },
                {
                    "name": "default-formatter",
                    "description": "Formatarea predefinit\u0103 pentru extensia de tip c\u00e2mp"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate field type, widget and formatter plugins specifying the module name, the type (class, label, plugin id and description), the formatter (class, label, plugin id) and the widget (class, label and plugin id)",
                    "execution": "drupal generate:plugin:field  \\\n  --module=\"modulename\"  \\\n  --type-class=\"ExampleFieldType\"  \\\n  --type-label=\"Example field type\"  \\\n  --type-plugin-id=\"example_field_type\"  \\\n  --type-description=\"My Field Type\"  \\\n  --formatter-class=\"ExampleFormatterType\"  \\\n  --formatter-label=\"Example formatter type\"  \\\n  --formatter-plugin-id=\"example_formatter_type\"  \\\n  --widget-class=\"ExampleWidgetType\"  \\\n  --widget-label=\"Example widget type\"  \\\n  --widget-plugin-id=\"example_widget_type\"  \\\n  --field-type=\"example_field_type\"  \\\n  --default-widget=\"example_widget_type\"  \\\n  --default-formatter=\"example_formatter_type\"\n"
                }
            ],
            "aliases": [
                "gpf"
            ],
            "key": "generate.plugin.field",
            "dashed": "generate-plugin-field",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldformatter",
            "description": "Genereaz\u0103 extensia de formatare a c\u00e2mpului.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pentru extensie"
                },
                {
                    "name": "label",
                    "description": "Eticheta extensiei"
                },
                {
                    "name": "plugin-id",
                    "description": "ID-ul extensiei"
                },
                {
                    "name": "field-type",
                    "description": "Tipul c\u00e2mpului cu, care extensia poate fi folosit\u0103"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a a text field formatter plugin specifying the module name, the class, the label its plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldFormatter\"  \\\n  --label=\"Example field formatter\"  \\\n  --plugin-id=\"example_field_formatter\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpff"
            ],
            "key": "generate.plugin.fieldformatter",
            "dashed": "generate-plugin-fieldformatter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldtype",
            "description": "Genereaz\u0103 extensia de tip c\u00e2mp.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pentru extensie"
                },
                {
                    "name": "label",
                    "description": "Eticheta extensiei"
                },
                {
                    "name": "plugin-id",
                    "description": "ID-ul extensiei"
                },
                {
                    "name": "description",
                    "description": "Descrierea extensiei"
                },
                {
                    "name": "default-widget",
                    "description": "Valoarea implicit\u0103 a acestei extensii pentru widgetul c\u00e2mpului"
                },
                {
                    "name": "default-formatter",
                    "description": "Valoarea implicit\u0103 a acestei extensii pentru formatarea c\u00e2mpului"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a field type plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\""
                },
                {
                    "description": "Generate a field type plugin with a default widget and formatter specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\"  \\\n  --default-widget=\"DefaultWidget\"  \\\n  --default-formatter=\"DefaultFormatter\"\n"
                }
            ],
            "aliases": [
                "gpft"
            ],
            "key": "generate.plugin.fieldtype",
            "dashed": "generate-plugin-fieldtype",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldwidget",
            "description": "Genereaz\u0103 extensia de widget pentru c\u00e2mp.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pentru extensie"
                },
                {
                    "name": "label",
                    "description": "Eticheta extensiei"
                },
                {
                    "name": "plugin-id",
                    "description": "ID-ul extensiei"
                },
                {
                    "name": "field-type",
                    "description": "Tipul c\u00e2mpului cu, care extensia poate fi folosit\u0103"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a text type field widget plugin specifying the module name, the class, its label, the plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldwidget  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldWidget\"  \\\n  --label=\"Example field widget\"  \\\n  --plugin-id=\"example_field_widget\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpfw"
            ],
            "key": "generate.plugin.fieldwidget",
            "dashed": "generate-plugin-fieldwidget",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:imageeffect",
            "description": "Genereaz\u0103 un plugin pentru efecte de imagini.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pluginului"
                },
                {
                    "name": "label",
                    "description": "Eticheta pluginului"
                },
                {
                    "name": "plugin-id",
                    "description": "Id-ul pluginului"
                },
                {
                    "name": "description",
                    "description": "Descrierea pluginului"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image effect plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:imageeffect  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultImageEffect\"  \\\n  --label=\"Default image effect\"  \\\n  --plugin-id=\"default_image_effect\"  \\\n  --description=\"My Image Effect\"\n"
                }
            ],
            "aliases": [
                "gpie"
            ],
            "key": "generate.plugin.imageeffect",
            "dashed": "generate-plugin-imageeffect",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:imageformatter",
            "description": "Genereaz\u0103 un plugin de formatare a imaginii.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei pluginului"
                },
                {
                    "name": "label",
                    "description": "Eticheta pluginului"
                },
                {
                    "name": "plugin-id",
                    "description": "ID-ul pluginului"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image formatter plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:imageformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleImageFormatter\"  \\\n  --label=\"Example image formatter\"  \\\n  --plugin-id=\"example_image_formatter\"\n"
                }
            ],
            "aliases": [
                "gpif"
            ],
            "key": "generate.plugin.imageformatter",
            "dashed": "generate-plugin-imageformatter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:mail",
            "description": "Generate a plugin mail",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an email plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:mail  \\\n  --module=\"modulename\"  \\\n  --class=\"HtmlFormatterMail\"  \\\n  --label=\"Html formatter mail\"  \\\n  --plugin-id=\"html_formatter_mail\"\n"
                }
            ],
            "aliases": [
                "gpm"
            ],
            "key": "generate.plugin.mail",
            "dashed": "generate-plugin-mail",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:dataparser",
            "description": "commands.generate.plugin.migrate.dataparser.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.migrate.dataparser.options.class"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.migrate.dataparser.options.plugin-id"
                },
                {
                    "name": "plugin-title",
                    "description": "commands.generate.plugin.migrate.dataparser.options.plugin-title"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpmdp"
            ],
            "key": "generate.plugin.migrate.dataparser",
            "dashed": "generate-plugin-migrate-dataparser",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:process",
            "description": "Generate a migrate process plugin",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration plugin process specifying the module name, the class and its id",
                    "execution": "drupal generate:plugin:migrate:process  \\\n  --module=\"modulename\"  \\\n  --class=\"MigrationProcess\"  \\\n  --plugin-id=\"migrationprocess\"\n"
                }
            ],
            "aliases": [
                "gpmp"
            ],
            "key": "generate.plugin.migrate.process",
            "dashed": "generate-plugin-migrate-process",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:source",
            "description": "Generate a migrate source plugin",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "table",
                    "description": "Table to query"
                },
                {
                    "name": "alias",
                    "description": "Short alias to refer to the table as"
                },
                {
                    "name": "group-by",
                    "description": "Field to group results by"
                },
                {
                    "name": "fields",
                    "description": "Fields to export"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration source plugin specifying the module name, the class, its plugin id, the table and its alias",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --table=\"DefaultTableName\"  \\\n  --alias=\"D\""
                },
                {
                    "description": "Generate a migration source plugin for specific fields of the users table specifying the module name, the class, its plugin id, the table, its alias and the fields",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultPluginClass\"  \\\n  --plugin-id=\"default_plugin_class\"  \\\n  --table=\"users\"  \\\n  --alias=\"u\"  \\\n  --fields='\"id\":\"id\", \"description\":\"the user id\"'  \\\n  --fields='\"id\":\"username\", \"description\":\"the username\"'  \\\n  --fields='\"id\":\"password\", \"description\":\"the user password\"'  \\\n  --fields='\"id\":\"email\", \"description\":\"the user email\"'\n"
                }
            ],
            "aliases": [
                "gpms"
            ],
            "key": "generate.plugin.migrate.source",
            "dashed": "generate-plugin-migrate-source",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:queue",
            "description": "commands.generate.plugin.queue.description",
            "options": [
                {
                    "name": "module",
                    "description": "commands.generate.plugin.queue.options.module"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.queue.options.class"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.queue.options.plugin-id"
                },
                {
                    "name": "cron-time",
                    "description": "commands.generate.plugin.queue.options.cron-time"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.queue.options.label"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpqueue"
            ],
            "key": "generate.plugin.queue",
            "dashed": "generate-plugin-queue",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rest:resource",
            "description": "Genereaz\u0103 un plugin de tip resurs\u0103 REST",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Clasa pluginului de tip resurs\u0103 REST"
                },
                {
                    "name": "plugin-id",
                    "description": "Id-ul pluginului de tip resurs\u0103 REST"
                },
                {
                    "name": "plugin-label",
                    "description": "Eticheta pluginului de tip resurs\u0103 REST"
                },
                {
                    "name": "plugin-url",
                    "description": "URL-ul pluginului de tip resurs\u0103 REST"
                },
                {
                    "name": "plugin-states",
                    "description": "St\u0103rile pluginului de tip resurs\u0103 REST"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a rest resource plugin using GET specifying the module name, the class, the plugin id, its label, the target url and the request type",
                    "execution": "drupal generate:plugin:rest:resource  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultRestResource\"  \\\n  --plugin-id=\"default_rest_resource\"  \\\n  --plugin-label=\"Default rest resource\"  \\\n  --plugin-url=\"http:\/\/rest.resources.example.com\"  \\\n  --plugin-states='GET'\n"
                }
            ],
            "aliases": [
                "gprr"
            ],
            "key": "generate.plugin.rest.resource",
            "dashed": "generate-plugin-rest-resource",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rules:action",
            "description": "commands.generate.plugin.rules.action.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.rules.action.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.rules.action.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.rules.action.options.plugin-id"
                },
                {
                    "name": "category",
                    "description": "commands.generate.plugin.rules.action.options.category"
                },
                {
                    "name": "context",
                    "description": "commands.generate.plugin.rules.action.options.context"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpra"
            ],
            "key": "generate.plugin.rules.action",
            "dashed": "generate-plugin-rules-action",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rules:dataprocessor",
            "description": "commands.generate.plugin.rules.dataprocessor.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.plugin-id"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gprd"
            ],
            "key": "generate.plugin.rules.dataprocessor",
            "dashed": "generate-plugin-rules-dataprocessor",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:skeleton",
            "description": "Generate an implementation of a skeleton plugin for those plugins Drupal Console do not have a specific generator",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "plugin-id",
                    "description": "The Plugin Id."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin skeleton specifying module name, the plugin id and the class",
                    "execution": "drupal generate:plugin:skeleton  \\\n  --module=\"modulename\"  \\\n  --plugin-id=\"link_relation_type\"  \\\n  --class=\"DefaultLinkRelationType\"\n"
                }
            ],
            "aliases": [
                "gps"
            ],
            "key": "generate.plugin.skeleton",
            "dashed": "generate-plugin-skeleton",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:type:annotation",
            "description": "Genereaz\u0103 un tip de plugin cu descoperire de adnota\u0163ii",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei tipului de plugin."
                },
                {
                    "name": "machine-name",
                    "description": "commands.generate.plugin.type.annotation.options.plugin-id"
                },
                {
                    "name": "label",
                    "description": "Eticheta tipului de plugin."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with annotation discovery specifying module name, class name, machine name and label",
                    "execution": "drupal generate:plugin:type:annotation  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --machine-name=\"example_plugin\"  \\\n  --label=\"Example plugin\"\n"
                }
            ],
            "aliases": [
                "gpta"
            ],
            "key": "generate.plugin.type.annotation",
            "dashed": "generate-plugin-type-annotation",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:type:yaml",
            "description": "Genereaz\u0103 un tip de plugin cu descoperire de YAML.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "Numele clasei tipului de plugin."
                },
                {
                    "name": "plugin-name",
                    "description": "Numele ma\u015fin\u0103 al tipului de plugin"
                },
                {
                    "name": "plugin-file-name",
                    "description": "Numele fi\u015fierului tipului de plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with Yaml discovery specifying module name, class name, plugin name and plugin file name",
                    "execution": "drupal generate:plugin:type:yaml  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --plugin-name=\"example_plugin\"  \\\n  --plugin-file-name=\"example.plugin\"\n"
                }
            ],
            "aliases": [
                "gpty"
            ],
            "key": "generate.plugin.type.yaml",
            "dashed": "generate-plugin-type-yaml",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:validationconstraint",
            "description": "commands.generate.plugin.validationconstraint.description",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.validationconstraint.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.validationconstraint.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.validationconstraint.options.plugin-id"
                },
                {
                    "name": "hook",
                    "description": "commands.generate.plugin.validationconstraint.options.hook"
                },
                {
                    "name": "field-id",
                    "description": "commands.generate.plugin.validationconstraint.options.field-id"
                },
                {
                    "name": "bundle",
                    "description": "commands.generate.plugin.validationconstraint.options.bundle"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpvc"
            ],
            "key": "generate.plugin.validationconstraint",
            "dashed": "generate-plugin-validationconstraint",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:views:field",
            "description": "Genereaz\u0103 o extensie custom de views field.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "fields",
                    "description": "commands.generate.plugin.views.field.options.fields"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a custom view field plugin specifying the module name, the class, a title and its description",
                    "execution": "drupal generate:plugin:views:field  \\\n  --module=\"modulename\"  \\\n  --class=\"CustomViewsField\"  \\\n  --title=\"Custom views field\"  \\\n  --description=\"My awesome custom views field plugin.\"\n"
                }
            ],
            "aliases": [
                "gpvf"
            ],
            "key": "generate.plugin.views.field",
            "dashed": "generate-plugin-views-field",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:post:update",
            "description": "Generate an implementation of hook_post_update_NAME()",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "post-update-name",
                    "description": "Post Update Name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an implementation of post update hook specifying the module name and the post update name",
                    "execution": "drupal generate:post:update  \\\n  --module=\"modulename\"  \\\n  --post-update-name=\"PostUpdateName\"\n"
                }
            ],
            "aliases": [
                "gpu"
            ],
            "key": "generate.post.update",
            "dashed": "generate-post-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:profile",
            "description": "Generate a profile.",
            "options": [
                {
                    "name": "profile",
                    "description": "The profile name"
                },
                {
                    "name": "machine-name",
                    "description": "The machine name (lowercase and underscore only)"
                },
                {
                    "name": "profile-path",
                    "description": "commands.generate.profile.options.profile-path"
                },
                {
                    "name": "description",
                    "description": "Profile description"
                },
                {
                    "name": "core",
                    "description": "Core version"
                },
                {
                    "name": "dependencies",
                    "description": "Module dependencies separated by commas (i.e. context, panels)"
                },
                {
                    "name": "themes",
                    "description": "commands.generate.profile.options.themes"
                },
                {
                    "name": "distribution",
                    "description": "The distribution name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a profile specifying the profile name, the machine name, a description, the core and its module dependencies",
                    "execution": "drupal generate:profile  \\\n  --profile=\"NewProfileName\"  \\\n  --machine-name=\"newprofilename\"  \\\n  --description=\"My Useful Profile\"  \\\n  --core=\"8.x\"  \\\n  --dependencies=\"modulename\"\n"
                }
            ],
            "aliases": [
                "gpr"
            ],
            "key": "generate.profile",
            "dashed": "generate-profile",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:routesubscriber",
            "description": "Genereaz\u0103 un RouteSubscriber",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "name",
                    "description": "Numele serviciului"
                },
                {
                    "name": "class",
                    "description": "Numele clasei"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a route subscriber specifying the module name, the route name and its class",
                    "execution": "drupal generate:routesubscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.route_subscriber\"  \\\n  --class=\"RouteSubscriber\"\n"
                }
            ],
            "aliases": [
                "gr"
            ],
            "key": "generate.routesubscriber",
            "dashed": "generate-routesubscriber",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:service",
            "description": "Genereaza un serviciu",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "name",
                    "description": "Numele serviciului"
                },
                {
                    "name": "class",
                    "description": "Numele Clasei"
                },
                {
                    "name": "interface",
                    "description": "Interfa\u0163a"
                },
                {
                    "name": "interface-name",
                    "description": "commands.generate.service.options.interface-name"
                },
                {
                    "name": "logger-channel",
                    "description": "commands.generate.service.options.logger-channel"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                },
                {
                    "name": "path-service",
                    "description": "commands.generate.service.options.path-service"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a services without interface specifying the module name, the service name, the class and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\""
                },
                {
                    "description": "Generate a services with interface specifying the module name, the service name, the class, the interface name and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --interface  \\\n  --interface-name=\"InterfaceName\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\"\n"
                }
            ],
            "aliases": [
                "gs"
            ],
            "key": "generate.service",
            "dashed": "generate-service",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:site:alias",
            "description": "commands.generate.site.alias.description",
            "options": [
                {
                    "name": "site",
                    "description": "commands.generate.site.alias.options.site"
                },
                {
                    "name": "name",
                    "description": "commands.generate.site.alias.options.name"
                },
                {
                    "name": "environment",
                    "description": "commands.generate.site.alias.options.environment"
                },
                {
                    "name": "type",
                    "description": "commands.generate.site.alias.options.type"
                },
                {
                    "name": "composer-root",
                    "description": "commands.generate.site.alias.options.composer-root"
                },
                {
                    "name": "site-uri",
                    "description": "commands.generate.site.alias.options.site-uri"
                },
                {
                    "name": "host",
                    "description": "commands.generate.site.alias.options.host"
                },
                {
                    "name": "user",
                    "description": "commands.generate.site.alias.options.user"
                },
                {
                    "name": "port",
                    "description": "commands.generate.site.alias.options.port"
                },
                {
                    "name": "drupal-console-binary",
                    "description": "commands.generate.site.alias.options.drupal-console-binary"
                },
                {
                    "name": "extra-options",
                    "description": "commands.generate.site.alias.options.extra-options"
                },
                {
                    "name": "directory",
                    "description": "commands.generate.site.alias.options.directory"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gsa"
            ],
            "key": "generate.site.alias",
            "dashed": "generate-site-alias",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:theme",
            "description": "Genereaz\u0103 o tem\u0103.",
            "options": [
                {
                    "name": "theme",
                    "description": "Numele temei"
                },
                {
                    "name": "machine-name",
                    "description": "Numele ma\u015fin\u0103 (doar caracere minuscule \u015fi caracterul \"_\" sunt suportate)"
                },
                {
                    "name": "theme-path",
                    "description": "Calea spre tem\u0103"
                },
                {
                    "name": "description",
                    "description": "Descrierea temei"
                },
                {
                    "name": "core",
                    "description": "Versiunea nucleului"
                },
                {
                    "name": "package",
                    "description": "Pachetul"
                },
                {
                    "name": "global-library",
                    "description": "Numele librariei de stilizare global\u0103"
                },
                {
                    "name": "libraries",
                    "description": "commands.generate.theme.options.libraries"
                },
                {
                    "name": "base-theme",
                    "description": "Tema de baz\u0103 (ex.: classy, stable)"
                },
                {
                    "name": "regions",
                    "description": "Regiuni"
                },
                {
                    "name": "breakpoints",
                    "description": "Puncte de \u00eentrerupere"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a theme without region and without breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name and the global library",
                    "execution": "drupal generate:theme  \\\n  --theme=\"AnotherTheme\"  \\\n  --machine-name=\"anothertheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"PackageName\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"false\""
                },
                {
                    "description": "Generate a theme base on stable theme with two region defined and one breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name, a global library, its base, the regions and the breakpoint",
                    "execution": "drupal generate:theme  \\\n  --theme=\"MyTheme\"  \\\n  --machine-name=\"mytheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"MyThemePackage\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"stable\"  \\\n  --regions='\"region_name\":\"Content\", \"region_machine_name\":\"content\"'  \\\n  --regions='\"region_name\":\"Panel\", \"region_machine_name\":\"panel\"'  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'\n"
                }
            ],
            "aliases": [
                "gt"
            ],
            "key": "generate.theme",
            "dashed": "generate-theme",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:twig:extension",
            "description": "Generate a Twig extension.",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "name",
                    "description": "Twig Extension name"
                },
                {
                    "name": "class",
                    "description": "Class name"
                },
                {
                    "name": "services",
                    "description": "\u00cencarc\u0103 serviciile din container."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a twig extension specifying the module name, the extension name and its class",
                    "execution": "drupal generate:twig:extension  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.twig.extension\"  \\\n  --class=\"DefaultTwigExtension\"\n"
                }
            ],
            "aliases": [
                "gte"
            ],
            "key": "generate.twig.extension",
            "dashed": "generate-twig-extension",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:update",
            "description": "Generate an implementation of hook_update_N()",
            "options": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "update-n",
                    "description": "Update Number"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an update N hook implementation specifying the module name and the N value",
                    "execution": "drupal generate:update  \\\n  --module=\"modulename\"  \\\n  --update-n=\"8001\"\n"
                }
            ],
            "aliases": [
                "gu"
            ],
            "key": "generate.update",
            "dashed": "generate-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "image:styles:flush",
            "description": "Execute flush function by image style or execute all flush images styles",
            "options": [],
            "arguments": [
                {
                    "name": "styles",
                    "description": "The Images Styles name."
                }
            ],
            "examples": [
                {
                    "description": "Flush large image style",
                    "execution": "drupal image:styles:flush  large"
                },
                {
                    "description": "Flush thumbnail image style",
                    "execution": "drupal image:styles:flush  thumbnail\n"
                }
            ],
            "aliases": [
                "isf"
            ],
            "key": "image.styles.flush",
            "dashed": "image-styles-flush",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:dependency:install",
            "description": "Install dependencies module in the application",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be enabled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Install the dependencies of the specfied module",
                    "execution": "drupal module:dependency:install  modulename\n"
                }
            ],
            "aliases": [
                "modi"
            ],
            "key": "module.dependency.install",
            "dashed": "module-dependency-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:download",
            "description": "Descarc\u0103 modulul sau modulele pentru aplica\u021bie",
            "options": [
                {
                    "name": "path",
                    "description": "The path of the contrib project"
                },
                {
                    "name": "latest",
                    "description": "Default to download most recent version"
                },
                {
                    "name": "composer",
                    "description": "Download the module using Composer"
                },
                {
                    "name": "unstable",
                    "description": "commands.module.download.options.unstable"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be enabled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Download module specifying module name and its path",
                    "execution": "drupal module:download  modulename  \\\n  --path=\"modules\/contrib\"\n"
                }
            ],
            "aliases": [
                "mod"
            ],
            "key": "module.download",
            "dashed": "module-download",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:install",
            "description": "Instaleaza Module",
            "options": [
                {
                    "name": "latest",
                    "description": "Default to download most recent version"
                },
                {
                    "name": "composer",
                    "description": "Download the module using Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be enabled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Install module specifying the module name",
                    "execution": "drupal module:install  modulename\n"
                }
            ],
            "aliases": [
                "moi"
            ],
            "key": "module.install",
            "dashed": "module-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:path",
            "description": "Returns the relative path to the module (or absolute path)",
            "options": [
                {
                    "name": "absolute",
                    "description": "Return module absolute path"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "The Module name (machine name)"
                }
            ],
            "examples": [
                {
                    "description": "Get the relative path of the module specifying the module name",
                    "execution": "drupal module:path  modulename\n"
                }
            ],
            "aliases": [
                "mop"
            ],
            "key": "module.path",
            "dashed": "module-path",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:uninstall",
            "description": "Dezinstaleaz\u0103 un modul sau mai multe din aplica\u0163ie.",
            "options": [
                {
                    "name": "force",
                    "description": "Do you want to ignore dependencies and forcefully uninstall the module?"
                },
                {
                    "name": "composer",
                    "description": "Uninstalls the module using Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "commands.module.uninstall.arguments.module"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall the module specifying the module name",
                    "execution": "drupal module:uninstall  modulename\n"
                }
            ],
            "aliases": [
                "mou"
            ],
            "key": "module.uninstall",
            "dashed": "module-uninstall",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:update",
            "description": "Update core, module or modules in the application",
            "options": [
                {
                    "name": "composer",
                    "description": "Update the module using Composer"
                },
                {
                    "name": "simulate",
                    "description": "Simulate the update process with Composer"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be updated should be separated by a space. Leave empty for updating the core and all your modules managed by Composer."
                }
            ],
            "examples": [
                {
                    "description": "Update module specifying module name and composer parameter",
                    "execution": "drupal module:update  modulename  \\\n  --composer\n"
                }
            ],
            "aliases": [
                "moup"
            ],
            "key": "module.update",
            "dashed": "module-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "multisite:new",
            "description": "Sets up the files for a new multisite install.",
            "options": [
                {
                    "name": "copy-default",
                    "description": "Copies existing site from the default install."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "Name of directory under 'sites' which should be created."
                },
                {
                    "name": "uri",
                    "description": "Site URI to add to sites.php."
                }
            ],
            "examples": [
                {
                    "description": "Set up files for a multisite install specifying destination path and uri",
                    "execution": "drupal multisite:new  vendor\/newsite http:\/\/mysite.example.com\n"
                }
            ],
            "aliases": [
                "mun",
                "sn"
            ],
            "key": "multisite.new",
            "dashed": "multisite-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "multisite:update",
            "description": "commands.multisite.update.description",
            "options": [
                {
                    "name": "directory",
                    "description": "commands.multisite.update.options.directory"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "muu"
            ],
            "key": "multisite.update",
            "dashed": "multisite-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "node:access:rebuild",
            "description": "Rebuild node access permissions. Rebuilding will remove all privileges to content and replace them with permissions based on the current modules and settings.",
            "options": [
                {
                    "name": "batch",
                    "description": "Process in batch mode."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Rebuild node access permissions",
                    "execution": "drupal node:access:rebuild --batch"
                }
            ],
            "aliases": [
                "nar"
            ],
            "key": "node.access.rebuild",
            "dashed": "node-access-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "queue:run",
            "description": "Process the selected queue.",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Queue name."
                }
            ],
            "examples": [],
            "aliases": [
                "qr"
            ],
            "key": "queue.run",
            "dashed": "queue-run",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "quick:start",
            "description": "Download, install and serve a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "quick.start",
            "dashed": "quick-start",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "role:delete",
            "description": "commands.role.delete.description",
            "options": [],
            "arguments": [
                {
                    "name": "roles",
                    "description": "commands.role.delete.argument.roles"
                }
            ],
            "examples": [],
            "aliases": [
                "rd"
            ],
            "key": "role.delete",
            "dashed": "role-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "role:new",
            "description": "commands.role.new.description",
            "options": [],
            "arguments": [
                {
                    "name": "rolename",
                    "description": "commands.role.new.argument.rolename"
                },
                {
                    "name": "machine-name",
                    "description": "commands.role.new.argument.machine-name"
                }
            ],
            "examples": [],
            "aliases": [
                "rn"
            ],
            "key": "role.new",
            "dashed": "role-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "router:rebuild",
            "description": "Reconstruie\u015fte o rut\u0103",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Rebuild routes",
                    "execution": "drupal router:rebuild"
                }
            ],
            "aliases": [
                "rr",
                "ror"
            ],
            "key": "router.rebuild",
            "dashed": "router-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "settings:set",
            "description": "Change a specific setting value in DrupalConsole config file",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Setting name in YAML flatten format to set a value in Drupal Console config file"
                },
                {
                    "name": "value",
                    "description": "Setting value to set in Drupal Console config file"
                }
            ],
            "examples": [
                {
                    "description": "Set application language setting value to \"es\"",
                    "execution": "drupal settings:set  application.language es"
                }
            ],
            "aliases": [],
            "key": "settings.set",
            "dashed": "settings-set",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:import:local",
            "description": "Import\/Configure an existing local Drupal project",
            "options": [
                {
                    "name": "environment",
                    "description": "Name of the environment that is going to be imported"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Name that will be used to generate the site config"
                },
                {
                    "name": "directory",
                    "description": "Existing Drupal root directory"
                }
            ],
            "examples": [
                {
                    "description": "Import local drupal project specifying the site name and the path",
                    "execution": "drupal site:import:local  SiteName \/private\/var\/www\/vhost\/anexusit\/drupal8.dev\/web"
                }
            ],
            "aliases": [
                "sil"
            ],
            "key": "site.import.local",
            "dashed": "site-import-local",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:install",
            "description": "Instaleaz\u0103 un proiect Drupal",
            "options": [
                {
                    "name": "langcode",
                    "description": "Limba proiectului"
                },
                {
                    "name": "db-type",
                    "description": "Tipul bazei de date care va fi folosit la instalarea proiectului"
                },
                {
                    "name": "db-file",
                    "description": "Drupal Database file to be used in install"
                },
                {
                    "name": "db-host",
                    "description": "Gazda bazei de date"
                },
                {
                    "name": "db-name",
                    "description": "Numele bazei de date"
                },
                {
                    "name": "db-user",
                    "description": "Utilizatorul bazei de date"
                },
                {
                    "name": "db-pass",
                    "description": "Parola bazei de date"
                },
                {
                    "name": "db-prefix",
                    "description": "Prefixul bazei de date"
                },
                {
                    "name": "db-port",
                    "description": "Portul bazei de date"
                },
                {
                    "name": "site-name",
                    "description": "Numele sitului drupal"
                },
                {
                    "name": "site-mail",
                    "description": "Adresa de email a sitului"
                },
                {
                    "name": "account-name",
                    "description": "Numele de utilizator al administratorului sitului"
                },
                {
                    "name": "account-mail",
                    "description": "Adresa de email a administratorului sitului"
                },
                {
                    "name": "account-pass",
                    "description": "Parola administratorului sitului"
                },
                {
                    "name": "force",
                    "description": "commands.site.install.arguments.force"
                }
            ],
            "arguments": [
                {
                    "name": "profile",
                    "description": "Profilul Drupal care va fi instalat"
                },
                {
                    "name": "db-url",
                    "description": "commands.site.install.arguments.db-url"
                }
            ],
            "examples": [
                {
                    "description": "Install a drupal project specifying installation type, language code, database configuration, site name, site email and admin credential settings",
                    "execution": "drupal site:install  standard  \\\n  --langcode=\"en\"  \\\n  --db-type=\"mysql\"  \\\n  --db-host=\"127.0.0.1\"  \\\n  --db-name=\"drupal8\"  \\\n  --db-user=\"u53rn4m3\"  \\\n  --db-pass=\"dbp455\"  \\\n  --db-port=\"3306\"  \\\n  --site-name=\"Drupal 8\"  \\\n  --site-mail=\"admin@example.com\"  \\\n  --account-name=\"admin\"  \\\n  --account-mail=\"admin@example.com\"  \\\n  --account-pass=\"p455w0rd\"\n"
                }
            ],
            "aliases": [
                "si"
            ],
            "key": "site.install",
            "dashed": "site-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:maintenance",
            "description": "Activeaz\u0103 modul de mentenan\u0163\u0103",
            "options": [],
            "arguments": [
                {
                    "name": "mode",
                    "description": "Modul de mentenan\u0163\u0103 al sait-ului"
                }
            ],
            "examples": [
                {
                    "description": "Switch on maintenance",
                    "execution": "drupal site:maintenance  on"
                },
                {
                    "description": "Switch off maintenance",
                    "execution": "drupal site:maintenance  off\n"
                }
            ],
            "aliases": [
                "sma"
            ],
            "key": "site.maintenance",
            "dashed": "site-maintenance",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:mode",
            "description": "Schimb\u0103 configurarile de performan\u0163\u0103 ale sistemului",
            "options": [],
            "arguments": [
                {
                    "name": "environment",
                    "description": "Numele mediului"
                }
            ],
            "examples": [
                {
                    "description": "Switch system to prod",
                    "execution": "drupal site:mode  prod"
                },
                {
                    "description": "Switch system to dev",
                    "execution": "drupal site:mode  dev\n"
                }
            ],
            "aliases": [
                "smo"
            ],
            "key": "site.mode",
            "dashed": "site-mode",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:new",
            "description": "Download a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "site.new",
            "dashed": "site-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:statistics",
            "description": "Show the current statistics of website.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "sst"
            ],
            "key": "site.statistics",
            "dashed": "site-statistics",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:status",
            "description": "Vizualizeaz\u0103 statutul de instalare (Drupal Installation status)",
            "options": [
                {
                    "name": "format",
                    "description": "commands.site.status.options.format"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Get drupal installation status specifying the output format as table",
                    "execution": "drupal site:status  \\\n  --format=\"table\"\n"
                }
            ],
            "aliases": [
                "ss",
                "st"
            ],
            "key": "site.status",
            "dashed": "site-status",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "state:delete",
            "description": "Delete State",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "State name."
                }
            ],
            "examples": [
                {
                    "description": "Delete state specifying the state name",
                    "execution": "drupal state:delete  comment.maintain_entity_statistics\n"
                }
            ],
            "aliases": [
                "std"
            ],
            "key": "state.delete",
            "dashed": "state-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "state:override",
            "description": "Override a State key.",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "The State key to override."
                },
                {
                    "name": "value",
                    "description": "The State value to set."
                }
            ],
            "examples": [
                {
                    "description": "Override state value specifying the state name and the new value",
                    "execution": "drupal state:override  comment.node_comment_statistics_scale \"!!float 1\"\n"
                }
            ],
            "aliases": [
                "sto"
            ],
            "key": "state.override",
            "dashed": "state-override",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "taxonomy:term:delete",
            "description": "Delete taxonomy terms from a vocabulary",
            "options": [],
            "arguments": [
                {
                    "name": "vid",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Delete all terms of the \"tags\" vocabulary",
                    "execution": "drupal taxonomy:term:delete  tags\n"
                }
            ],
            "aliases": [
                "ttd"
            ],
            "key": "taxonomy.term.delete",
            "dashed": "taxonomy-term-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:download",
            "description": "Descarc\u0103 tema \u00een aplica\u021bie",
            "options": [
                {
                    "name": "composer",
                    "description": "Use --composer option for manage the theme download with Composer"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "the Theme name"
                },
                {
                    "name": "version",
                    "description": "Theme version i.e 1.x-dev"
                }
            ],
            "examples": [
                {
                    "description": "Download theme specifying name and version",
                    "execution": "drupal theme:download  Alina 7.x-1.2\n"
                }
            ],
            "aliases": [
                "thd"
            ],
            "key": "theme.download",
            "dashed": "theme-download",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:install",
            "description": "Instaleaz\u0103 tema sau temele \u00een aplica\u021bie",
            "options": [
                {
                    "name": "set-default",
                    "description": "Seta\u021bi tema ca \u0219i tem\u0103 implicit\u0103"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "tema sau temele ce urmeaz\u0103 a fi instalate trebuie separate printr-o virgul\u0103"
                }
            ],
            "examples": [
                {
                    "description": "Install theme specifying the name",
                    "execution": "drupal theme:install  mytheme\n"
                }
            ],
            "aliases": [
                "thi"
            ],
            "key": "theme.install",
            "dashed": "theme-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:path",
            "description": "Returns the relative path to the theme (or absolute path)",
            "options": [
                {
                    "name": "absolute",
                    "description": "Return theme absolute path"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Theme name"
                }
            ],
            "examples": [
                {
                    "description": "Get the path of mytheme",
                    "execution": "drupal theme:path  mytheme\n"
                }
            ],
            "aliases": [
                "thp"
            ],
            "key": "theme.path",
            "dashed": "theme-path",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:uninstall",
            "description": "Dezinstaleaz\u0103 tema sau temele din aplica\u021bie",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "tema sau temele ce urmeaz\u0103 a fi dezinstalate trebuie s\u0103 fie separate printr-o virgul\u0103"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall theme specifying the name",
                    "execution": "drupal theme:uninstall  mytheme\n"
                }
            ],
            "aliases": [
                "thu"
            ],
            "key": "theme.uninstall",
            "dashed": "theme-uninstall",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "update:entities",
            "description": "Applying Entity Updates",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Update entities",
                    "execution": "drupal update:entities\n"
                }
            ],
            "aliases": [
                "upe"
            ],
            "key": "update.entities",
            "dashed": "update-entities",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "update:execute",
            "description": "Execut\u0103 o func\u0163ie specific\u0103 Update N dintr-un modul sau execut\u0103-le pe toate",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Numele Modulului."
                },
                {
                    "name": "update-n",
                    "description": "Func\u0163ia specific\u0103 Update N care va fi executat\u0103"
                }
            ],
            "examples": [
                {
                    "description": "Update all entities",
                    "execution": "drupal update:execute\n"
                }
            ],
            "aliases": [
                "upex",
                "updb"
            ],
            "key": "update.execute",
            "dashed": "update-execute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:create",
            "description": "Create users for the application",
            "options": [
                {
                    "name": "roles",
                    "description": "User roles"
                },
                {
                    "name": "email",
                    "description": "User email"
                },
                {
                    "name": "status",
                    "description": "User status"
                }
            ],
            "arguments": [
                {
                    "name": "username",
                    "description": "User name to be created"
                },
                {
                    "name": "password",
                    "description": "User password"
                }
            ],
            "examples": [
                {
                    "description": "Create user specifying username, password, role, email and status",
                    "execution": "drupal user:create  john p455w0rd  \\\n  --roles='authenticated'  \\\n  --email=\"john@anexusit.com\"  \\\n  --status=\"1\""
                },
                {
                    "description": "Create admin user specifying username, password, role, email and status",
                    "execution": "drupal user:create  doe p455w0rd  \\\n  --roles='administrator'  \\\n  --email=\"doe@anexusit.com\"  \\\n  --status=\"1\"\n"
                }
            ],
            "aliases": [
                "uc"
            ],
            "key": "user.create",
            "dashed": "user-create",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:delete",
            "description": "Delete users for the application",
            "options": [
                {
                    "name": "user",
                    "description": "commands.user.delete.options.user"
                },
                {
                    "name": "roles",
                    "description": "Roles associated to users to be deleted"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Delete user specifying the id and the user role",
                    "execution": "drupal user:delete  \\\n  --user-id=\"2\"\n  --roles='authenticated'"
                },
                {
                    "description": "Delete user specifying its id",
                    "execution": "drupal user:delete  \\\n  --user-id=\"3\"\n"
                }
            ],
            "aliases": [
                "ud"
            ],
            "key": "user.delete",
            "dashed": "user-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:login:clear:attempts",
            "description": "\u015eterge autentific\u0103rile e\u015fuate pentru un cont.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.login.clear.attempts.arguments.user"
                }
            ],
            "examples": [],
            "aliases": [
                "ulca",
                "uslca"
            ],
            "key": "user.login.clear.attempts",
            "dashed": "user-login-clear-attempts",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:login:url",
            "description": "Returneaza un URL de logare care poate fi folosit o singur\u0103 dat\u0103.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.login.url.options.user"
                }
            ],
            "examples": [
                {
                    "description": "Get one time login url for user id 1",
                    "execution": "drupal user:login:url  1\n"
                }
            ],
            "aliases": [
                "ulu",
                "usli",
                "uli"
            ],
            "key": "user.login.url",
            "dashed": "user-login-url",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:password:hash",
            "description": "Genereaz\u0103 un hash dintr-o parol\u0103 de tip text.",
            "options": [],
            "arguments": [
                {
                    "name": "password",
                    "description": "Parola\/Parole in format text"
                }
            ],
            "examples": [
                {
                    "description": "Get hash of the word \"p455w0rd\"",
                    "execution": "drupal user:password:hash  p455w0rd\n"
                }
            ],
            "aliases": [
                "uph",
                "usph"
            ],
            "key": "user.password.hash",
            "dashed": "user-password-hash",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:password:reset",
            "description": "Reseteaz\u0103 parola pentru un utilizator.",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.password.reset.options.user"
                },
                {
                    "name": "password",
                    "description": "Parola sub form\u0103 de text."
                }
            ],
            "examples": [
                {
                    "description": "Update password specifying the user id and the new password",
                    "execution": "drupal user:password:reset  2 p455w0rd\n"
                }
            ],
            "aliases": [
                "upr",
                "upsr"
            ],
            "key": "user.password.reset",
            "dashed": "user-password-reset",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:role",
            "description": "Adds\/removes a role for a given user",
            "options": [],
            "arguments": [
                {
                    "name": "operation",
                    "description": "Add or remove"
                },
                {
                    "name": "user",
                    "description": "The affected user (only one)"
                },
                {
                    "name": "role",
                    "description": "Roles to add or remove. Please provide the machine name (only one)"
                }
            ],
            "examples": [
                {
                    "description": "Add administrator role to the user admin specifying the username and the role",
                    "execution": "drupal user:role  add admin administrator"
                },
                {
                    "description": "Remove administrator role from the user admin specifying the username and the role",
                    "execution": "drupal user:role  remove admin administrator\n"
                }
            ],
            "aliases": [
                "ur"
            ],
            "key": "user.role",
            "dashed": "user-role",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:unblock",
            "description": "commands.user.unblock.description",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.unblock.options.user"
                }
            ],
            "examples": [],
            "aliases": [
                "uu"
            ],
            "key": "user.unblock",
            "dashed": "user-unblock",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "version:new",
            "description": "Create new Drupal Console version",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "version.new",
            "dashed": "version-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "version:tag:release",
            "description": "Create new Drupal Console tag and release",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "version.tag.release",
            "dashed": "version-tag-release",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "views:disable",
            "description": "Dezactiveaz\u0103 un View",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "ID-ul view-ului"
                }
            ],
            "examples": [
                {
                    "description": "Disable content view",
                    "execution": "drupal views:disable  content\n"
                },
                {
                    "description": "Disable frontpage view",
                    "execution": "drupal views:disable  frontpage\n"
                }
            ],
            "aliases": [
                "vd",
                "vdi"
            ],
            "key": "views.disable",
            "dashed": "views-disable",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "views:enable",
            "description": "Activeaz\u0103 un View",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "ID-ul view-ului"
                }
            ],
            "examples": [
                {
                    "description": "Enable content view",
                    "execution": "drupal views:enable  content\n"
                },
                {
                    "description": "Enable frontpage view",
                    "execution": "drupal views:enable  frontpage\n"
                }
            ],
            "aliases": [
                "ve"
            ],
            "key": "views.enable",
            "dashed": "views-enable",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        }
    ]
}