{
    "language": "ja",
    "type": "commands",
    "commands": [
        {
            "name": "about",
            "description": "Drupal Console\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066\u306e\u57fa\u672c\u60c5\u5831\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "about",
            "dashed": "about",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "chain",
            "description": "\u9023\u7d9a\u3057\u305f\u8907\u6570\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c",
            "options": [
                {
                    "name": "file",
                    "description": "\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal chain \\\n  --file=\"\/path\/to\/file\/chain-file.yml\"\n"
                }
            ],
            "aliases": [],
            "key": "chain",
            "dashed": "chain",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "check",
            "description": "\u52d5\u4f5c\u74b0\u5883\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "check",
            "dashed": "check",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "composerize",
            "description": "commands.composerize.description",
            "options": [
                {
                    "name": "show-packages",
                    "description": "commands.composerize.options.show-packages"
                },
                {
                    "name": "include-version",
                    "description": "commands.composerize.options.include-version"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "composerize",
            "dashed": "composerize",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "exec",
            "description": "\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b",
            "options": [
                {
                    "name": "working-directory",
                    "description": "The current working directory."
                }
            ],
            "arguments": [
                {
                    "name": "bin",
                    "description": "\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u540d"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "exec",
            "dashed": "exec",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "help",
            "description": "\u30b3\u30de\u30f3\u30c9\u306e\u30d8\u30eb\u30d7\u3092\u8868\u793a\u3059\u308b",
            "options": [
                {
                    "name": "xml",
                    "description": "XML\u3068\u3057\u3066\u51fa\u529b\u3059\u308b"
                },
                {
                    "name": "raw",
                    "description": "Raw\u30ec\u30d9\u30eb\u306e\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u51fa\u529b\u3059\u308b"
                },
                {
                    "name": "format",
                    "description": "\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 (txt, xml, json, or md)"
                }
            ],
            "arguments": [
                {
                    "name": "command_name",
                    "description": "The command name"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "help",
            "dashed": "help",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "init",
            "description": "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30e6\u30fc\u30b6\u30fc\u306e\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30b3\u30d4\u30fc\u3059\u308b",
            "options": [
                {
                    "name": "destination",
                    "description": "Destination directory to copy files"
                },
                {
                    "name": "site",
                    "description": "commands.init.options.site"
                },
                {
                    "name": "override",
                    "description": "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4e0a\u66f8\u304d\u3059\u308b"
                },
                {
                    "name": "autocomplete",
                    "description": "Autocomplete tool files flag."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "init",
            "dashed": "init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "list",
            "description": "\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30de\u30f3\u30c9\u4e00\u89a7\u3092\u8868\u793a\u3059\u308b",
            "options": [
                {
                    "name": "xml",
                    "description": "XML\u3068\u3057\u3066\u51fa\u529b\u3059\u308b"
                },
                {
                    "name": "raw",
                    "description": "Raw\u30ec\u30d9\u30eb\u306e\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u51fa\u529b\u3059\u308b"
                },
                {
                    "name": "format",
                    "description": "\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 (txt, xml, json, or md)"
                }
            ],
            "arguments": [
                {
                    "name": "namespace",
                    "description": "\u540d\u524d\u7a7a\u9593"
                }
            ],
            "examples": [],
            "aliases": [],
            "key": "list",
            "dashed": "list",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "shell",
            "description": "Open a shell providing an interactive REPL (Read\u2013Eval\u2013Print-Loop).",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "shell",
            "dashed": "shell",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "server",
            "description": "PHP\u306ebuilt-in web server\u3067Drupal\u3092\u8d77\u52d5\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "address",
                    "description": "IP\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u756a\u53f7"
                }
            ],
            "examples": [
                {
                    "description": "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5f15\u6570 \"127.0.0.1:8088\" \u3067\u8d77\u52d5\u3059\u308b",
                    "execution": "drupal server"
                },
                {
                    "description": "\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3092\u4f7f\u3046\u305f\u3081\u306b\u30a2\u30c9\u30ec\u30b9\u5f15\u6570\u3092\u6e21\u3059",
                    "execution": "drupal server 127.0.0.1:8089"
                },
                {
                    "description": "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5f15\u6570\u3067\u8d77\u52d5\u3057\u3001--root \u30aa\u30d7\u30b7\u30e7\u30f3\u3067Drupal\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3002",
                    "execution": "drupal --root=\/var\/www\/drupal8.dev server"
                }
            ],
            "aliases": [
                "serve",
                "rs"
            ],
            "key": "server",
            "dashed": "server",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "snippet",
            "description": "commands.snippet.description",
            "options": [
                {
                    "name": "file",
                    "description": "commands.snippet.options.file"
                },
                {
                    "name": "code",
                    "description": "commands.snippet.options.code"
                },
                {
                    "name": "show-code",
                    "description": "commands.snippet.options.show-code"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "snippet",
            "dashed": "snippet",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cache:rebuild",
            "description": "\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30af\u30ea\u30a2\u3068\u518d\u751f\u6210",
            "options": [],
            "arguments": [
                {
                    "name": "cache",
                    "description": "\u30af\u30ea\u30a2\u3059\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u540d"
                }
            ],
            "examples": [
                {
                    "description": "\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u518d\u751f\u6210",
                    "execution": "drupal cr all"
                },
                {
                    "description": "discovery \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u518d\u751f\u6210",
                    "execution": "drupal cr discovery"
                }
            ],
            "aliases": [
                "cr",
                "cc"
            ],
            "key": "cache.rebuild",
            "dashed": "cache-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cache:tag:invalidate",
            "description": "commands.cache.tag.invalidate.description",
            "options": [],
            "arguments": [
                {
                    "name": "tag",
                    "description": "commands.cache.tag.invalidate.options.tag"
                }
            ],
            "examples": [],
            "aliases": [
                "cti"
            ],
            "key": "cache.tag.invalidate",
            "dashed": "cache-tag-invalidate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:delete",
            "description": "\u8a2d\u5b9a\u3092\u524a\u9664\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "\u8a2d\u5b9a\u306e\u30bf\u30a4\u30d7"
                },
                {
                    "name": "name",
                    "description": "\u8a2d\u5b9a\u306e\u540d\u524d"
                }
            ],
            "examples": [
                {
                    "description": "Provide a config type and a config name",
                    "execution": "drupal config:delete active all"
                }
            ],
            "aliases": [
                "cd"
            ],
            "key": "config.delete",
            "dashed": "config-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:diff",
            "description": "Ouput configuration items that are different in active configuration compared with a directory.",
            "options": [
                {
                    "name": "reverse",
                    "description": "See the changes in reverse (i.e diff a directory to the active configuration)."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "The directory to diff against. If omitted, choose from Drupal config directories."
                }
            ],
            "examples": [
                {
                    "description": "Provide a config directory",
                    "execution": "drupal config:diff ..\/config\/path"
                }
            ],
            "aliases": [
                "cdi"
            ],
            "key": "config.diff",
            "dashed": "config-diff",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:edit",
            "description": "\u8a2d\u5b9a\u3092\u7de8\u96c6\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "config-name",
                    "description": "\u8a2d\u5b9a\u306e\u540d\u524d"
                },
                {
                    "name": "editor",
                    "description": "\u7de8\u96c6\u306b\u4f7f\u7528\u3059\u308b\u30a8\u30c7\u30a3\u30bf"
                }
            ],
            "examples": [
                {
                    "description": "Edit system cron configurations with \"vim\" (default editor).",
                    "execution": "drupal config:edit system.cron"
                },
                {
                    "description": "Edit system cron configurations with \"gedit\".",
                    "execution": "drupal config:edit system.cron gedit"
                }
            ],
            "aliases": [
                "ced",
                "cdit"
            ],
            "key": "config.edit",
            "dashed": "config-edit",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export",
            "description": "\u8a2d\u5b9a\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b",
            "options": [
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                },
                {
                    "name": "tar",
                    "description": "If set, the configuration will be exported to an archive file."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Optional you can add the path to export",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\""
                },
                {
                    "description": "If export will be in a compressed file and\/or if uuid and config hashes will be removed.",
                    "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\" \\\n  --tar \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ce"
            ],
            "key": "config.export",
            "dashed": "config-export",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:content:type",
            "description": "\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7\u3068\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "optional-config",
                    "description": "Export content type as an optional YAML configuration in your module"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.content.type.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.content.type.options.remove-config-hash"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "commands.config.export.content.type.options.include-module-dependencies"
                }
            ],
            "arguments": [
                {
                    "name": "content-type",
                    "description": "\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7"
                }
            ],
            "examples": [
                {
                    "description": "Provide a content type  and module name",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\""
                },
                {
                    "description": "If you want export content type provide the optional config",
                    "execution": "drupal config:export:content:type page \\\n  --module=\"demo\" \\\n  --optional-config \n"
                }
            ],
            "aliases": [
                "cect"
            ],
            "key": "config.export.content.type",
            "dashed": "config-export-content-type",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:entity",
            "description": "commands.config.export.entity.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "optional-config",
                    "description": "commands.config.export.entity.options.optional-config"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.entity.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.entity.options.remove-config-hash"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "commands.config.export.entity.options.include-module-dependencies"
                }
            ],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.config.export.entity.arguments.entity-type"
                },
                {
                    "name": "bundle",
                    "description": "commands.config.export.entity.arguments.bundle"
                }
            ],
            "examples": [],
            "aliases": [
                "cee"
            ],
            "key": "config.export.entity",
            "dashed": "config-export-entity",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:single",
            "description": "\u5358\u4e00\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092yml\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8",
            "options": [
                {
                    "name": "name",
                    "description": "commands.config.export.single.options.name"
                },
                {
                    "name": "directory",
                    "description": "Define the export directory to save the configuration output."
                },
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "include-dependencies",
                    "description": "Export dependencies of the configuration as well."
                },
                {
                    "name": "optional",
                    "description": "Export config as an optional YAML configuration in your module"
                },
                {
                    "name": "remove-uuid",
                    "description": "If set, the configuration will be exported without uuid key."
                },
                {
                    "name": "remove-config-hash",
                    "description": "If set, the configuration will be exported without the default site hash key."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide config settings name to be exported",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name"
                },
                {
                    "description": "if uuid and\/or config hashes will be removed.",
                    "execution": "drupal config:export:single \\\n  --name=config.settings.name \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                }
            ],
            "aliases": [
                "ces"
            ],
            "key": "config.export.single",
            "dashed": "config-export-single",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:export:view",
            "description": "Export a view in YAML format inside a provided module to reuse in other website.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "optional-config",
                    "description": "Export view as an optional YAML configuration in your module"
                },
                {
                    "name": "include-module-dependencies",
                    "description": "Include module dependencies in module info YAML file"
                },
                {
                    "name": "remove-uuid",
                    "description": "commands.config.export.entity.options.remove-uuid"
                },
                {
                    "name": "remove-config-hash",
                    "description": "commands.config.export.entity.options.remove-config-hash"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "View ID"
                }
            ],
            "examples": [
                {
                    "description": "Provide a view id",
                    "execution": "drupal config:export:view viewid"
                },
                {
                    "description": "You can provide the interactive values like parameter.",
                    "execution": "drupal config:export:view viewid \\\n  --module=\"modulename\" \\\n  --optional-config \\\n  --include-module-dependencies\n"
                }
            ],
            "aliases": [
                "cev"
            ],
            "key": "config.export.view",
            "dashed": "config-export-view",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:import",
            "description": "Import configuration to current application.",
            "options": [
                {
                    "name": "file",
                    "description": "Path to an archive file of configuration to import."
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                },
                {
                    "name": "remove-files",
                    "description": "Remove files after synchronization."
                },
                {
                    "name": "skip-uuid",
                    "description": "commands.config.import.options.skip-uuid"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide a configuration file",
                    "execution": "drupal config:import \\\n  --file=\/path\/to\/config\/file"
                },
                {
                    "description": "Provide a configuration directory",
                    "execution": "drupal config:import  \\\n  --directory=\/path\/to\/config\/dir\n"
                }
            ],
            "aliases": [
                "ci"
            ],
            "key": "config.import",
            "dashed": "config-import",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:import:single",
            "description": "Import the selected configuration.",
            "options": [
                {
                    "name": "file",
                    "description": "The file(s) name or file(s) absolute path to import"
                },
                {
                    "name": "directory",
                    "description": "Path to a directory of configuration to import."
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Providing a file option using full path.",
                    "execution": "drupal config:import:single \\\n  --file=\"\/path\/to\/file\/block.block.default_block.yml\""
                },
                {
                    "description": "Providing file and directory options",
                    "execution": "drupal config:import:single  \\\n  --file=\"block.block.default_block.yml\" \\\n  --directory=\"\/path\/to\/directory\"\n"
                }
            ],
            "aliases": [
                "cis"
            ],
            "key": "config.import.single",
            "dashed": "config-import-single",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:override",
            "description": "Override config value in active configuration.",
            "options": [
                {
                    "name": "key",
                    "description": "commands.config.override.options.key"
                },
                {
                    "name": "value",
                    "description": "commands.config.override.options.value"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Configuration name"
                }
            ],
            "examples": [
                {
                    "description": "D\u00e9finir la valeur de \"flood\" du module Contact \u00e0 10.",
                    "execution": "drupal config:override contact.settings flood.limit 10"
                }
            ],
            "aliases": [
                "co"
            ],
            "key": "config.override",
            "dashed": "config-override",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "config:validate",
            "description": "Validate a drupal config against its schema",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Provide the configuration name.",
                    "execution": "drupal config:validate configuration.name"
                }
            ],
            "aliases": [
                "cv"
            ],
            "key": "config.validate",
            "dashed": "config-validate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:comments",
            "description": "\u30c0\u30df\u30fc\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u4f5c\u6210",
            "options": [
                {
                    "name": "limit",
                    "description": "\u4f5c\u6210\u3059\u308b\u30b3\u30e1\u30f3\u30c8\u306e\u6570"
                },
                {
                    "name": "title-words",
                    "description": "\u30b3\u30e1\u30f3\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u8a2d\u5b9a\u3059\u308b\u5358\u8a9e\u306e\u6700\u5927\u6570"
                },
                {
                    "name": "time-range",
                    "description": "\u30b3\u30e1\u30f3\u30c8\u306e\u4f5c\u6210\u6642\u523b"
                }
            ],
            "arguments": [
                {
                    "name": "node-id",
                    "description": "\u30b3\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30ce\u30fc\u30c9\u306eID"
                }
            ],
            "examples": [
                {
                    "description": "Provide the node id where the comments will be generated.",
                    "execution": "drupal create:comments  node-id"
                },
                {
                    "description": "Provide number of comments to generate, max title words and time range.",
                    "execution": "drupal create:comments  node-id \\\n  --limit=\"2\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "crc"
            ],
            "key": "create.comments",
            "dashed": "create-comments",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:nodes",
            "description": "\u30c0\u30df\u30fc\u306e\u30ce\u30fc\u30c9\u3092\u4f5c\u6210",
            "options": [
                {
                    "name": "limit",
                    "description": "\u4f5c\u6210\u3059\u308b\u30ce\u30fc\u30c9\u306e\u6570"
                },
                {
                    "name": "title-words",
                    "description": "\u30bf\u30a4\u30c8\u30eb\u306b\u8a2d\u5b9a\u3059\u308b\u306e\u5358\u8a9e\u306e\u6700\u5927\u6570"
                },
                {
                    "name": "time-range",
                    "description": "\u30ce\u30fc\u30c9\u306e\u4f5c\u6210\u6642\u523b"
                },
                {
                    "name": "revision",
                    "description": "commands.create.nodes.options.revision"
                },
                {
                    "name": "language",
                    "description": "commands.create.nodes.options.language"
                }
            ],
            "arguments": [
                {
                    "name": "content-types",
                    "description": "\u4f5c\u6210\u3059\u308b\u30ce\u30fc\u30c9\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7 (\u8907\u6570\u6307\u5b9a\u53ef)"
                }
            ],
            "examples": [
                {
                    "description": "Provide the content type name.",
                    "execution": "drupal create:nodes content-name"
                },
                {
                    "description": "Provide the limit of publications, limit of title words, time range and language.",
                    "execution": "drupal create:nodes content-name \\\n  --limit=\"5\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\" \\\n  --language=\"und\"\n"
                }
            ],
            "aliases": [
                "crn"
            ],
            "key": "create.nodes",
            "dashed": "create-nodes",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:roles",
            "description": "commands.create.roles.description",
            "options": [
                {
                    "name": "limit",
                    "description": "commands.create.roles.options.limit"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "crr"
            ],
            "key": "create.roles",
            "dashed": "create-roles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:terms",
            "description": "\u30c0\u30df\u30fc\u306e\u30bf\u30fc\u30e0\u3092\u4f5c\u6210",
            "options": [
                {
                    "name": "limit",
                    "description": "\u4f5c\u6210\u3059\u308b\u30bf\u30fc\u30e0\u306e\u6570"
                },
                {
                    "name": "name-words",
                    "description": "\u30bf\u30fc\u30e0\u306e\u540d\u524d\u306b\u8a2d\u5b9a\u3059\u308b\u306e\u5358\u8a9e\u306e\u6700\u5927\u6570"
                }
            ],
            "arguments": [
                {
                    "name": "vocabularies",
                    "description": "\u4f5c\u6210\u3059\u308b\u30bf\u30fc\u30e0\u306e\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u30fc (\u8907\u6570\u6307\u5b9a\u53ef)"
                }
            ],
            "examples": [
                {
                    "description": "Provide the vocabulary term name.",
                    "execution": "drupal create:terms vocabulary"
                },
                {
                    "description": "Provide the limit of terms to add and limit of title words.",
                    "execution": "drupal create:terms tags \\\n  --limit=\"10\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crt"
            ],
            "key": "create.terms",
            "dashed": "create-terms",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:users",
            "description": "\u30c0\u30df\u30fc\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210",
            "options": [
                {
                    "name": "limit",
                    "description": "\u4f5c\u6210\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u6570"
                },
                {
                    "name": "password",
                    "description": "\u4f5c\u6210\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9"
                },
                {
                    "name": "time-range",
                    "description": "\u30e6\u30fc\u30b6\u30fc\u306e\u4f5c\u6210\u6642\u523b"
                }
            ],
            "arguments": [
                {
                    "name": "roles",
                    "description": "\u4f5c\u6210\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u30ed\u30fc\u30eb (\u8907\u6570\u6307\u5b9a\u53ef)"
                }
            ],
            "examples": [
                {
                    "description": "Provide the user role.",
                    "execution": "drupal create:users role"
                },
                {
                    "description": "Provide the number of users to create, password and time range to create.",
                    "execution": "drupal create:users role \\\n  --limit=\"5\" \\\n  --password=\"usersnewpassword\" \\\n  --time-range=\"1\"\n"
                }
            ],
            "aliases": [
                "cru"
            ],
            "key": "create.users",
            "dashed": "create-users",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "create:vocabularies",
            "description": "\u30c0\u30df\u30fc\u306e\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u30fc\u3092\u8ffd\u52a0",
            "options": [
                {
                    "name": "limit",
                    "description": "\u4f5c\u6210\u3059\u308b\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u30fc\u306e\u6570"
                },
                {
                    "name": "name-words",
                    "description": "\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u30fc\u306e\u540d\u524d\u306b\u8a2d\u5b9a\u3059\u308b\u306e\u5358\u8a9e\u306e\u6700\u5927\u6570"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Provide the number of vocabularies to create and maximum number of words in vocabulary names",
                    "execution": "drupal create:vocabularies \\\n  --limit=\"5\" \\\n  --name-words=\"5\"\n"
                }
            ],
            "aliases": [
                "crv"
            ],
            "key": "create.vocabularies",
            "dashed": "create-vocabularies",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cron:execute",
            "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u5358\u4f4d\u3001\u3082\u3057\u304f\u306f\u5168\u3066\u306ecron\u3092\u5b9f\u884c",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                }
            ],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                },
                {
                    "description": "Execute the cron on the specified module",
                    "execution": "drupal cron:execute \\\n  <module>\n"
                }
            ],
            "aliases": [
                "croe",
                "cre"
            ],
            "key": "cron.execute",
            "dashed": "cron-execute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "cron:release",
            "description": "Cron\u306e\u30b7\u30b9\u30c6\u30e0\u30ed\u30c3\u30af\u3092\u89e3\u653e",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Execute the cron globally",
                    "execution": "drupal cron:execute\n"
                }
            ],
            "aliases": [
                "cror"
            ],
            "key": "cron.release",
            "dashed": "cron-release",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:add",
            "description": "Add a database to settings.php",
            "options": [
                {
                    "name": "database",
                    "description": "The database name"
                },
                {
                    "name": "username",
                    "description": "The database username"
                },
                {
                    "name": "password",
                    "description": "The database password"
                },
                {
                    "name": "prefix",
                    "description": "The database prefix"
                },
                {
                    "name": "host",
                    "description": "The database host address"
                },
                {
                    "name": "port",
                    "description": "The database host port"
                },
                {
                    "name": "driver",
                    "description": "The database driver"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Add a database to the settings.php",
                    "execution": "drupal database:add \\\n  --database=DATABASE \\\n  --username=USERNAME \\\n  --password=PASSWORD\n"
                }
            ],
            "aliases": [
                "dba"
            ],
            "key": "database.add",
            "dashed": "database-add",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:client",
            "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u8d77\u52d5",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "settings.php\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ad\u30fc"
                },
                {
                    "name": "target",
                    "description": "commands.database.client.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Launch the default client or could launch another regarding the specification on the argument",
                    "execution": "drupal database:client <database>\n"
                }
            ],
            "aliases": [
                "dbc"
            ],
            "key": "database.client",
            "dashed": "database-client",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:connect",
            "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u8d77\u52d5",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "commands.database.connect.arguments.key"
                },
                {
                    "name": "target",
                    "description": "commands.database.connect.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Connects to an specified database, or the default if not arguments passed",
                    "execution": "drupal database:connect \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbco",
                "sqlc"
            ],
            "key": "database.connect",
            "dashed": "database-connect",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:drop",
            "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u5168\u3066\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u524a\u9664",
            "options": [],
            "arguments": [
                {
                    "name": "database",
                    "description": "settings.php\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ad\u30fc"
                },
                {
                    "name": "target",
                    "description": "commands.database.drop.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Drop the tables on the database specified on the argument",
                    "execution": "drupal database:drop \\\n  <database>\n"
                }
            ],
            "aliases": [
                "dbd"
            ],
            "key": "database.drop",
            "dashed": "database-drop",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:dump",
            "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u69cb\u9020\u3068\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30c0\u30f3\u30d7",
            "options": [
                {
                    "name": "file",
                    "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u540d"
                },
                {
                    "name": "gz",
                    "description": "Pass this option if you want the sql result file gzipped"
                },
                {
                    "name": "exclude-cache",
                    "description": "commands.database.dump.options.exclude.cache"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "settings.php\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ad\u30fc"
                },
                {
                    "name": "target",
                    "description": "commands.database.dump.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Dump default database or the one specified on the argument",
                    "execution": "drupal database:dump \\\n  <database>"
                },
                {
                    "description": "Dump in gz compressed format",
                    "execution": "drupal database:dump \\\n  --gz"
                }
            ],
            "aliases": [
                "dbdu"
            ],
            "key": "database.dump",
            "dashed": "database-dump",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:log:clear",
            "description": "DbLog\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u524a\u9664\u3059\u308b",
            "options": [
                {
                    "name": "type",
                    "description": "\u30a4\u30d9\u30f3\u30c8\u3092\u7279\u5b9a\u306e\u30bf\u30a4\u30d7\u3067\u30d5\u30a3\u30eb\u30bf\u3059\u308b"
                },
                {
                    "name": "severity",
                    "description": "\u30a4\u30d9\u30f3\u30c8\u3092\u7279\u5b9a\u306e\u91cd\u8981\u5ea6\u306e\u30ec\u30d9\u30eb\u3067\u30d5\u30a3\u30eb\u30bf\u3059\u308b"
                },
                {
                    "name": "user-id",
                    "description": "\u30a4\u30d9\u30f3\u30c8\u3092\u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u30fcID\u3067\u30d5\u30a3\u30eb\u30bf\u3059\u308b"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "DBLog\u306e\u30a4\u30d9\u30f3\u30c8ID"
                }
            ],
            "examples": [
                {
                    "description": "Clear the database log from DBLog table",
                    "execution": "drupal database:log:clear \\\n  <database>"
                },
                {
                    "description": "Clear the database log from DBLog table using filters",
                    "execution": "drupal database:log:clear \\\n  <database> \\\n  --type=TYPE \\\n  --severity=SEVERITY"
                }
            ],
            "aliases": [
                "dblc"
            ],
            "key": "database.log.clear",
            "dashed": "database-log-clear",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:log:poll",
            "description": "Poll the watchdog and print new log entries every x seconds",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                }
            ],
            "arguments": [
                {
                    "name": "duration",
                    "description": "Duration in seconds which to sleep between database reads"
                }
            ],
            "examples": [
                {
                    "description": "Print the log entries on screen every x seconds",
                    "execution": "drupal database:log:poll \\\n  100\n"
                }
            ],
            "aliases": [
                "dblp"
            ],
            "key": "database.log.poll",
            "dashed": "database-log-poll",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:query",
            "description": "Executes a SQL statement directly as argument",
            "options": [
                {
                    "name": "quick",
                    "description": "Do not cache each query result, print each row as it is received"
                },
                {
                    "name": "debug",
                    "description": "Prints debugging information and memory and CPU usage statistics when the program exits"
                },
                {
                    "name": "html",
                    "description": "Produce HTML output"
                },
                {
                    "name": "xml",
                    "description": "Produce XML output"
                },
                {
                    "name": "raw",
                    "description": "Special characters are not escaped in the output."
                },
                {
                    "name": "vertical",
                    "description": "Print query output rows vertically"
                },
                {
                    "name": "batch",
                    "description": "Print results using tab as the column separator, with each row on a new line. With this option, mysql does not use the history file"
                }
            ],
            "arguments": [
                {
                    "name": "query",
                    "description": "The SQL statement to execute"
                },
                {
                    "name": "database",
                    "description": "Database key from settings.php"
                },
                {
                    "name": "target",
                    "description": "commands.database.connect.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Send a database query",
                    "execution": "drupal database:query 'select * from node limit 0,1'\n"
                }
            ],
            "aliases": [
                "dbq",
                "sqlq"
            ],
            "key": "database.query",
            "dashed": "database-query",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "database:restore",
            "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u69cb\u9020\u3068\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ea\u30b9\u30c8\u30a2",
            "options": [
                {
                    "name": "file",
                    "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d"
                }
            ],
            "arguments": [
                {
                    "name": "database",
                    "description": "settings.php\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ad\u30fc"
                },
                {
                    "name": "target",
                    "description": "commands.database.restore.arguments.target"
                }
            ],
            "examples": [
                {
                    "description": "Restore the database file dump to the database default or another one specified",
                    "execution": "drupal database:restore \\\n  --file='\/srv\/dump\/db.sql'\n"
                }
            ],
            "aliases": [
                "dbr"
            ],
            "key": "database.restore",
            "dashed": "database-restore",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:breakpoints",
            "description": "\u5229\u7528\u53ef\u80fd\u306a\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u89a7\u3092\u8868\u793a",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "Enter Breakpoint Group Name"
                }
            ],
            "examples": [
                {
                    "description": "Provide a group name.",
                    "execution": "drupal breakpoints:debug bartik"
                }
            ],
            "aliases": [
                "dbre"
            ],
            "key": "debug.breakpoints",
            "dashed": "debug-breakpoints",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:cache:context",
            "description": "Displays current cache context for the application.",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays cache context",
                    "execution": "drupal debug:cache:context\n"
                }
            ],
            "aliases": [
                "dcc"
            ],
            "key": "debug.cache.context",
            "dashed": "debug-cache-context",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:chain",
            "description": "\u30c1\u30a7\u30fc\u30f3\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dch"
            ],
            "key": "debug.chain",
            "dashed": "debug-chain",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config",
            "description": "\u73fe\u5728\u306e\u8a2d\u5b9a\u3092\u8868\u793a\u3059\u308b",
            "options": [
                {
                    "name": "show-overridden",
                    "description": "commands.debug.config.options.show-overridden"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "\u8a2d\u5b9a\u306e\u540d\u524d"
                }
            ],
            "examples": [
                {
                    "description": "List all configuration object names.",
                    "execution": "drupal config:debug"
                },
                {
                    "description": "Display system site configurations values.",
                    "execution": "drupal config:debug system.site"
                },
                {
                    "description": "List all system configuration names.",
                    "execution": "drupal config:debug | grep system"
                }
            ],
            "aliases": [
                "dc"
            ],
            "key": "debug.config",
            "dashed": "debug-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config:settings",
            "description": "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5185\u306eKey-Value\u30da\u30a2\u3092\u8868\u793a\u3059\u308b",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays key:value as per the settings file",
                    "execution": "drupal debug:config:settings\n"
                }
            ],
            "aliases": [
                "dcs"
            ],
            "key": "debug.config.settings",
            "dashed": "debug-config-settings",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:config:validate",
            "description": "Validate a schema implementation before a module is installed.",
            "options": [
                {
                    "name": "schema-name",
                    "description": ""
                }
            ],
            "arguments": [
                {
                    "name": "filepath",
                    "description": ""
                },
                {
                    "name": "schema-filepath",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:config:validate \\\n  \/path\/to\/file \\\n  \/path\/to\/schema-filepath\n"
                }
            ],
            "aliases": [
                "dcv"
            ],
            "key": "debug.config.validate",
            "dashed": "debug-config-validate",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:container",
            "description": "\u30b5\u30fc\u30d3\u30b9\u3092\u8868\u793a",
            "options": [
                {
                    "name": "parameters",
                    "description": "\u30b5\u30fc\u30d3\u30b9\u540d"
                },
                {
                    "name": "tag",
                    "description": "commands.debug.container.options.tag"
                }
            ],
            "arguments": [
                {
                    "name": "service",
                    "description": "\u30b5\u30fc\u30d3\u30b9\u540d"
                },
                {
                    "name": "method",
                    "description": "Method name."
                },
                {
                    "name": "arguments",
                    "description": "Array of Arguments in CSV or JSON format."
                }
            ],
            "examples": [
                {
                    "description": "Displays the views.views_data_helper services",
                    "execution": "drupal debug:container views.views_data_helper\n"
                }
            ],
            "aliases": [
                "dco",
                "cod"
            ],
            "key": "debug.container",
            "dashed": "debug-container",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:cron",
            "description": "cron\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e00\u89a7\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "This will show a list with modules implementing the cron hook",
                    "execution": "drupal debug:cron\n"
                }
            ],
            "aliases": [
                "dcr"
            ],
            "key": "debug.cron",
            "dashed": "debug-cron",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:database:log",
            "description": "DBLog\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8868\u793a",
            "options": [
                {
                    "name": "type",
                    "description": "Filter events by a specific type"
                },
                {
                    "name": "severity",
                    "description": "Filter events by a specific level of severity"
                },
                {
                    "name": "user-id",
                    "description": "Filter events by a specific user id"
                },
                {
                    "name": "asc",
                    "description": "\u30a4\u30d9\u30f3\u30c8\u306e\u4e00\u89a7\u3092\u6607\u9806\u3067\u8868\u793a"
                },
                {
                    "name": "limit",
                    "description": "\u7d50\u679c\u306e\u8868\u793a\u4ef6\u6570\u3092\u6307\u5b9a\u3057\u305f\u5024\u306b\u5236\u9650"
                },
                {
                    "name": "offset",
                    "description": "\u30aa\u30d5\u30bb\u30c3\u30c8"
                },
                {
                    "name": "yml",
                    "description": "Print in a yml style"
                }
            ],
            "arguments": [
                {
                    "name": "event-id",
                    "description": "DBLog\u306e\u30a4\u30d9\u30f3\u30c8ID"
                }
            ],
            "examples": [
                {
                    "description": "List all the entries on the log",
                    "execution": "drupal debug:database:log"
                },
                {
                    "description": "List specific log entry by Event ID",
                    "execution": "drupal debug:database:log 21228\n"
                }
            ],
            "aliases": [
                "dbb",
                "ws"
            ],
            "key": "debug.database.log",
            "dashed": "debug-database-log",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:database:table",
            "description": "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u793a",
            "options": [
                {
                    "name": "database",
                    "description": "settings.php\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ad\u30fc"
                }
            ],
            "arguments": [
                {
                    "name": "table",
                    "description": "\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u30c6\u30fc\u30d6\u30eb"
                }
            ],
            "examples": [
                {
                    "description": "Show all tables on a database",
                    "execution": "drupal debug:database:table"
                },
                {
                    "description": "Show fields on the node table or another specified on the argument",
                    "execution": "drupal debug:database:table node\n"
                }
            ],
            "aliases": [
                "ddt"
            ],
            "key": "debug.database.table",
            "dashed": "debug-database-table",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:dotenv",
            "description": "Debug Dotenv debug values.",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "debug.dotenv",
            "dashed": "debug-dotenv",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:entity",
            "description": "Debug entities available in the system",
            "options": [],
            "arguments": [
                {
                    "name": "entity-type",
                    "description": "commands.debug.entity.arguments.entity-type"
                }
            ],
            "examples": [
                {
                    "description": "Displays the available entities",
                    "execution": "drupal debug:entity\n"
                }
            ],
            "aliases": [
                "de"
            ],
            "key": "debug.entity",
            "dashed": "debug-entity",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:event",
            "description": "Display current events ",
            "options": [],
            "arguments": [
                {
                    "name": "event",
                    "description": "Event to debug"
                }
            ],
            "examples": [
                {
                    "description": "List all the events that could be debugged",
                    "execution": "drupal debug:evet"
                },
                {
                    "description": "Show the information for the kernel.request event",
                    "execution": "drupal debug:event kernel.request"
                }
            ],
            "aliases": [
                "dev"
            ],
            "key": "debug.event",
            "dashed": "debug-event",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:hook",
            "description": "commands.debug.hook.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dbh"
            ],
            "key": "debug.hook",
            "dashed": "debug-hook",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:image:styles",
            "description": "\u753b\u50cf\u30b9\u30bf\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List all images styles on the site",
                    "execution": "drupal debug:image:styles\n"
                }
            ],
            "aliases": [
                "dis"
            ],
            "key": "debug.image.styles",
            "dashed": "debug-image-styles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:libraries",
            "description": "\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8868\u793a",
            "options": [],
            "arguments": [
                {
                    "name": "group",
                    "description": "\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044"
                }
            ],
            "examples": [
                {
                    "description": "List all available libraries",
                    "execution": "drupal debug:libraries\n"
                },
                {
                    "description": "List block library information",
                    "execution": "drupal debug:libraries block\n"
                }
            ],
            "aliases": [
                "dl"
            ],
            "key": "debug.libraries",
            "dashed": "debug-libraries",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:module",
            "description": "\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8868\u793a",
            "options": [
                {
                    "name": "status",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30b9\u30c6\u30fc\u30bf\u30b9 [enabled|disabled]"
                },
                {
                    "name": "type",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30bf\u30a4\u30d7 [core|no-core]"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module name"
                }
            ],
            "examples": [
                {
                    "description": "Display all installed modules",
                    "execution": "drupal mod --status=installed"
                },
                {
                    "description": "Display all installed and no core modules",
                    "execution": "drupal mod --status=installed --type=no-core"
                }
            ],
            "aliases": [
                "dm"
            ],
            "key": "debug.module",
            "dashed": "debug-module",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:multisite",
            "description": "\u30de\u30eb\u30c1\u30b5\u30a4\u30c8\u306e\u4e00\u89a7\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays multisite information",
                    "execution": "drupal debug:multisite\n"
                }
            ],
            "aliases": [
                "dmu",
                "msd"
            ],
            "key": "debug.multisite",
            "dashed": "debug-multisite",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:permission",
            "description": "Displays all user permissions.",
            "options": [],
            "arguments": [
                {
                    "name": "role",
                    "description": "User role"
                }
            ],
            "examples": [
                {
                    "description": "Displays all the permissions availables on the site",
                    "execution": "drupal debug:permission\n"
                }
            ],
            "aliases": [
                "dp"
            ],
            "key": "debug.permission",
            "dashed": "debug-permission",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:plugin",
            "description": "Display all plugin types, plugin instances of a specific type, or the definition for a specific plugin.",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Plugin type"
                },
                {
                    "name": "id",
                    "description": "Plugin ID"
                }
            ],
            "examples": [
                {
                    "description": "Displays a list with all the plugins on the current site",
                    "execution": "drupal debug:plugin"
                },
                {
                    "description": "Displays block plugin information",
                    "execution": "drupal debug:plugin block"
                },
                {
                    "description": "Displays block broken information",
                    "execution": "drupal debug:plugin block broken\n"
                }
            ],
            "aliases": [
                "dpl"
            ],
            "key": "debug.plugin",
            "dashed": "debug-plugin",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:queue",
            "description": "\u30ad\u30e5\u30fc\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Displays the queues of the application",
                    "execution": "drupal debug:queue\n"
                }
            ],
            "aliases": [
                "dq"
            ],
            "key": "debug.queue",
            "dashed": "debug-queue",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:roles",
            "description": "commands.debug.roles.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "dusr"
            ],
            "key": "debug.roles",
            "dashed": "debug-roles",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:router",
            "description": "\u30eb\u30fc\u30c8\u3092\u8868\u793a",
            "options": [
                {
                    "name": "pattern",
                    "description": "commands.debug.router.options.pattern"
                }
            ],
            "arguments": [
                {
                    "name": "route-name",
                    "description": "\u30eb\u30fc\u30c8\u306e\u540d\u524d"
                }
            ],
            "examples": [
                {
                    "description": "Displays current routes for the application",
                    "execution": "drupal rod"
                },
                {
                    "description": "Displays details for the route user.page (\/user)",
                    "execution": "drupal rod user.page"
                }
            ],
            "aliases": [
                "dr",
                "rod"
            ],
            "key": "debug.router",
            "dashed": "debug-router",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:settings",
            "description": "Drupal Console\u306e\u30e6\u30fc\u30b6\u30fc\u8a2d\u5b9a\u3092\u8868\u793a\u3059\u308b",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:settings\n"
                }
            ],
            "aliases": [
                "dse"
            ],
            "key": "debug.settings",
            "dashed": "debug-settings",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:site",
            "description": "\u5168\u3066\u306e\u30ed\u30fc\u30ab\u30eb\u304a\u3088\u3073\u30ea\u30e2\u30fc\u30c8\u30b5\u30a4\u30c8\u3092\u8868\u793a\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "target",
                    "description": "Target"
                },
                {
                    "name": "property",
                    "description": "Property"
                }
            ],
            "examples": [
                {
                    "description": "",
                    "execution": "drupal debug:site\n"
                }
            ],
            "aliases": [
                "dsi"
            ],
            "key": "debug.site",
            "dashed": "debug-site",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:state",
            "description": "\u30b9\u30c6\u30fc\u30c8\u30ad\u30fc\u3092\u8868\u793a",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "\u8868\u793a\u3059\u308b\u30b9\u30c6\u30fc\u30c8\u30ad\u30fc"
                }
            ],
            "examples": [
                {
                    "description": "List of the states on the site",
                    "execution": "drupal debug:state\n"
                },
                {
                    "description": "Displays a detail of the state install_task tok from the list of states",
                    "execution": "drupal debug:state install_task\n"
                }
            ],
            "aliases": [
                "dst"
            ],
            "key": "debug.state",
            "dashed": "debug-state",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:theme",
            "description": "\u30c6\u30fc\u30de\u306e\u60c5\u5831\u3092\u8868\u793a",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "\u8868\u793a\u3059\u308b\u30c6\u30fc\u30de\u306e\u540d\u524d"
                }
            ],
            "examples": [
                {
                    "description": "List of themes on the site",
                    "execution": "drupal debug:theme"
                },
                {
                    "description": "Bartik theme information",
                    "execution": "drupal debug:theme bartik"
                }
            ],
            "aliases": [
                "dt",
                "tde"
            ],
            "key": "debug.theme",
            "dashed": "debug-theme",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:theme:keys",
            "description": "commands.debug.theme.keys.description",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "commands.debug.theme.keys.arguments.key"
                }
            ],
            "examples": [],
            "aliases": [
                "dtk"
            ],
            "key": "debug.theme.keys",
            "dashed": "debug-theme-keys",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:update",
            "description": "\u5229\u7528\u53ef\u80fd\u306a\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u8868\u793a",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "List of pending updates",
                    "execution": "drupal debug:update\n"
                }
            ],
            "aliases": [
                "du",
                "upd"
            ],
            "key": "debug.update",
            "dashed": "debug-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:update:composer",
            "description": "commands.debug.update.composer.description",
            "options": [
                {
                    "name": "only-drupal",
                    "description": "commands.debug.update.composer.options.only-drupal"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "duc"
            ],
            "key": "debug.update.composer",
            "dashed": "debug-update-composer",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:user",
            "description": "\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u8868\u793a",
            "options": [
                {
                    "name": "uid",
                    "description": "Filters the result list by uids [between quotes separated by spaces]"
                },
                {
                    "name": "username",
                    "description": "Filters the result list by usernames [between quotes separated by spaces]"
                },
                {
                    "name": "mail",
                    "description": "Filters the result list by user's e-mail [between quotes separated by spaces]"
                },
                {
                    "name": "roles",
                    "description": "\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u4f7f\u7528\u3059\u308b\u30ed\u30fc\u30eb"
                },
                {
                    "name": "limit",
                    "description": "\u8868\u793a\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u6570"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Users list on the site",
                    "execution": "drupal debug:user\n"
                }
            ],
            "aliases": [
                "dus"
            ],
            "key": "debug.user",
            "dashed": "debug-user",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:views",
            "description": "Views\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8868\u793a\u3059\u308b",
            "options": [
                {
                    "name": "tag",
                    "description": "\u30d3\u30e5\u30fc\u306e\u30bf\u30b0"
                },
                {
                    "name": "status",
                    "description": "\u30d3\u30e5\u30fc\u306e\u30b9\u30c6\u30fc\u30bf\u30b9 (Enabled|Disabled)"
                }
            ],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "\u30d3\u30e5\u30fc\u306eID"
                }
            ],
            "examples": [
                {
                    "description": "List of views on the site",
                    "execution": "drupal debug:views\n"
                }
            ],
            "aliases": [
                "vde"
            ],
            "key": "debug.views",
            "dashed": "debug-views",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "debug:views:plugins",
            "description": "Views\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8868\u793a",
            "options": [],
            "arguments": [
                {
                    "name": "type",
                    "description": "Views\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30bf\u30a4\u30d7\u3067\u30d5\u30a3\u30eb\u30bf"
                }
            ],
            "examples": [
                {
                    "description": "List of views plugins",
                    "execution": "drupal debug:views:plugins\n"
                }
            ],
            "aliases": [
                "dvp"
            ],
            "key": "debug.views.plugins",
            "dashed": "debug-views-plugins",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "demo:harold",
            "description": "Download Drupal + Drupal Console to contribute.",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "demo.harold",
            "dashed": "demo-harold",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "devel:dumper",
            "description": "commands.devel.dumper.messages.change-devel-dumper-plugin",
            "options": [],
            "arguments": [
                {
                    "name": "dumper",
                    "description": "commands.devel.dumper.messages.name-devel-dumper-plugin"
                }
            ],
            "examples": [],
            "aliases": [
                "dd"
            ],
            "key": "devel.dumper",
            "dashed": "devel-dumper",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:contribute",
            "description": "Download Drupal + Drupal Console to contribute.",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.contribute",
            "dashed": "develop-contribute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:create:symlinks",
            "description": "Create symlinks between Drupal site and cloned repositories.",
            "options": [
                {
                    "name": "code-directory",
                    "description": "The directory where the projects were cloned"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.create.symlinks",
            "dashed": "develop-create-symlinks",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:cheatsheet",
            "description": "Generate a printable cheatsheet for Commands",
            "options": [
                {
                    "name": "path",
                    "description": "The path to generate the pdf for the documentation"
                },
                {
                    "name": "wkhtmltopdf",
                    "description": "The path for the wkhtmltopdf binary in your system"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdc"
            ],
            "key": "develop.doc.cheatsheet",
            "dashed": "develop-doc-cheatsheet",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:dash",
            "description": "Generate the DrupalConsole.docset package for Dash",
            "options": [
                {
                    "name": "path",
                    "description": "The path to the directory where the docset will be saved."
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdd"
            ],
            "key": "develop.doc.dash",
            "dashed": "develop-doc-dash",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:data",
            "description": "Generate documentations for Commands.",
            "options": [
                {
                    "name": "file",
                    "description": "The file to render the command data"
                },
                {
                    "name": "help",
                    "description": "Display this help message"
                },
                {
                    "name": "quiet",
                    "description": "Do not output any message"
                },
                {
                    "name": "verbose",
                    "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                },
                {
                    "name": "version",
                    "description": "Display this application version"
                },
                {
                    "name": "ansi",
                    "description": "Force ANSI output"
                },
                {
                    "name": "no-ansi",
                    "description": "Disable ANSI output"
                },
                {
                    "name": "no-interaction",
                    "description": "Do not ask any interactive question"
                },
                {
                    "name": "env",
                    "description": "\u74b0\u5883\u306e\u540d\u524d"
                },
                {
                    "name": "root",
                    "description": "\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308bDrupal\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b"
                },
                {
                    "name": "debug",
                    "description": "application.options.debug"
                },
                {
                    "name": "learning",
                    "description": "\u5197\u9577\u306a\u30b3\u30fc\u30c9\u306e\u51fa\u529b\u3092\u884c\u3046"
                },
                {
                    "name": "generate-chain",
                    "description": "\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u5f15\u6570\u3092\u30c1\u30a7\u30fc\u30f3\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u8868\u793a\u3059\u308b"
                },
                {
                    "name": "generate-inline",
                    "description": "\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u5f15\u6570\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u8868\u793a\u3059\u308b"
                },
                {
                    "name": "generate-doc",
                    "description": "\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u5f15\u6570\u3092Markdown\u3068\u3057\u3066\u8868\u793a\u3059\u308b"
                },
                {
                    "name": "target",
                    "description": "\u30b5\u30a4\u30c8\u540d (\u30ed\u30fc\u30ab\u30eb\u3082\u3057\u304f\u306f\u30ea\u30e2\u30fc\u30c8\u30b5\u30a4\u30c8\u5411\u3051)"
                },
                {
                    "name": "uri",
                    "description": "Drupal\u30b5\u30a4\u30c8\u306eURI (\u30de\u30eb\u30c1\u30b5\u30a4\u30c8\u3084\u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306e\u30dd\u30fc\u30c8\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b)"
                },
                {
                    "name": "yes",
                    "description": "\u78ba\u8a8d\u30d7\u30ed\u30bb\u30b9\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b"
                }
            ],
            "arguments": [
                {
                    "name": "command",
                    "description": "The command to execute"
                }
            ],
            "examples": [],
            "aliases": [
                "gdda"
            ],
            "key": "develop.doc.data",
            "dashed": "develop-doc-data",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:doc:gitbook",
            "description": "Generate documentations for Commands",
            "options": [
                {
                    "name": "path",
                    "description": "The path to render the documentation"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gdg"
            ],
            "key": "develop.doc.gitbook",
            "dashed": "develop-doc-gitbook",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:example",
            "description": null,
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.example",
            "dashed": "develop-example",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:example:container:aware",
            "description": null,
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "develop.example.container.aware",
            "dashed": "develop-example-container-aware",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:cleanup",
            "description": "\u7ffb\u8a33\u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "language",
                    "description": "\u82f1\u8a9e\u306b\u5bfe\u3057\u3066\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u8a00\u8a9e"
                },
                {
                    "name": "library",
                    "description": "Library to clean up files against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Delete all unnecessary files in all languages.",
                    "execution": "drupal translation:cleanup"
                },
                {
                    "description": "Delete all unnecessary files in Spanish language",
                    "execution": "drupal translation:cleanup es"
                },
                {
                    "description": "Delete all unnecessary files in all languages in console-develop library",
                    "execution": "drupal translation:cleanup all console-develop"
                },
                {
                    "description": "Delete all unnecessary files in Spanish language in console-develop library",
                    "execution": "drupal translation:cleanup es console-develop"
                }
            ],
            "aliases": [
                "tc"
            ],
            "key": "develop.translation.cleanup",
            "dashed": "develop-translation-cleanup",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:pending",
            "description": "\u7ffb\u8a33\u3055\u308c\u3066\u3044\u306a\u3044\u6587\u5b57\u5217\u3092\u691c\u51fa\u3059\u308b",
            "options": [
                {
                    "name": "file",
                    "description": "\u7ffb\u8a33\u3055\u308c\u3066\u3044\u306a\u3044\u6587\u5b57\u5217\u3092\u691c\u51fa\u3059\u308b\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u540d"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "\u7ffb\u8a33\u3055\u308c\u3066\u3044\u306a\u3044\u6587\u5b57\u5217\u3092\u691c\u51fa\u3059\u308b\u5bfe\u8c61\u306e\u8a00\u8a9e"
                },
                {
                    "name": "library",
                    "description": "Library to determine pending translations against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Determine pending translation strings in all languages.",
                    "execution": "drupal translation:pending"
                },
                {
                    "description": "Determine pending translation strings in Spanish language",
                    "execution": "drupal translation:pending es"
                },
                {
                    "description": "Determine pending translation strings in all languages in console-develop library",
                    "execution": "drupal translation:pending all console-develop"
                },
                {
                    "description": "Determine pending translation strings in Spanish language in console-develop library",
                    "execution": "drupal translation:pending es console-develop"
                }
            ],
            "aliases": [
                "tp"
            ],
            "key": "develop.translation.pending",
            "dashed": "develop-translation-pending",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:stats",
            "description": "\u7ffb\u8a33\u306e\u7d71\u8a08\u3092\u751f\u6210\u3059\u308b",
            "options": [
                {
                    "name": "format",
                    "description": "\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u5b9a\u7fa9 table|markdown"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "\u82f1\u8a9e\u306b\u5bfe\u3057\u3066\u306e\u7ffb\u8a33\u306e\u7d71\u8a08\u3092\u751f\u6210\u3059\u308b\u8a00\u8a9e"
                },
                {
                    "name": "library",
                    "description": "Library to calculate translation stats against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Calculate translation stats in all languages.",
                    "execution": "drupal translation:stats"
                },
                {
                    "description": "Calculate translation stats in Spanish language",
                    "execution": "drupal translation:stats es"
                },
                {
                    "description": "Calculate translation stats in all languages in console-develop library",
                    "execution": "drupal translation:stats all console-develop"
                },
                {
                    "description": "Calculate translation stats in Spanish language in console-develop library",
                    "execution": "drupal translation:stats es console-develop"
                }
            ],
            "aliases": [
                "ts"
            ],
            "key": "develop.translation.stats",
            "dashed": "develop-translation-stats",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "develop:translation:sync",
            "description": "\u7ffb\u8a33\u30d5\u30a1\u30a4\u30eb\u3092\u540c\u671f\u3059\u308b",
            "options": [
                {
                    "name": "file",
                    "description": "commands.develop.translation.stats.options.file"
                }
            ],
            "arguments": [
                {
                    "name": "language",
                    "description": "\u82f1\u8a9e\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u540c\u671f\u3059\u308b\u8a00\u8a9e"
                },
                {
                    "name": "library",
                    "description": "Library to syncronize against English i.e console-yaml"
                }
            ],
            "examples": [
                {
                    "description": "Syncronize translation files in all languages.",
                    "execution": "drupal translation:sync"
                },
                {
                    "description": "Syncronize translation files in Spanish language",
                    "execution": "drupal translation:sync es"
                },
                {
                    "description": "Syncronize translation files in all languages in console-develop library",
                    "execution": "drupal translation:sync all console-develop"
                },
                {
                    "description": "Syncronize translation files in Spanish language in console-develop library",
                    "execution": "drupal translation:sync es console-develop"
                }
            ],
            "aliases": [
                "tsy"
            ],
            "key": "develop.translation.sync",
            "dashed": "develop-translation-sync",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "docker:init",
            "description": "commands.docker.init.description",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "docker.init",
            "dashed": "docker-init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "dotenv:init",
            "description": "commands.dotenv.init.description",
            "options": [
                {
                    "name": "load-from-env",
                    "description": "commands.dotenv.init.options.load-from-env"
                },
                {
                    "name": "load-settings",
                    "description": "commands.dotenv.init.options.load-settings"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "dotenv.init",
            "dashed": "dotenv-init",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "entity:delete",
            "description": "Delete an specific entity",
            "options": [
                {
                    "name": "all",
                    "description": "commands.entity.delete.options.all"
                }
            ],
            "arguments": [
                {
                    "name": "entity-definition-id",
                    "description": "Entity definition id"
                },
                {
                    "name": "entity-id",
                    "description": "Entity ID to be deleted"
                }
            ],
            "examples": [
                {
                    "description": "Delete entity type content using node id",
                    "execution": "drupal entity:delete node 1"
                }
            ],
            "aliases": [
                "ed"
            ],
            "key": "entity.delete",
            "dashed": "entity-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "field:info",
            "description": "View information about fields.",
            "options": [
                {
                    "name": "detailed",
                    "description": "Extended output with machine names and descriptions"
                },
                {
                    "name": "entity",
                    "description": "Restrict to a specific fieldabe entity type, for example: node, comment, taxonomy_term, shortcut, block_content, contact_message"
                },
                {
                    "name": "bundle",
                    "description": "Restrict to a specific bundle type, for example: article"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "fii"
            ],
            "key": "field.info",
            "dashed": "field-info",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:ajax:command",
            "description": "commands.generate.ajax.command.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "commands.generate.ajax.command.options.class"
                },
                {
                    "name": "method",
                    "description": "commands.generate.ajax.command.options.method"
                },
                {
                    "name": "js-name",
                    "description": "commands.generate.ajax.command.options.js-name"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gac"
            ],
            "key": "generate.ajax.command",
            "dashed": "generate-ajax-command",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:authentication:provider",
            "description": "Generate an Authentication Provider",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Authentication Provider class"
                },
                {
                    "name": "provider-id",
                    "description": "Provider ID"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an authentication provider specifying the module, the class and the provider id",
                    "execution": "drupal generate:authentication:provider  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAuthenticationProvider\"  \\\n  --provider-id=\"default_authentication_provider\"\n"
                }
            ],
            "aliases": [
                "gap"
            ],
            "key": "generate.authentication.provider",
            "dashed": "generate-authentication-provider",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:breakpoint",
            "description": "Generate breakpoint",
            "options": [
                {
                    "name": "theme",
                    "description": "Theme name"
                },
                {
                    "name": "breakpoints",
                    "description": "Breakpoints"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a breakpoint specifying the theme, a breakpoint name, its label, the media query, its weight and multipliers",
                    "execution": "drupal generate:breakpoint  \\\n  --theme=\"classy\"  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'"
                }
            ],
            "aliases": [
                "gb"
            ],
            "key": "generate.breakpoint",
            "dashed": "generate-breakpoint",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:cache:context",
            "description": "Generate a cache context",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "cache-context",
                    "description": "commands.generate.cache.context.options.name"
                },
                {
                    "name": "class",
                    "description": "commands.generate.cache.context.options.class"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate cache for a context specifying the module, the context name and its class",
                    "execution": "drupal generate:cache:context  \\\n  --module=\"modulename\"  \\\n  --cache-context=\"ContextName\"  \\\n  --class=\"DefaultCacheContext\""
                }
            ],
            "aliases": [
                "gcc"
            ],
            "key": "generate.cache.context",
            "dashed": "generate-cache-context",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:command",
            "description": "Generate commands for the console.",
            "options": [
                {
                    "name": "extension",
                    "description": "The extension name."
                },
                {
                    "name": "extension-type",
                    "description": "The extension type."
                },
                {
                    "name": "class",
                    "description": "The Class that describes the command. (Must end with the word 'Commmand')."
                },
                {
                    "name": "name",
                    "description": "The Command name."
                },
                {
                    "name": "initialize",
                    "description": "commands.generate.command.options.initialize"
                },
                {
                    "name": "interact",
                    "description": "commands.generate.command.options.interact"
                },
                {
                    "name": "container-aware",
                    "description": "Is the command aware of the drupal site installation when executed"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "generator",
                    "description": "commands.generate.command.options.generator"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a command specifying the extension name and type, its class and the name.",
                    "execution": "drupal generate:command  \\\n  --extension=\"ExtensionName\"  \\\n  --extension-type=\"module\"  \\\n  --class=\"DefaultCommand\"  \\\n  --name=\"CommandName\""
                }
            ],
            "aliases": [
                "gco"
            ],
            "key": "generate.command",
            "dashed": "generate-command",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:composer",
            "description": "commands.generate.composer.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "name",
                    "description": "commands.generate.composer.options.name"
                },
                {
                    "name": "type",
                    "description": "commands.generate.composer.options.type"
                },
                {
                    "name": "description",
                    "description": "commands.generate.composer.options.description"
                },
                {
                    "name": "keywords",
                    "description": "commands.generate.composer.options.keywords"
                },
                {
                    "name": "license",
                    "description": "commands.generate.composer.options.license"
                },
                {
                    "name": "homepage",
                    "description": "commands.generate.composer.options.homepage"
                },
                {
                    "name": "minimum-stability",
                    "description": "commands.generate.composer.options.minimum-stability"
                },
                {
                    "name": "authors",
                    "description": "commands.generate.composer.options.authors"
                },
                {
                    "name": "support",
                    "description": "commands.generate.composer.options.support"
                },
                {
                    "name": "required",
                    "description": "commands.generate.composer.options.required"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gcom"
            ],
            "key": "generate.composer",
            "dashed": "generate-composer",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:controller",
            "description": "Generate & Register a controller",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Controller Class name"
                },
                {
                    "name": "routes",
                    "description": "The routes, must be an array containing [title, method, path]"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "test",
                    "description": "Generate a test class"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate controller specifying the module name, the class name and its routes",
                    "execution": "drupal generate:controller  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultController\"  \\\n  --routes='\"title\":\"ControllerMethod\", \"name\":\"modulename.default_controller_hello\", \"method\":\"hello\", \"path\":\"\/modulename\/hello\/{name}\"'  \\\n  --test"
                }
            ],
            "aliases": [
                "gcon"
            ],
            "key": "generate.controller",
            "dashed": "generate-controller",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:bundle",
            "description": "Generate a new content type (node \/ entity bundle)",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "bundle-name",
                    "description": "The content type's machine name"
                },
                {
                    "name": "bundle-title",
                    "description": "The content type's human-readable name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate bundle entity specifying the module, the bundle name and its title",
                    "execution": "drupal generate:entity:bundle  \\\n  --module=\"modulename\"  \\\n  --bundle-name=\"default\"  \\\n  --bundle-title=\"default\""
                }
            ],
            "aliases": [
                "geb"
            ],
            "key": "generate.entity.bundle",
            "dashed": "generate-entity-bundle",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:config",
            "description": "Generate a new config entity",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "entity-class",
                    "description": "The config entity class"
                },
                {
                    "name": "entity-name",
                    "description": "The config entity name"
                },
                {
                    "name": "base-path",
                    "description": "The base-path for the config entity routes"
                },
                {
                    "name": "label",
                    "description": "The label"
                },
                {
                    "name": "bundle-of",
                    "description": "Acts as bundle for content entities"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate config entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:config  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                }
            ],
            "aliases": [
                "gec"
            ],
            "key": "generate.entity.config",
            "dashed": "generate-entity-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:entity:content",
            "description": "Generate a new content entity",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "entity-class",
                    "description": "The content entity class"
                },
                {
                    "name": "entity-name",
                    "description": "The content entity name"
                },
                {
                    "name": "base-path",
                    "description": "The base-path for the content entity routes"
                },
                {
                    "name": "label",
                    "description": "The label"
                },
                {
                    "name": "has-bundles",
                    "description": "Entity has bundles"
                },
                {
                    "name": "is-translatable",
                    "description": "Content entity translatable"
                },
                {
                    "name": "revisionable",
                    "description": "commands.generate.entity.content.options.revisionable"
                },
                {
                    "name": "has-forms",
                    "description": "commands.generate.entity.content.options.has-forms"
                },
                {
                    "name": "has-owner",
                    "description": "commands.generate.entity.content.options.has-owner"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                },
                {
                    "description": "Generate a translatable and revisionable content entity specifying the module, the entity class, the entity name, its path and label",
                    "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\"  \\\n  --is-translatable  \\\n  --revisionable"
                }
            ],
            "aliases": [
                "geco"
            ],
            "key": "generate.entity.content",
            "dashed": "generate-entity-content",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:event:subscriber",
            "description": "Generate an event subscriber",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "name",
                    "description": "commands.generate.event.subscriber.options.name"
                },
                {
                    "name": "class",
                    "description": "commands.generate.event.subscriber.options.class"
                },
                {
                    "name": "events",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an event subscriber specifying the module name, its name, the class and the events to subscribe",
                    "execution": "drupal generate:event:subscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultSubscriber\"  \\\n  --events='kernel_request'\n"
                }
            ],
            "aliases": [
                "ges"
            ],
            "key": "generate.event.subscriber",
            "dashed": "generate-event-subscriber",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form",
            "description": "Generate a new \"FormBase\"",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "The form class name"
                },
                {
                    "name": "form-id",
                    "description": "The Form id"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "\u30d5\u30a9\u30fc\u30e0\u3078\u306e\u5165\u529b\u3092\u4f5c\u6210\u3059\u308b"
                },
                {
                    "name": "path",
                    "description": "Enter the form path"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an empty form with config file specifying the module name, the class, a form id and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --path=\"\/modulename\/form\/default\""
                },
                {
                    "description": "Generate a form with 2 fields and a config file specifying the module name, the class, a form id, the inputs and the path",
                    "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --inputs='\"name\":\"inputname\", \"type\":\"text_format\", \"label\":\"InputName\", \"options\":\"\", \"description\":\"Just a text input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --path=\"\/modulename\/form\/default\""
                }
            ],
            "aliases": [
                "gf"
            ],
            "key": "generate.form",
            "dashed": "generate-form",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form:alter",
            "description": "Generate an implementation of hook_form_alter() or hook_form_FORM_ID_alter",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "form-id",
                    "description": "Form ID to alter"
                },
                {
                    "name": "inputs",
                    "description": "\u30d5\u30a9\u30fc\u30e0\u3078\u306e\u5165\u529b\u3092\u4f5c\u6210\u3059\u308b"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook form alter for an empty form specifying the module name",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\""
                },
                {
                    "description": "Generate a hook form alter with 2 fields specifying the module name and the inputs",
                    "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gfa"
            ],
            "key": "generate.form.alter",
            "dashed": "generate-form-alter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:form:config",
            "description": "Generate a new \"ConfigFormBase\"",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "The form class name"
                },
                {
                    "name": "form-id",
                    "description": "The Form id"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "config-file",
                    "description": "Add a config file"
                },
                {
                    "name": "inputs",
                    "description": "\u30d5\u30a9\u30fc\u30e0\u3078\u306e\u5165\u529b\u3092\u4f5c\u6210\u3059\u308b"
                },
                {
                    "name": "path",
                    "description": "Enter the form path"
                },
                {
                    "name": "menu-link-gen",
                    "description": "Generate a menu link"
                },
                {
                    "name": "menu-link-title",
                    "description": "A title for the menu link"
                },
                {
                    "name": "menu-parent",
                    "description": "Menu parent"
                },
                {
                    "name": "menu-link-desc",
                    "description": "A description for the menu link"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gfc"
            ],
            "key": "generate.form.config",
            "dashed": "generate-form-config",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:help",
            "description": "Generate an implementation of hook_help()",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "description",
                    "description": "commands.generate.help.options.description"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a hook help specifying the module name and the description",
                    "execution": "drupal generate:help  \\\n  --module=\"modulename\"  \\\n  --description=\"My Awesome Module\""
                }
            ],
            "aliases": [
                "gh"
            ],
            "key": "generate.help",
            "dashed": "generate-help",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:jstest",
            "description": "commands.generate.jstest.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "commands.generate.jstest.options.class"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gjt"
            ],
            "key": "generate.jstest",
            "dashed": "generate-jstest",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:module",
            "description": "Generate a module.",
            "options": [
                {
                    "name": "module",
                    "description": "The Module name"
                },
                {
                    "name": "machine-name",
                    "description": "The machine name (lowercase and underscore only)"
                },
                {
                    "name": "module-path",
                    "description": "The path of the module"
                },
                {
                    "name": "description",
                    "description": "Module description"
                },
                {
                    "name": "core",
                    "description": "Core version"
                },
                {
                    "name": "package",
                    "description": "Module package"
                },
                {
                    "name": "module-file",
                    "description": "Add a .module file"
                },
                {
                    "name": "features-bundle",
                    "description": "Define module as feature using the given Features bundle name"
                },
                {
                    "name": "composer",
                    "description": "Add a composer.json file"
                },
                {
                    "name": "dependencies",
                    "description": "Module dependencies separated by commas (i.e. context, panels)"
                },
                {
                    "name": "test",
                    "description": "Generate a test class"
                },
                {
                    "name": "twigtemplate",
                    "description": "Generate theme template"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a module specifying the module name, machine name, the path, its description, drupal core and the package name. In this example the composer file, the unit test and twig template are generated too",
                    "execution": "drupal generate:module  \\\n  --module=\"modulename\"  \\\n  --machine-name=\"modulename\"  \\\n  --module-path=\"\/modules\/custom\"  \\\n  --description=\"My Awesome Module\"  \\\n  --core=\"8.x\"  \\\n  --package=\"Custom\"  \\\n  --module-file  \\\n  --composer  \\\n  --test  \\\n  --twigtemplate"
                }
            ],
            "aliases": [
                "gm"
            ],
            "key": "generate.module",
            "dashed": "generate-module",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:module:file",
            "description": "Generate a .module file",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate the .module file specifying the module name",
                    "execution": "drupal generate:module:file  \\\n  --module=\"modulename\""
                }
            ],
            "aliases": [
                "gmf"
            ],
            "key": "generate.module.file",
            "dashed": "generate-module-file",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:permissions",
            "description": "commands.generate.permissions.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "permissions",
                    "description": "\u6a29\u9650\u3092\u4f5c\u6210\u3059\u308b"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gp"
            ],
            "key": "generate.permissions",
            "dashed": "generate-permissions",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:block",
            "description": "Generate a plugin block",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-label",
                    "description": "commands.generate.plugin.block.options.plugin-label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "theme-region",
                    "description": "Theme region to render Plugin Block"
                },
                {
                    "name": "inputs",
                    "description": "\u30d5\u30a9\u30fc\u30e0\u3078\u306e\u5165\u529b\u3092\u4f5c\u6210\u3059\u308b"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "twigtemplate",
                    "description": "commands.generate.plugin.block.options.twigtemplate"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin block in the header region with an input field specifying the module name, the class, the label, its id, the region and the input",
                    "execution": "drupal generate:plugin:block  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultBlock\"  \\\n  --label=\"Default block\"  \\\n  --plugin-id=\"default_block\"  \\\n  --theme-region=\"header\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                }
            ],
            "aliases": [
                "gpb"
            ],
            "key": "generate.plugin.block",
            "dashed": "generate-plugin-block",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:ckeditorbutton",
            "description": "Generate CKEditor button plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin ID. NOTE: This corresponds to the CKEditor plugin name. It is the first argument of the CKEDITOR.plugins.add() function in the plugin.js file."
                },
                {
                    "name": "buttons",
                    "description": "commands.generate.plugin.ckeditorbutton.options.buttons"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate CKEditor button specifying the module name, the class, the label, its id, the button name and the icon path",
                    "execution": "drupal generate:plugin:ckeditorbutton  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultCKEditorButton\"  \\\n  --label=\"Default ckeditor button\"  \\\n  --plugin-id=\"default ckeditor button\"  \\\n  --button-name=\"Default ckeditor button\"  \\\n  --button-icon-path=\"modules\/custom\/modulename\/js\/plugins\/default ckeditor button\/images\/icon.png\""
                }
            ],
            "aliases": [
                "gpc"
            ],
            "key": "generate.plugin.ckeditorbutton",
            "dashed": "generate-plugin-ckeditorbutton",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:condition",
            "description": "Generate a plugin condition.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin condition class name"
                },
                {
                    "name": "label",
                    "description": "Plugin condition label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin condition id"
                },
                {
                    "name": "context-definition-id",
                    "description": "Context definition ID"
                },
                {
                    "name": "context-definition-label",
                    "description": "Context definition label"
                },
                {
                    "name": "context-definition-required",
                    "description": "Context definition is requiered (TRUE\/FALSE)"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin condition for a node entity type specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:node\"  \\\n  --context-definition-label=\"node\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for language specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"language\"  \\\n  --context-definition-label=\"Language\"  \\\n  --context-definition-required"
                },
                {
                    "description": "Generate a plugin condition for role configuration specifying the module name, the class, the label, its id and the context definition",
                    "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:user_role\"  \\\n  --context-definition-label=\"user_role\"  \\\n  --context-definition-required\n"
                }
            ],
            "aliases": [
                "gpco"
            ],
            "key": "generate.plugin.condition",
            "dashed": "generate-plugin-condition",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:field",
            "description": "Generate field type, widget and formatter plugins.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "type-class",
                    "description": "Field type plugin class name"
                },
                {
                    "name": "type-label",
                    "description": "Field type plugin label"
                },
                {
                    "name": "type-plugin-id",
                    "description": "Field type plugin id"
                },
                {
                    "name": "type-description",
                    "description": "Field type plugin description"
                },
                {
                    "name": "formatter-class",
                    "description": "Field formatter plugin class name"
                },
                {
                    "name": "formatter-label",
                    "description": "Field formatter plugin label"
                },
                {
                    "name": "formatter-plugin-id",
                    "description": "Field formatter plugin id"
                },
                {
                    "name": "widget-class",
                    "description": "Field formatter plugin class name"
                },
                {
                    "name": "widget-label",
                    "description": "Field widget plugin label"
                },
                {
                    "name": "widget-plugin-id",
                    "description": "Field widget plugin id"
                },
                {
                    "name": "field-type",
                    "description": "Field type the formatter and widget plugin can be used with"
                },
                {
                    "name": "default-widget",
                    "description": "Default field widget of the field type plugin"
                },
                {
                    "name": "default-formatter",
                    "description": "Default field formatter of field type plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate field type, widget and formatter plugins specifying the module name, the type (class, label, plugin id and description), the formatter (class, label, plugin id) and the widget (class, label and plugin id)",
                    "execution": "drupal generate:plugin:field  \\\n  --module=\"modulename\"  \\\n  --type-class=\"ExampleFieldType\"  \\\n  --type-label=\"Example field type\"  \\\n  --type-plugin-id=\"example_field_type\"  \\\n  --type-description=\"My Field Type\"  \\\n  --formatter-class=\"ExampleFormatterType\"  \\\n  --formatter-label=\"Example formatter type\"  \\\n  --formatter-plugin-id=\"example_formatter_type\"  \\\n  --widget-class=\"ExampleWidgetType\"  \\\n  --widget-label=\"Example widget type\"  \\\n  --widget-plugin-id=\"example_widget_type\"  \\\n  --field-type=\"example_field_type\"  \\\n  --default-widget=\"example_widget_type\"  \\\n  --default-formatter=\"example_formatter_type\"\n"
                }
            ],
            "aliases": [
                "gpf"
            ],
            "key": "generate.plugin.field",
            "dashed": "generate-plugin-field",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldformatter",
            "description": "Generate field formatter plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "field-type",
                    "description": "Field type the plugin can be used with"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a a text field formatter plugin specifying the module name, the class, the label its plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldFormatter\"  \\\n  --label=\"Example field formatter\"  \\\n  --plugin-id=\"example_field_formatter\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpff"
            ],
            "key": "generate.plugin.fieldformatter",
            "dashed": "generate-plugin-fieldformatter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldtype",
            "description": "Generate field type plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "description",
                    "description": "Plugin Description"
                },
                {
                    "name": "default-widget",
                    "description": "Default field widget of this plugin"
                },
                {
                    "name": "default-formatter",
                    "description": "Default field formatter of this plugin"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a field type plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\""
                },
                {
                    "description": "Generate a field type plugin with a default widget and formatter specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\"  \\\n  --default-widget=\"DefaultWidget\"  \\\n  --default-formatter=\"DefaultFormatter\"\n"
                }
            ],
            "aliases": [
                "gpft"
            ],
            "key": "generate.plugin.fieldtype",
            "dashed": "generate-plugin-fieldtype",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:fieldwidget",
            "description": "Generate field widget plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "field-type",
                    "description": "Field type the plugin can be used with"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a text type field widget plugin specifying the module name, the class, its label, the plugin id and the field type",
                    "execution": "drupal generate:plugin:fieldwidget  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldWidget\"  \\\n  --label=\"Example field widget\"  \\\n  --plugin-id=\"example_field_widget\"  \\\n  --field-type=\"text\"\n"
                }
            ],
            "aliases": [
                "gpfw"
            ],
            "key": "generate.plugin.fieldwidget",
            "dashed": "generate-plugin-fieldwidget",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:imageeffect",
            "description": "Generate image effect plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "description",
                    "description": "Plugin Description"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image effect plugin specifying the module name, the class, its label, the plugin id and a description",
                    "execution": "drupal generate:plugin:imageeffect  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultImageEffect\"  \\\n  --label=\"Default image effect\"  \\\n  --plugin-id=\"default_image_effect\"  \\\n  --description=\"My Image Effect\"\n"
                }
            ],
            "aliases": [
                "gpie"
            ],
            "key": "generate.plugin.imageeffect",
            "dashed": "generate-plugin-imageeffect",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:imageformatter",
            "description": "Generate image formatter plugin.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a image formatter plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:imageformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleImageFormatter\"  \\\n  --label=\"Example image formatter\"  \\\n  --plugin-id=\"example_image_formatter\"\n"
                }
            ],
            "aliases": [
                "gpif"
            ],
            "key": "generate.plugin.imageformatter",
            "dashed": "generate-plugin-imageformatter",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:mail",
            "description": "Generate a plugin mail",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "label",
                    "description": "Plugin label"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an email plugin specifying the module name, the class, its label and the plugin id",
                    "execution": "drupal generate:plugin:mail  \\\n  --module=\"modulename\"  \\\n  --class=\"HtmlFormatterMail\"  \\\n  --label=\"Html formatter mail\"  \\\n  --plugin-id=\"html_formatter_mail\"\n"
                }
            ],
            "aliases": [
                "gpm"
            ],
            "key": "generate.plugin.mail",
            "dashed": "generate-plugin-mail",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:dataparser",
            "description": "commands.generate.plugin.migrate.dataparser.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.migrate.dataparser.options.class"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.migrate.dataparser.options.plugin-id"
                },
                {
                    "name": "plugin-title",
                    "description": "commands.generate.plugin.migrate.dataparser.options.plugin-title"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpmdp"
            ],
            "key": "generate.plugin.migrate.dataparser",
            "dashed": "generate-plugin-migrate-dataparser",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:process",
            "description": "Generate a migrate process plugin",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration plugin process specifying the module name, the class and its id",
                    "execution": "drupal generate:plugin:migrate:process  \\\n  --module=\"modulename\"  \\\n  --class=\"MigrationProcess\"  \\\n  --plugin-id=\"migrationprocess\"\n"
                }
            ],
            "aliases": [
                "gpmp"
            ],
            "key": "generate.plugin.migrate.process",
            "dashed": "generate-plugin-migrate-process",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:migrate:source",
            "description": "Generate a migrate source plugin",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin id"
                },
                {
                    "name": "table",
                    "description": "Table to query"
                },
                {
                    "name": "alias",
                    "description": "Short alias to refer to the table as"
                },
                {
                    "name": "group-by",
                    "description": "Field to group results by"
                },
                {
                    "name": "fields",
                    "description": "Fields to export"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a migration source plugin specifying the module name, the class, its plugin id, the table and its alias",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --table=\"DefaultTableName\"  \\\n  --alias=\"D\""
                },
                {
                    "description": "Generate a migration source plugin for specific fields of the users table specifying the module name, the class, its plugin id, the table, its alias and the fields",
                    "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultPluginClass\"  \\\n  --plugin-id=\"default_plugin_class\"  \\\n  --table=\"users\"  \\\n  --alias=\"u\"  \\\n  --fields='\"id\":\"id\", \"description\":\"the user id\"'  \\\n  --fields='\"id\":\"username\", \"description\":\"the username\"'  \\\n  --fields='\"id\":\"password\", \"description\":\"the user password\"'  \\\n  --fields='\"id\":\"email\", \"description\":\"the user email\"'\n"
                }
            ],
            "aliases": [
                "gpms"
            ],
            "key": "generate.plugin.migrate.source",
            "dashed": "generate-plugin-migrate-source",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:queue",
            "description": "commands.generate.plugin.queue.description",
            "options": [
                {
                    "name": "module",
                    "description": "commands.generate.plugin.queue.options.module"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.queue.options.class"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.queue.options.plugin-id"
                },
                {
                    "name": "cron-time",
                    "description": "commands.generate.plugin.queue.options.cron-time"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.queue.options.label"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpqueue"
            ],
            "key": "generate.plugin.queue",
            "dashed": "generate-plugin-queue",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rest:resource",
            "description": "Generate plugin rest resource",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin Rest Resource class"
                },
                {
                    "name": "plugin-id",
                    "description": "Plugin Rest Resource id"
                },
                {
                    "name": "plugin-label",
                    "description": "Plugin Rest Resource Label"
                },
                {
                    "name": "plugin-url",
                    "description": "Plugin Rest Resource URL"
                },
                {
                    "name": "plugin-states",
                    "description": "Plugin Rest Resource States"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a rest resource plugin using GET specifying the module name, the class, the plugin id, its label, the target url and the request type",
                    "execution": "drupal generate:plugin:rest:resource  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultRestResource\"  \\\n  --plugin-id=\"default_rest_resource\"  \\\n  --plugin-label=\"Default rest resource\"  \\\n  --plugin-url=\"http:\/\/rest.resources.example.com\"  \\\n  --plugin-states='GET'\n"
                }
            ],
            "aliases": [
                "gprr"
            ],
            "key": "generate.plugin.rest.resource",
            "dashed": "generate-plugin-rest-resource",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rules:action",
            "description": "commands.generate.plugin.rules.action.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.rules.action.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.rules.action.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.rules.action.options.plugin-id"
                },
                {
                    "name": "category",
                    "description": "commands.generate.plugin.rules.action.options.category"
                },
                {
                    "name": "context",
                    "description": "commands.generate.plugin.rules.action.options.context"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpra"
            ],
            "key": "generate.plugin.rules.action",
            "dashed": "generate-plugin-rules-action",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:rules:dataprocessor",
            "description": "commands.generate.plugin.rules.dataprocessor.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.rules.dataprocessor.options.plugin-id"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gprd"
            ],
            "key": "generate.plugin.rules.dataprocessor",
            "dashed": "generate-plugin-rules-dataprocessor",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:skeleton",
            "description": "Generate an implementation of a skeleton plugin for those plugins Drupal Console do not have a specific generator",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "plugin-id",
                    "description": "The Plugin Id."
                },
                {
                    "name": "class",
                    "description": "Plugin class name"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin skeleton specifying module name, the plugin id and the class",
                    "execution": "drupal generate:plugin:skeleton  \\\n  --module=\"modulename\"  \\\n  --plugin-id=\"link_relation_type\"  \\\n  --class=\"DefaultLinkRelationType\"\n"
                }
            ],
            "aliases": [
                "gps"
            ],
            "key": "generate.plugin.skeleton",
            "dashed": "generate-plugin-skeleton",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:type:annotation",
            "description": "Generate a plugin type with annotation discovery",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin type class name"
                },
                {
                    "name": "machine-name",
                    "description": "commands.generate.plugin.type.annotation.options.plugin-id"
                },
                {
                    "name": "label",
                    "description": "Plugin type label"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with annotation discovery specifying module name, class name, machine name and label",
                    "execution": "drupal generate:plugin:type:annotation  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --machine-name=\"example_plugin\"  \\\n  --label=\"Example plugin\"\n"
                }
            ],
            "aliases": [
                "gpta"
            ],
            "key": "generate.plugin.type.annotation",
            "dashed": "generate-plugin-type-annotation",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:type:yaml",
            "description": "Generate a plugin type with Yaml discovery",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "Plugin type class name"
                },
                {
                    "name": "plugin-name",
                    "description": "Plugin type machine name"
                },
                {
                    "name": "plugin-file-name",
                    "description": "Plugin file name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a plugin with Yaml discovery specifying module name, class name, plugin name and plugin file name",
                    "execution": "drupal generate:plugin:type:yaml  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --plugin-name=\"example_plugin\"  \\\n  --plugin-file-name=\"example.plugin\"\n"
                }
            ],
            "aliases": [
                "gpty"
            ],
            "key": "generate.plugin.type.yaml",
            "dashed": "generate-plugin-type-yaml",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:validationconstraint",
            "description": "commands.generate.plugin.validationconstraint.description",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "class",
                    "description": "commands.generate.plugin.validationconstraint.options.class"
                },
                {
                    "name": "label",
                    "description": "commands.generate.plugin.validationconstraint.options.label"
                },
                {
                    "name": "plugin-id",
                    "description": "commands.generate.plugin.validationconstraint.options.plugin-id"
                },
                {
                    "name": "hook",
                    "description": "commands.generate.plugin.validationconstraint.options.hook"
                },
                {
                    "name": "field-id",
                    "description": "commands.generate.plugin.validationconstraint.options.field-id"
                },
                {
                    "name": "bundle",
                    "description": "commands.generate.plugin.validationconstraint.options.bundle"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gpvc"
            ],
            "key": "generate.plugin.validationconstraint",
            "dashed": "generate-plugin-validationconstraint",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:plugin:views:field",
            "description": "Generate a custom plugin view field.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "fields",
                    "description": "commands.generate.plugin.views.field.options.fields"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a custom view field plugin specifying the module name, the class, a title and its description",
                    "execution": "drupal generate:plugin:views:field  \\\n  --module=\"modulename\"  \\\n  --class=\"CustomViewsField\"  \\\n  --title=\"Custom views field\"  \\\n  --description=\"My awesome custom views field plugin.\"\n"
                }
            ],
            "aliases": [
                "gpvf"
            ],
            "key": "generate.plugin.views.field",
            "dashed": "generate-plugin-views-field",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:post:update",
            "description": "Generate an implementation of hook_post_update_NAME()",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "post-update-name",
                    "description": "Post Update Name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an implementation of post update hook specifying the module name and the post update name",
                    "execution": "drupal generate:post:update  \\\n  --module=\"modulename\"  \\\n  --post-update-name=\"PostUpdateName\"\n"
                }
            ],
            "aliases": [
                "gpu"
            ],
            "key": "generate.post.update",
            "dashed": "generate-post-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:profile",
            "description": "Generate a profile.",
            "options": [
                {
                    "name": "profile",
                    "description": "The profile name"
                },
                {
                    "name": "machine-name",
                    "description": "The machine name (lowercase and underscore only)"
                },
                {
                    "name": "profile-path",
                    "description": "commands.generate.profile.options.profile-path"
                },
                {
                    "name": "description",
                    "description": "Profile description"
                },
                {
                    "name": "core",
                    "description": "Core version"
                },
                {
                    "name": "dependencies",
                    "description": "Module dependencies separated by commas (i.e. context, panels)"
                },
                {
                    "name": "themes",
                    "description": "commands.generate.profile.options.themes"
                },
                {
                    "name": "distribution",
                    "description": "The distribution name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a profile specifying the profile name, the machine name, a description, the core and its module dependencies",
                    "execution": "drupal generate:profile  \\\n  --profile=\"NewProfileName\"  \\\n  --machine-name=\"newprofilename\"  \\\n  --description=\"My Useful Profile\"  \\\n  --core=\"8.x\"  \\\n  --dependencies=\"modulename\"\n"
                }
            ],
            "aliases": [
                "gpr"
            ],
            "key": "generate.profile",
            "dashed": "generate-profile",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:routesubscriber",
            "description": "Generate a RouteSubscriber",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "name",
                    "description": "Service name"
                },
                {
                    "name": "class",
                    "description": "Class name"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a route subscriber specifying the module name, the route name and its class",
                    "execution": "drupal generate:routesubscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.route_subscriber\"  \\\n  --class=\"RouteSubscriber\"\n"
                }
            ],
            "aliases": [
                "gr"
            ],
            "key": "generate.routesubscriber",
            "dashed": "generate-routesubscriber",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:service",
            "description": "Generate service",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "name",
                    "description": "Service name"
                },
                {
                    "name": "class",
                    "description": "Class name"
                },
                {
                    "name": "interface",
                    "description": "Interface"
                },
                {
                    "name": "interface-name",
                    "description": "commands.generate.service.options.interface-name"
                },
                {
                    "name": "logger-channel",
                    "description": "commands.generate.service.options.logger-channel"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                },
                {
                    "name": "path-service",
                    "description": "commands.generate.service.options.path-service"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a services without interface specifying the module name, the service name, the class and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\""
                },
                {
                    "description": "Generate a services with interface specifying the module name, the service name, the class, the interface name and its path",
                    "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --interface  \\\n  --interface-name=\"InterfaceName\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\"\n"
                }
            ],
            "aliases": [
                "gs"
            ],
            "key": "generate.service",
            "dashed": "generate-service",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:site:alias",
            "description": "commands.generate.site.alias.description",
            "options": [
                {
                    "name": "site",
                    "description": "commands.generate.site.alias.options.site"
                },
                {
                    "name": "name",
                    "description": "commands.generate.site.alias.options.name"
                },
                {
                    "name": "environment",
                    "description": "commands.generate.site.alias.options.environment"
                },
                {
                    "name": "type",
                    "description": "commands.generate.site.alias.options.type"
                },
                {
                    "name": "composer-root",
                    "description": "commands.generate.site.alias.options.composer-root"
                },
                {
                    "name": "site-uri",
                    "description": "commands.generate.site.alias.options.site-uri"
                },
                {
                    "name": "host",
                    "description": "commands.generate.site.alias.options.host"
                },
                {
                    "name": "user",
                    "description": "commands.generate.site.alias.options.user"
                },
                {
                    "name": "port",
                    "description": "commands.generate.site.alias.options.port"
                },
                {
                    "name": "drupal-console-binary",
                    "description": "commands.generate.site.alias.options.drupal-console-binary"
                },
                {
                    "name": "extra-options",
                    "description": "commands.generate.site.alias.options.extra-options"
                },
                {
                    "name": "directory",
                    "description": "commands.generate.site.alias.options.directory"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "gsa"
            ],
            "key": "generate.site.alias",
            "dashed": "generate-site-alias",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:theme",
            "description": "Generate a theme.",
            "options": [
                {
                    "name": "theme",
                    "description": "The theme name"
                },
                {
                    "name": "machine-name",
                    "description": "The machine name (lowercase and underscore only)"
                },
                {
                    "name": "theme-path",
                    "description": "The path of the theme"
                },
                {
                    "name": "description",
                    "description": "Theme description"
                },
                {
                    "name": "core",
                    "description": "Core version"
                },
                {
                    "name": "package",
                    "description": "Theme package"
                },
                {
                    "name": "global-library",
                    "description": "Global styling library name"
                },
                {
                    "name": "libraries",
                    "description": "commands.generate.theme.options.libraries"
                },
                {
                    "name": "base-theme",
                    "description": "Base theme (i.e. classy, stable)"
                },
                {
                    "name": "regions",
                    "description": "Regions"
                },
                {
                    "name": "breakpoints",
                    "description": "Breakpoints"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a theme without region and without breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name and the global library",
                    "execution": "drupal generate:theme  \\\n  --theme=\"AnotherTheme\"  \\\n  --machine-name=\"anothertheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"PackageName\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"false\""
                },
                {
                    "description": "Generate a theme base on stable theme with two region defined and one breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name, a global library, its base, the regions and the breakpoint",
                    "execution": "drupal generate:theme  \\\n  --theme=\"MyTheme\"  \\\n  --machine-name=\"mytheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"MyThemePackage\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"stable\"  \\\n  --regions='\"region_name\":\"Content\", \"region_machine_name\":\"content\"'  \\\n  --regions='\"region_name\":\"Panel\", \"region_machine_name\":\"panel\"'  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'\n"
                }
            ],
            "aliases": [
                "gt"
            ],
            "key": "generate.theme",
            "dashed": "generate-theme",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:twig:extension",
            "description": "Generate a Twig extension.",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "name",
                    "description": "Twig Extension name"
                },
                {
                    "name": "class",
                    "description": "\u30af\u30e9\u30b9\u540d"
                },
                {
                    "name": "services",
                    "description": "\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8aad\u307f\u8fbc\u3080"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate a twig extension specifying the module name, the extension name and its class",
                    "execution": "drupal generate:twig:extension  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.twig.extension\"  \\\n  --class=\"DefaultTwigExtension\"\n"
                }
            ],
            "aliases": [
                "gte"
            ],
            "key": "generate.twig.extension",
            "dashed": "generate-twig-extension",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "generate:update",
            "description": "Generate an implementation of hook_update_N()",
            "options": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "update-n",
                    "description": "Update Number"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Generate an update N hook implementation specifying the module name and the N value",
                    "execution": "drupal generate:update  \\\n  --module=\"modulename\"  \\\n  --update-n=\"8001\"\n"
                }
            ],
            "aliases": [
                "gu"
            ],
            "key": "generate.update",
            "dashed": "generate-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "image:styles:flush",
            "description": "\u753b\u50cf\u30b9\u30bf\u30a4\u30eb\u306e\u30d5\u30e9\u30c3\u30b7\u30e5\u3092\u5b9f\u884c",
            "options": [],
            "arguments": [
                {
                    "name": "styles",
                    "description": "\u753b\u50cf\u30b9\u30bf\u30a4\u30eb\u540d\u79f0"
                }
            ],
            "examples": [
                {
                    "description": "Flush large image style",
                    "execution": "drupal image:styles:flush  large"
                },
                {
                    "description": "Flush thumbnail image style",
                    "execution": "drupal image:styles:flush  thumbnail\n"
                }
            ],
            "aliases": [
                "isf"
            ],
            "key": "image.styles.flush",
            "dashed": "image-styles-flush",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:dependency:install",
            "description": "Install dependencies module in the application",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "Module or modules to be enabled should be separated by a space"
                }
            ],
            "examples": [
                {
                    "description": "Install the dependencies of the specfied module",
                    "execution": "drupal module:dependency:install  modulename\n"
                }
            ],
            "aliases": [
                "modi"
            ],
            "key": "module.dependency.install",
            "dashed": "module-dependency-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:download",
            "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9",
            "options": [
                {
                    "name": "path",
                    "description": "\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d1\u30b9"
                },
                {
                    "name": "latest",
                    "description": "\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"
                },
                {
                    "name": "composer",
                    "description": "Composer\u3092\u5229\u7528\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"
                },
                {
                    "name": "unstable",
                    "description": "commands.module.download.options.unstable"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d (\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a)"
                }
            ],
            "examples": [
                {
                    "description": "Download module specifying module name and its path",
                    "execution": "drupal module:download  modulename  \\\n  --path=\"modules\/contrib\"\n"
                }
            ],
            "aliases": [
                "mod"
            ],
            "key": "module.download",
            "dashed": "module-download",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:install",
            "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",
            "options": [
                {
                    "name": "latest",
                    "description": "\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"
                },
                {
                    "name": "composer",
                    "description": "Composer\u3092\u5229\u7528\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "\u6709\u52b9\u306b\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u540d (\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a)"
                }
            ],
            "examples": [
                {
                    "description": "Install module specifying the module name",
                    "execution": "drupal module:install  modulename\n"
                }
            ],
            "aliases": [
                "moi"
            ],
            "key": "module.install",
            "dashed": "module-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:path",
            "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u76f8\u5bfe\u30d1\u30b9\u307e\u305f\u306f\u7d76\u5bfe\u30d1\u30b9\u3092\u8fd4\u3059",
            "options": [
                {
                    "name": "absolute",
                    "description": "\u7d76\u5bfe\u30d1\u30b9\u3092\u8fd4\u3059"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d (\u30b7\u30b9\u30c6\u30e0\u5185\u90e8\u540d\u79f0)"
                }
            ],
            "examples": [
                {
                    "description": "Get the relative path of the module specifying the module name",
                    "execution": "drupal module:path  modulename\n"
                }
            ],
            "aliases": [
                "mop"
            ],
            "key": "module.path",
            "dashed": "module-path",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:uninstall",
            "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",
            "options": [
                {
                    "name": "force",
                    "description": "\u4f9d\u5b58\u95a2\u4fc2\u3092\u7121\u8996\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u304b\uff1f"
                },
                {
                    "name": "composer",
                    "description": "Composer\u3092\u5229\u7528\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "commands.module.uninstall.arguments.module"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall the module specifying the module name",
                    "execution": "drupal module:uninstall  modulename\n"
                }
            ],
            "aliases": [
                "mou"
            ],
            "key": "module.uninstall",
            "dashed": "module-uninstall",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "module:update",
            "description": "\u30b3\u30a2\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u66f4\u65b0",
            "options": [
                {
                    "name": "composer",
                    "description": "Composer\u3092\u4f7f\u7528\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u66f4\u65b0"
                },
                {
                    "name": "simulate",
                    "description": "Composer\u3092\u4f7f\u7528\u3057\u3066\u66f4\u65b0\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3"
                }
            ],
            "arguments": [
                {
                    "name": "module",
                    "description": "\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u540d (\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a)\u3002\u7a7a\u306e\u5834\u5408\u306fComposer\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30b3\u30a2\u304a\u3088\u3073\u5168\u3066\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002"
                }
            ],
            "examples": [
                {
                    "description": "Update module specifying module name and composer parameter",
                    "execution": "drupal module:update  modulename  \\\n  --composer\n"
                }
            ],
            "aliases": [
                "moup"
            ],
            "key": "module.update",
            "dashed": "module-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "multisite:new",
            "description": "Sets up the files for a new multisite install.",
            "options": [
                {
                    "name": "copy-default",
                    "description": "Copies existing site from the default install."
                }
            ],
            "arguments": [
                {
                    "name": "directory",
                    "description": "Name of directory under 'sites' which should be created."
                },
                {
                    "name": "uri",
                    "description": "Site URI to add to sites.php."
                }
            ],
            "examples": [
                {
                    "description": "Set up files for a multisite install specifying destination path and uri",
                    "execution": "drupal multisite:new  vendor\/newsite http:\/\/mysite.example.com\n"
                }
            ],
            "aliases": [
                "mun",
                "sn"
            ],
            "key": "multisite.new",
            "dashed": "multisite-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "multisite:update",
            "description": "commands.multisite.update.description",
            "options": [
                {
                    "name": "directory",
                    "description": "commands.multisite.update.options.directory"
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [
                "muu"
            ],
            "key": "multisite.update",
            "dashed": "multisite-update",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "node:access:rebuild",
            "description": "\u30ce\u30fc\u30c9\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u3092\u518d\u69cb\u7bc9\u3057\u307e\u3059\u3002\u5168\u3066\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u5bfe\u3059\u308b\u6a29\u9650\u8a2d\u5b9a\u3092\u524a\u9664\u3057\u3001\u73fe\u5728\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304a\u3088\u3073\u8a2d\u5b9a\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002",
            "options": [
                {
                    "name": "batch",
                    "description": "\u30d0\u30c3\u30c1\u30e2\u30fc\u30c9\u3067\u51e6\u7406\u3059\u308b"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "\u30ce\u30fc\u30c9\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u3092\u518d\u69cb\u7bc9",
                    "execution": "drupal node:access:rebuild --batch"
                }
            ],
            "aliases": [
                "nar"
            ],
            "key": "node.access.rebuild",
            "dashed": "node-access-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "queue:run",
            "description": "\u9078\u629e\u3057\u305f\u30ad\u30e5\u30fc\u3092\u51e6\u7406\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "\u30ad\u30e5\u30fc\u306e\u540d\u524d"
                }
            ],
            "examples": [],
            "aliases": [
                "qr"
            ],
            "key": "queue.run",
            "dashed": "queue-run",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "quick:start",
            "description": "Download, install and serve a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "quick.start",
            "dashed": "quick-start",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "role:delete",
            "description": "commands.role.delete.description",
            "options": [],
            "arguments": [
                {
                    "name": "roles",
                    "description": "commands.role.delete.argument.roles"
                }
            ],
            "examples": [],
            "aliases": [
                "rd"
            ],
            "key": "role.delete",
            "dashed": "role-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "role:new",
            "description": "commands.role.new.description",
            "options": [],
            "arguments": [
                {
                    "name": "rolename",
                    "description": "commands.role.new.argument.rolename"
                },
                {
                    "name": "machine-name",
                    "description": "commands.role.new.argument.machine-name"
                }
            ],
            "examples": [],
            "aliases": [
                "rn"
            ],
            "key": "role.new",
            "dashed": "role-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "router:rebuild",
            "description": "\u30eb\u30fc\u30c8\u3092\u518d\u69cb\u7bc9\u3059\u308b",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Rebuild routes",
                    "execution": "drupal router:rebuild"
                }
            ],
            "aliases": [
                "rr",
                "ror"
            ],
            "key": "router.rebuild",
            "dashed": "router-rebuild",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "settings:set",
            "description": "Change a specific setting value in DrupalConsole config file",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "Setting name in YAML flatten format to set a value in Drupal Console config file"
                },
                {
                    "name": "value",
                    "description": "Setting value to set in Drupal Console config file"
                }
            ],
            "examples": [
                {
                    "description": "Set application language setting value to \"es\"",
                    "execution": "drupal settings:set  application.language es"
                }
            ],
            "aliases": [],
            "key": "settings.set",
            "dashed": "settings-set",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:import:local",
            "description": "Import\/Configure an existing local Drupal project",
            "options": [
                {
                    "name": "environment",
                    "description": "Name of the environment that is going to be imported"
                }
            ],
            "arguments": [
                {
                    "name": "name",
                    "description": "Name that will be used to generate the site config"
                },
                {
                    "name": "directory",
                    "description": "Existing Drupal root directory"
                }
            ],
            "examples": [
                {
                    "description": "Import local drupal project specifying the site name and the path",
                    "execution": "drupal site:import:local  SiteName \/private\/var\/www\/vhost\/anexusit\/drupal8.dev\/web"
                }
            ],
            "aliases": [
                "sil"
            ],
            "key": "site.import.local",
            "dashed": "site-import-local",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:install",
            "description": "Drupal\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b",
            "options": [
                {
                    "name": "langcode",
                    "description": "Drupal\u306e\u8a00\u8a9e"
                },
                {
                    "name": "db-type",
                    "description": "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bf\u30a4\u30d7"
                },
                {
                    "name": "db-file",
                    "description": "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d5\u30a1\u30a4\u30eb"
                },
                {
                    "name": "db-host",
                    "description": "Database Host"
                },
                {
                    "name": "db-name",
                    "description": "Database Name"
                },
                {
                    "name": "db-user",
                    "description": "Database User"
                },
                {
                    "name": "db-pass",
                    "description": "Database Pass"
                },
                {
                    "name": "db-prefix",
                    "description": "Database Prefix"
                },
                {
                    "name": "db-port",
                    "description": "Database Port"
                },
                {
                    "name": "site-name",
                    "description": "Drupal\u306e\u30b5\u30a4\u30c8\u540d"
                },
                {
                    "name": "site-mail",
                    "description": "Drupal\u30b5\u30a4\u30c8\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9"
                },
                {
                    "name": "account-name",
                    "description": "\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u540d\u524d"
                },
                {
                    "name": "account-mail",
                    "description": "\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9"
                },
                {
                    "name": "account-pass",
                    "description": "\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9"
                },
                {
                    "name": "force",
                    "description": "commands.site.install.arguments.force"
                }
            ],
            "arguments": [
                {
                    "name": "profile",
                    "description": "Drupal\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb"
                },
                {
                    "name": "db-url",
                    "description": "commands.site.install.arguments.db-url"
                }
            ],
            "examples": [
                {
                    "description": "Install a drupal project specifying installation type, language code, database configuration, site name, site email and admin credential settings",
                    "execution": "drupal site:install  standard  \\\n  --langcode=\"en\"  \\\n  --db-type=\"mysql\"  \\\n  --db-host=\"127.0.0.1\"  \\\n  --db-name=\"drupal8\"  \\\n  --db-user=\"u53rn4m3\"  \\\n  --db-pass=\"dbp455\"  \\\n  --db-port=\"3306\"  \\\n  --site-name=\"Drupal 8\"  \\\n  --site-mail=\"admin@example.com\"  \\\n  --account-name=\"admin\"  \\\n  --account-mail=\"admin@example.com\"  \\\n  --account-pass=\"p455w0rd\"\n"
                }
            ],
            "aliases": [
                "si"
            ],
            "key": "site.install",
            "dashed": "site-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:maintenance",
            "description": "\u30b5\u30a4\u30c8\u3092\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "mode",
                    "description": "\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9"
                }
            ],
            "examples": [
                {
                    "description": "Switch on maintenance",
                    "execution": "drupal site:maintenance  on"
                },
                {
                    "description": "Switch off maintenance",
                    "execution": "drupal site:maintenance  off\n"
                }
            ],
            "aliases": [
                "sma"
            ],
            "key": "site.maintenance",
            "dashed": "site-maintenance",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:mode",
            "description": "\u30b7\u30b9\u30c6\u30e0\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u8a2d\u5b9a\u3092\u5207\u308a\u66ff\u3048\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "environment",
                    "description": "Environment name [dev, prod]"
                }
            ],
            "examples": [
                {
                    "description": "Switch system to prod",
                    "execution": "drupal site:mode  prod"
                },
                {
                    "description": "Switch system to dev",
                    "execution": "drupal site:mode  dev\n"
                }
            ],
            "aliases": [
                "smo"
            ],
            "key": "site.mode",
            "dashed": "site-mode",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:new",
            "description": "Download a new Drupal project",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "site.new",
            "dashed": "site-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:statistics",
            "description": "\u30b5\u30a4\u30c8\u306e\u7d71\u8a08\u60c5\u5831\u3092\u8868\u793a\u3059\u308b",
            "options": [],
            "arguments": [],
            "examples": [],
            "aliases": [
                "sst"
            ],
            "key": "site.statistics",
            "dashed": "site-statistics",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "site:status",
            "description": "Drupal\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u72b6\u614b\u3092\u8868\u793a\u3059\u308b",
            "options": [
                {
                    "name": "format",
                    "description": "commands.site.status.options.format"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Get drupal installation status specifying the output format as table",
                    "execution": "drupal site:status  \\\n  --format=\"table\"\n"
                }
            ],
            "aliases": [
                "ss",
                "st"
            ],
            "key": "site.status",
            "dashed": "site-status",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "state:delete",
            "description": "\u30b9\u30c6\u30fc\u30c8\u3092\u524a\u9664\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "name",
                    "description": "\u30b9\u30c6\u30fc\u30c8\u306e\u540d\u524d"
                }
            ],
            "examples": [
                {
                    "description": "Delete state specifying the state name",
                    "execution": "drupal state:delete  comment.maintain_entity_statistics\n"
                }
            ],
            "aliases": [
                "std"
            ],
            "key": "state.delete",
            "dashed": "state-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "state:override",
            "description": "\u30b9\u30c6\u30fc\u30c8\u30ad\u30fc\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "key",
                    "description": "\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30b9\u30c6\u30fc\u30c8\u30ad\u30fc"
                },
                {
                    "name": "value",
                    "description": "\u30bb\u30c3\u30c8\u3059\u308b\u5024"
                }
            ],
            "examples": [
                {
                    "description": "Override state value specifying the state name and the new value",
                    "execution": "drupal state:override  comment.node_comment_statistics_scale \"!!float 1\"\n"
                }
            ],
            "aliases": [
                "sto"
            ],
            "key": "state.override",
            "dashed": "state-override",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "taxonomy:term:delete",
            "description": "Delete taxonomy terms from a vocabulary",
            "options": [],
            "arguments": [
                {
                    "name": "vid",
                    "description": ""
                }
            ],
            "examples": [
                {
                    "description": "Delete all terms of the \"tags\" vocabulary",
                    "execution": "drupal taxonomy:term:delete  tags\n"
                }
            ],
            "aliases": [
                "ttd"
            ],
            "key": "taxonomy.term.delete",
            "dashed": "taxonomy-term-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:download",
            "description": "\u30c6\u30fc\u30de\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9",
            "options": [
                {
                    "name": "composer",
                    "description": "composer\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30fc\u30de\u3092\u7ba1\u7406\u3059\u308b"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "\u30c6\u30fc\u30de\u306e\u540d\u524d"
                },
                {
                    "name": "version",
                    "description": "\u30c6\u30fc\u30de\u306e\u30d0\u30fc\u30b8\u30e7\u30f3 (\u4f8b: 1.x-dev)"
                }
            ],
            "examples": [
                {
                    "description": "Download theme specifying name and version",
                    "execution": "drupal theme:download  Alina 7.x-1.2\n"
                }
            ],
            "aliases": [
                "thd"
            ],
            "key": "theme.download",
            "dashed": "theme-download",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:install",
            "description": "\u30c6\u30fc\u30de\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b",
            "options": [
                {
                    "name": "set-default",
                    "description": "\u30c7\u30d5\u30a9\u30eb\u30c8\u30c6\u30fc\u30de\u3068\u3057\u3066\u30bb\u30c3\u30c8\u3059\u308b"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30c6\u30fc\u30de\u540d (\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a)"
                }
            ],
            "examples": [
                {
                    "description": "Install theme specifying the name",
                    "execution": "drupal theme:install  mytheme\n"
                }
            ],
            "aliases": [
                "thi"
            ],
            "key": "theme.install",
            "dashed": "theme-install",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:path",
            "description": "\u30c6\u30fc\u30de\u306e\u76f8\u5bfe\u30d1\u30b9\u307e\u305f\u306f\u7d76\u5bfe\u30d1\u30b9\u3092\u8fd4\u3059",
            "options": [
                {
                    "name": "absolute",
                    "description": "\u7d76\u5bfe\u30d1\u30b9\u3092\u8fd4\u3059"
                }
            ],
            "arguments": [
                {
                    "name": "theme",
                    "description": "Theme name"
                }
            ],
            "examples": [
                {
                    "description": "Get the path of mytheme",
                    "execution": "drupal theme:path  mytheme\n"
                }
            ],
            "aliases": [
                "thp"
            ],
            "key": "theme.path",
            "dashed": "theme-path",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "theme:uninstall",
            "description": "\u30c6\u30fc\u30de\u3092\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "theme",
                    "description": "\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30c6\u30fc\u30de\u540d (\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a)"
                }
            ],
            "examples": [
                {
                    "description": "Uninstall theme specifying the name",
                    "execution": "drupal theme:uninstall  mytheme\n"
                }
            ],
            "aliases": [
                "thu"
            ],
            "key": "theme.uninstall",
            "dashed": "theme-uninstall",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "update:entities",
            "description": "\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u66f4\u65b0\u3092\u9069\u7528\u3059\u308b",
            "options": [],
            "arguments": [],
            "examples": [
                {
                    "description": "Update entities",
                    "execution": "drupal update:entities\n"
                }
            ],
            "aliases": [
                "upe"
            ],
            "key": "update.entities",
            "dashed": "update-entities",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "update:execute",
            "description": "Update N \u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "module",
                    "description": "\u30e2\u30b8\u30e5\u30fc\u30eb\u540d"
                },
                {
                    "name": "update-n",
                    "description": "\u5b9f\u884c\u3059\u308bUpdate N \u95a2\u6570"
                }
            ],
            "examples": [
                {
                    "description": "Update all entities",
                    "execution": "drupal update:execute\n"
                }
            ],
            "aliases": [
                "upex",
                "updb"
            ],
            "key": "update.execute",
            "dashed": "update-execute",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:create",
            "description": "Create users for the application",
            "options": [
                {
                    "name": "roles",
                    "description": "User roles"
                },
                {
                    "name": "email",
                    "description": "User email"
                },
                {
                    "name": "status",
                    "description": "User status"
                }
            ],
            "arguments": [
                {
                    "name": "username",
                    "description": "User name to be created"
                },
                {
                    "name": "password",
                    "description": "User password"
                }
            ],
            "examples": [
                {
                    "description": "Create user specifying username, password, role, email and status",
                    "execution": "drupal user:create  john p455w0rd  \\\n  --roles='authenticated'  \\\n  --email=\"john@anexusit.com\"  \\\n  --status=\"1\""
                },
                {
                    "description": "Create admin user specifying username, password, role, email and status",
                    "execution": "drupal user:create  doe p455w0rd  \\\n  --roles='administrator'  \\\n  --email=\"doe@anexusit.com\"  \\\n  --status=\"1\"\n"
                }
            ],
            "aliases": [
                "uc"
            ],
            "key": "user.create",
            "dashed": "user-create",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:delete",
            "description": "\u30e6\u30fc\u30b6\u30fc\u3092\u524a\u9664",
            "options": [
                {
                    "name": "user",
                    "description": "commands.user.delete.options.user"
                },
                {
                    "name": "roles",
                    "description": "\u524a\u9664\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30ed\u30fc\u30eb"
                }
            ],
            "arguments": [],
            "examples": [
                {
                    "description": "Delete user specifying the id and the user role",
                    "execution": "drupal user:delete  \\\n  --user-id=\"2\"\n  --roles='authenticated'"
                },
                {
                    "description": "Delete user specifying its id",
                    "execution": "drupal user:delete  \\\n  --user-id=\"3\"\n"
                }
            ],
            "aliases": [
                "ud"
            ],
            "key": "user.delete",
            "dashed": "user-delete",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:login:clear:attempts",
            "description": "\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30ed\u30b0\u30a4\u30f3\u8a66\u884c\u5c65\u6b74\u3092\u30af\u30ea\u30a2",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.login.clear.attempts.arguments.user"
                }
            ],
            "examples": [],
            "aliases": [
                "ulca",
                "uslca"
            ],
            "key": "user.login.clear.attempts",
            "dashed": "user-login-clear-attempts",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:login:url",
            "description": "\u30ef\u30f3\u30bf\u30a4\u30e0\u30ed\u30b0\u30a4\u30f3URL\u3092\u751f\u6210\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.login.url.options.user"
                }
            ],
            "examples": [
                {
                    "description": "Get one time login url for user id 1",
                    "execution": "drupal user:login:url  1\n"
                }
            ],
            "aliases": [
                "ulu",
                "usli",
                "uli"
            ],
            "key": "user.login.url",
            "dashed": "user-login-url",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:password:hash",
            "description": "\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304b\u3089\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u751f\u6210",
            "options": [],
            "arguments": [
                {
                    "name": "password",
                    "description": "\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9 (\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u7a7a\u767d\u533a\u5207\u308a)"
                }
            ],
            "examples": [
                {
                    "description": "Get hash of the word \"p455w0rd\"",
                    "execution": "drupal user:password:hash  p455w0rd\n"
                }
            ],
            "aliases": [
                "uph",
                "usph"
            ],
            "key": "user.password.hash",
            "dashed": "user-password-hash",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:password:reset",
            "description": "\u6307\u5b9a\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.password.reset.options.user"
                },
                {
                    "name": "password",
                    "description": "\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9"
                }
            ],
            "examples": [
                {
                    "description": "Update password specifying the user id and the new password",
                    "execution": "drupal user:password:reset  2 p455w0rd\n"
                }
            ],
            "aliases": [
                "upr",
                "upsr"
            ],
            "key": "user.password.reset",
            "dashed": "user-password-reset",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:role",
            "description": "\u30e6\u30fc\u30b6\u30fc\u306e\u5f79\u5272\u3092\u8ffd\u52a0\u30fb\u524a\u9664\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "operation",
                    "description": "\u8ffd\u52a0\u307e\u305f\u306f\u524a\u9664"
                },
                {
                    "name": "user",
                    "description": "\u5bfe\u8c61\u3068\u306a\u308b\u30e6\u30fc\u30b6\u30fc (1\u30e6\u30fc\u30b6\u30fc\u306e\u307f)"
                },
                {
                    "name": "role",
                    "description": "\u8ffd\u52a0\u30fb\u524a\u9664\u3059\u308b\u5f79\u5272\u3002\u30b7\u30b9\u30c6\u30e0\u5185\u90e8\u540d\u79f0\u30671\u3064\u3060\u3051\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"
                }
            ],
            "examples": [
                {
                    "description": "Add administrator role to the user admin specifying the username and the role",
                    "execution": "drupal user:role  add admin administrator"
                },
                {
                    "description": "Remove administrator role from the user admin specifying the username and the role",
                    "execution": "drupal user:role  remove admin administrator\n"
                }
            ],
            "aliases": [
                "ur"
            ],
            "key": "user.role",
            "dashed": "user-role",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "user:unblock",
            "description": "commands.user.unblock.description",
            "options": [],
            "arguments": [
                {
                    "name": "user",
                    "description": "commands.user.unblock.options.user"
                }
            ],
            "examples": [],
            "aliases": [
                "uu"
            ],
            "key": "user.unblock",
            "dashed": "user-unblock",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "version:new",
            "description": "Create new Drupal Console version",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "version.new",
            "dashed": "version-new",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "version:tag:release",
            "description": "Create new Drupal Console tag and release",
            "options": [
                {
                    "name": "file",
                    "description": ""
                }
            ],
            "arguments": [],
            "examples": [],
            "aliases": [],
            "key": "version.tag.release",
            "dashed": "version-tag-release",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "views:disable",
            "description": "Views\u3092\u7121\u52b9\u5316\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "\u30d3\u30e5\u30fc\u306eID"
                }
            ],
            "examples": [
                {
                    "description": "Disable content view",
                    "execution": "drupal views:disable  content\n"
                },
                {
                    "description": "Disable frontpage view",
                    "execution": "drupal views:disable  frontpage\n"
                }
            ],
            "aliases": [
                "vd",
                "vdi"
            ],
            "key": "views.disable",
            "dashed": "views-disable",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        },
        {
            "name": "views:enable",
            "description": "Views\u3092\u6709\u52b9\u5316\u3059\u308b",
            "options": [],
            "arguments": [
                {
                    "name": "view-id",
                    "description": "\u30d3\u30e5\u30fc\u306eID"
                }
            ],
            "examples": [
                {
                    "description": "Enable content view",
                    "execution": "drupal views:enable  content\n"
                },
                {
                    "description": "Enable frontpage view",
                    "execution": "drupal views:enable  frontpage\n"
                }
            ],
            "aliases": [
                "ve"
            ],
            "key": "views.enable",
            "dashed": "views-enable",
            "messages": {
                "usage": "Usage",
                "options": "Available options",
                "option": "Option",
                "details": "Details",
                "arguments": "Available arguments",
                "argument": "Argument",
                "examples": "Examples"
            }
        }
    ]
}